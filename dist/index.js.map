{"version":3,"sources":["../node_modules/@neon-rs/load/dist/index.js","../node_modules/detect-libc/lib/process.js","../node_modules/detect-libc/lib/filesystem.js","../node_modules/detect-libc/lib/detect-libc.js","../node_modules/libsql/sqlite-error.js","../node_modules/libsql/index.js","../node_modules/ws/lib/stream.js","../node_modules/ws/lib/constants.js","../node_modules/ws/lib/buffer-util.js","../node_modules/ws/lib/limiter.js","../node_modules/ws/lib/permessage-deflate.js","../node_modules/ws/lib/validation.js","../node_modules/ws/lib/receiver.js","../node_modules/ws/lib/sender.js","../node_modules/ws/lib/event-target.js","../node_modules/ws/lib/extension.js","../node_modules/ws/lib/websocket.js","../node_modules/ws/lib/subprotocol.js","../node_modules/ws/lib/websocket-server.js","../node_modules/promise-limit/index.js","../src/index.ts","../node_modules/@libsql/core/lib-esm/api.js","../node_modules/@libsql/core/lib-esm/uri.js","../node_modules/js-base64/base64.mjs","../node_modules/@libsql/core/lib-esm/util.js","../node_modules/@libsql/core/lib-esm/config.js","../node_modules/@libsql/client/lib-esm/sqlite3.js","../node_modules/ws/wrapper.mjs","../node_modules/@libsql/hrana-client/lib-esm/client.js","../node_modules/@libsql/hrana-client/lib-esm/errors.js","../node_modules/@libsql/hrana-client/lib-esm/encoding/json/decode.js","../node_modules/@libsql/hrana-client/lib-esm/encoding/json/encode.js","../node_modules/@libsql/hrana-client/lib-esm/encoding/protobuf/util.js","../node_modules/@libsql/hrana-client/lib-esm/encoding/protobuf/decode.js","../node_modules/@libsql/hrana-client/lib-esm/encoding/protobuf/encode.js","../node_modules/@libsql/hrana-client/lib-esm/id_alloc.js","../node_modules/@libsql/hrana-client/lib-esm/util.js","../node_modules/@libsql/hrana-client/lib-esm/value.js","../node_modules/@libsql/hrana-client/lib-esm/result.js","../node_modules/@libsql/hrana-client/lib-esm/sql.js","../node_modules/@libsql/hrana-client/lib-esm/queue.js","../node_modules/@libsql/hrana-client/lib-esm/stmt.js","../node_modules/@libsql/hrana-client/lib-esm/batch.js","../node_modules/@libsql/hrana-client/lib-esm/describe.js","../node_modules/@libsql/hrana-client/lib-esm/stream.js","../node_modules/@libsql/hrana-client/lib-esm/cursor.js","../node_modules/@libsql/hrana-client/lib-esm/ws/cursor.js","../node_modules/@libsql/hrana-client/lib-esm/ws/stream.js","../node_modules/@libsql/hrana-client/lib-esm/shared/json_encode.js","../node_modules/@libsql/hrana-client/lib-esm/ws/json_encode.js","../node_modules/@libsql/hrana-client/lib-esm/shared/protobuf_encode.js","../node_modules/@libsql/hrana-client/lib-esm/ws/protobuf_encode.js","../node_modules/@libsql/hrana-client/lib-esm/shared/json_decode.js","../node_modules/@libsql/hrana-client/lib-esm/ws/json_decode.js","../node_modules/@libsql/hrana-client/lib-esm/shared/protobuf_decode.js","../node_modules/@libsql/hrana-client/lib-esm/ws/protobuf_decode.js","../node_modules/@libsql/hrana-client/lib-esm/ws/client.js","../node_modules/@libsql/isomorphic-fetch/node.js","../node_modules/@libsql/hrana-client/lib-esm/queue_microtask.js","../node_modules/@libsql/hrana-client/lib-esm/byte_queue.js","../node_modules/@libsql/hrana-client/lib-esm/http/json_decode.js","../node_modules/@libsql/hrana-client/lib-esm/http/protobuf_decode.js","../node_modules/@libsql/hrana-client/lib-esm/http/cursor.js","../node_modules/@libsql/hrana-client/lib-esm/http/json_encode.js","../node_modules/@libsql/hrana-client/lib-esm/http/protobuf_encode.js","../node_modules/@libsql/hrana-client/lib-esm/http/stream.js","../node_modules/@libsql/hrana-client/lib-esm/http/client.js","../node_modules/@libsql/hrana-client/lib-esm/index.js","../node_modules/@libsql/client/lib-esm/hrana.js","../node_modules/@libsql/client/lib-esm/sql_cache.js","../node_modules/@libsql/client/lib-esm/ws.js","../node_modules/@libsql/client/lib-esm/http.js","../node_modules/@libsql/client/lib-esm/node.js","../src/library/Database/index.ts"],"sourcesContent":["\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.load = exports.currentTarget = void 0;\nconst path = __importStar(require(\"path\"));\nconst fs = __importStar(require(\"fs\"));\nfunction currentTarget() {\n    let os = null;\n    switch (process.platform) {\n        case 'android':\n            switch (process.arch) {\n                case 'arm':\n                    return 'android-arm-eabi';\n                case 'arm64':\n                    return 'android-arm64';\n            }\n            os = 'Android';\n            break;\n        case 'win32':\n            switch (process.arch) {\n                case 'x64':\n                    return 'win32-x64-msvc';\n                case 'arm64':\n                    return 'win32-arm64-msvc';\n                case 'ia32':\n                    return 'win32-ia32-msvc';\n            }\n            os = 'Windows';\n            break;\n        case 'darwin':\n            switch (process.arch) {\n                case 'x64':\n                    return 'darwin-x64';\n                case 'arm64':\n                    return 'darwin-arm64';\n            }\n            os = 'macOS';\n            break;\n        case 'linux':\n            switch (process.arch) {\n                case 'x64':\n                case 'arm64':\n                    return isGlibc()\n                        ? `linux-${process.arch}-gnu`\n                        : `linux-${process.arch}-musl`;\n                case 'arm':\n                    return 'linux-arm-gnueabihf';\n            }\n            os = 'Linux';\n            break;\n        case 'freebsd':\n            if (process.arch === 'x64') {\n                return 'freebsd-x64';\n            }\n            os = 'FreeBSD';\n            break;\n    }\n    if (os) {\n        throw new Error(`Neon: unsupported ${os} architecture: ${process.arch}`);\n    }\n    throw new Error(`Neon: unsupported system: ${process.platform}`);\n}\nexports.currentTarget = currentTarget;\nfunction isGlibc() {\n    // Cast to unknown to work around a bug in the type definition:\n    // https://github.com/DefinitelyTyped/DefinitelyTyped/issues/40140\n    const report = process.report?.getReport();\n    if ((typeof report !== 'object') || !report || (!('header' in report))) {\n        return false;\n    }\n    const header = report.header;\n    return (typeof header === 'object') &&\n        !!header &&\n        ('glibcVersionRuntime' in header);\n}\nfunction load(dirname) {\n    const m = path.join(dirname, \"index.node\");\n    return fs.existsSync(m) ? require(m) : null;\n}\nexports.load = load;\n","// Copyright 2017 Lovell Fuller and others.\n// SPDX-License-Identifier: Apache-2.0\n\n'use strict';\n\nconst isLinux = () => process.platform === 'linux';\n\nlet report = null;\nconst getReport = () => {\n  if (!report) {\n    /* istanbul ignore next */\n    report = isLinux() && process.report\n      ? process.report.getReport()\n      : {};\n  }\n  return report;\n};\n\nmodule.exports = { isLinux, getReport };\n","// Copyright 2017 Lovell Fuller and others.\n// SPDX-License-Identifier: Apache-2.0\n\n'use strict';\n\nconst fs = require('fs');\n\n/**\n * The path where we can find the ldd\n */\nconst LDD_PATH = '/usr/bin/ldd';\n\n/**\n * Read the content of a file synchronous\n *\n * @param {string} path\n * @returns {string}\n */\nconst readFileSync = (path) => fs.readFileSync(path, 'utf-8');\n\n/**\n * Read the content of a file\n *\n * @param {string} path\n * @returns {Promise<string>}\n */\nconst readFile = (path) => new Promise((resolve, reject) => {\n  fs.readFile(path, 'utf-8', (err, data) => {\n    if (err) {\n      reject(err);\n    } else {\n      resolve(data);\n    }\n  });\n});\n\nmodule.exports = {\n  LDD_PATH,\n  readFileSync,\n  readFile\n};\n","// Copyright 2017 Lovell Fuller and others.\n// SPDX-License-Identifier: Apache-2.0\n\n'use strict';\n\nconst childProcess = require('child_process');\nconst { isLinux, getReport } = require('./process');\nconst { LDD_PATH, readFile, readFileSync } = require('./filesystem');\n\nlet cachedFamilyFilesystem;\nlet cachedVersionFilesystem;\n\nconst command = 'getconf GNU_LIBC_VERSION 2>&1 || true; ldd --version 2>&1 || true';\nlet commandOut = '';\n\nconst safeCommand = () => {\n  if (!commandOut) {\n    return new Promise((resolve) => {\n      childProcess.exec(command, (err, out) => {\n        commandOut = err ? ' ' : out;\n        resolve(commandOut);\n      });\n    });\n  }\n  return commandOut;\n};\n\nconst safeCommandSync = () => {\n  if (!commandOut) {\n    try {\n      commandOut = childProcess.execSync(command, { encoding: 'utf8' });\n    } catch (_err) {\n      commandOut = ' ';\n    }\n  }\n  return commandOut;\n};\n\n/**\n * A String constant containing the value `glibc`.\n * @type {string}\n * @public\n */\nconst GLIBC = 'glibc';\n\n/**\n * A Regexp constant to get the GLIBC Version.\n * @type {string}\n */\nconst RE_GLIBC_VERSION = /GLIBC\\s(\\d+\\.\\d+)/;\n\n/**\n * A String constant containing the value `musl`.\n * @type {string}\n * @public\n */\nconst MUSL = 'musl';\n\n/**\n * This string is used to find if the {@link LDD_PATH} is GLIBC\n * @type {string}\n */\nconst GLIBC_ON_LDD = GLIBC.toUpperCase();\n\n/**\n * This string is used to find if the {@link LDD_PATH} is musl\n * @type {string}\n */\nconst MUSL_ON_LDD = MUSL.toLowerCase();\n\nconst isFileMusl = (f) => f.includes('libc.musl-') || f.includes('ld-musl-');\n\nconst familyFromReport = () => {\n  const report = getReport();\n  if (report.header && report.header.glibcVersionRuntime) {\n    return GLIBC;\n  }\n  if (Array.isArray(report.sharedObjects)) {\n    if (report.sharedObjects.some(isFileMusl)) {\n      return MUSL;\n    }\n  }\n  return null;\n};\n\nconst familyFromCommand = (out) => {\n  const [getconf, ldd1] = out.split(/[\\r\\n]+/);\n  if (getconf && getconf.includes(GLIBC)) {\n    return GLIBC;\n  }\n  if (ldd1 && ldd1.includes(MUSL)) {\n    return MUSL;\n  }\n  return null;\n};\n\nconst getFamilyFromLddContent = (content) => {\n  if (content.includes(MUSL_ON_LDD)) {\n    return MUSL;\n  }\n  if (content.includes(GLIBC_ON_LDD)) {\n    return GLIBC;\n  }\n  return null;\n};\n\nconst familyFromFilesystem = async () => {\n  if (cachedFamilyFilesystem !== undefined) {\n    return cachedFamilyFilesystem;\n  }\n  cachedFamilyFilesystem = null;\n  try {\n    const lddContent = await readFile(LDD_PATH);\n    cachedFamilyFilesystem = getFamilyFromLddContent(lddContent);\n  } catch (e) {}\n  return cachedFamilyFilesystem;\n};\n\nconst familyFromFilesystemSync = () => {\n  if (cachedFamilyFilesystem !== undefined) {\n    return cachedFamilyFilesystem;\n  }\n  cachedFamilyFilesystem = null;\n  try {\n    const lddContent = readFileSync(LDD_PATH);\n    cachedFamilyFilesystem = getFamilyFromLddContent(lddContent);\n  } catch (e) {}\n  return cachedFamilyFilesystem;\n};\n\n/**\n * Resolves with the libc family when it can be determined, `null` otherwise.\n * @returns {Promise<?string>}\n */\nconst family = async () => {\n  let family = null;\n  if (isLinux()) {\n    family = await familyFromFilesystem();\n    if (!family) {\n      family = familyFromReport();\n    }\n    if (!family) {\n      const out = await safeCommand();\n      family = familyFromCommand(out);\n    }\n  }\n  return family;\n};\n\n/**\n * Returns the libc family when it can be determined, `null` otherwise.\n * @returns {?string}\n */\nconst familySync = () => {\n  let family = null;\n  if (isLinux()) {\n    family = familyFromFilesystemSync();\n    if (!family) {\n      family = familyFromReport();\n    }\n    if (!family) {\n      const out = safeCommandSync();\n      family = familyFromCommand(out);\n    }\n  }\n  return family;\n};\n\n/**\n * Resolves `true` only when the platform is Linux and the libc family is not `glibc`.\n * @returns {Promise<boolean>}\n */\nconst isNonGlibcLinux = async () => isLinux() && await family() !== GLIBC;\n\n/**\n * Returns `true` only when the platform is Linux and the libc family is not `glibc`.\n * @returns {boolean}\n */\nconst isNonGlibcLinuxSync = () => isLinux() && familySync() !== GLIBC;\n\nconst versionFromFilesystem = async () => {\n  if (cachedVersionFilesystem !== undefined) {\n    return cachedVersionFilesystem;\n  }\n  cachedVersionFilesystem = null;\n  try {\n    const lddContent = await readFile(LDD_PATH);\n    const versionMatch = lddContent.match(RE_GLIBC_VERSION);\n    if (versionMatch) {\n      cachedVersionFilesystem = versionMatch[1];\n    }\n  } catch (e) {}\n  return cachedVersionFilesystem;\n};\n\nconst versionFromFilesystemSync = () => {\n  if (cachedVersionFilesystem !== undefined) {\n    return cachedVersionFilesystem;\n  }\n  cachedVersionFilesystem = null;\n  try {\n    const lddContent = readFileSync(LDD_PATH);\n    const versionMatch = lddContent.match(RE_GLIBC_VERSION);\n    if (versionMatch) {\n      cachedVersionFilesystem = versionMatch[1];\n    }\n  } catch (e) {}\n  return cachedVersionFilesystem;\n};\n\nconst versionFromReport = () => {\n  const report = getReport();\n  if (report.header && report.header.glibcVersionRuntime) {\n    return report.header.glibcVersionRuntime;\n  }\n  return null;\n};\n\nconst versionSuffix = (s) => s.trim().split(/\\s+/)[1];\n\nconst versionFromCommand = (out) => {\n  const [getconf, ldd1, ldd2] = out.split(/[\\r\\n]+/);\n  if (getconf && getconf.includes(GLIBC)) {\n    return versionSuffix(getconf);\n  }\n  if (ldd1 && ldd2 && ldd1.includes(MUSL)) {\n    return versionSuffix(ldd2);\n  }\n  return null;\n};\n\n/**\n * Resolves with the libc version when it can be determined, `null` otherwise.\n * @returns {Promise<?string>}\n */\nconst version = async () => {\n  let version = null;\n  if (isLinux()) {\n    version = await versionFromFilesystem();\n    if (!version) {\n      version = versionFromReport();\n    }\n    if (!version) {\n      const out = await safeCommand();\n      version = versionFromCommand(out);\n    }\n  }\n  return version;\n};\n\n/**\n * Returns the libc version when it can be determined, `null` otherwise.\n * @returns {?string}\n */\nconst versionSync = () => {\n  let version = null;\n  if (isLinux()) {\n    version = versionFromFilesystemSync();\n    if (!version) {\n      version = versionFromReport();\n    }\n    if (!version) {\n      const out = safeCommandSync();\n      version = versionFromCommand(out);\n    }\n  }\n  return version;\n};\n\nmodule.exports = {\n  GLIBC,\n  MUSL,\n  family,\n  familySync,\n  isNonGlibcLinux,\n  isNonGlibcLinuxSync,\n  version,\n  versionSync\n};\n","'use strict';\nconst descriptor = { value: 'SqliteError', writable: true, enumerable: false, configurable: true };\n\nfunction SqliteError(message, code, rawCode) {\n        if (new.target !== SqliteError) {\n                return new SqliteError(message, code);\n        }\n        if (typeof code !== 'string') {\n                throw new TypeError('Expected second argument to be a string');\n        }\n        Error.call(this, message);\n        descriptor.value = '' + message;\n        Object.defineProperty(this, 'message', descriptor);\n        Error.captureStackTrace(this, SqliteError);\n        this.code = code;\n        this.rawCode = rawCode\n}\nObject.setPrototypeOf(SqliteError, Error);\nObject.setPrototypeOf(SqliteError.prototype, Error.prototype);\nObject.defineProperty(SqliteError.prototype, 'name', descriptor);\nmodule.exports = SqliteError;\n","\"use strict\";\n\nconst { load, currentTarget } = require(\"@neon-rs/load\");\nconst { familySync, GLIBC } = require(\"detect-libc\");\n\nfunction requireNative() {\n  if (process.env.LIBSQL_JS_DEV) {\n    return load(__dirname)\n  }\n  let target = currentTarget();\n  // Workaround for Bun, which reports a musl target, but really wants glibc...\n  if (familySync() == GLIBC) {\n    switch (target) {\n    case \"linux-x64-musl\":\n      target = \"linux-x64-gnu\";\n      break;\n    case \"linux-arm64-musl\":\n      target = \"linux-arm64-gnu\";\n      break;\n    }\n  }\n  return require(`@libsql/${target}`);\n}\n\nconst {\n  databaseOpen,\n  databaseOpenWithRpcSync,\n  databaseInTransaction,\n  databaseClose,\n  databaseSyncSync,\n  databaseSyncUntilSync,\n  databaseExecSync,\n  databasePrepareSync,\n  databaseDefaultSafeIntegers,\n  databaseLoadExtension,\n  databaseMaxWriteReplicationIndex,\n  statementRaw,\n  statementIsReader,\n  statementGet,\n  statementRun,\n  statementRowsSync,\n  statementColumns,\n  statementSafeIntegers,\n  rowsNext,\n} = requireNative();\n\nconst SqliteError = require(\"./sqlite-error\");\n\nfunction convertError(err) {\n  if (err.libsqlError) {\n    return new SqliteError(err.message, err.code, err.rawCode);\n  }\n  return err;\n}\n\n/**\n * Database represents a connection that can prepare and execute SQL statements.\n */\nclass Database {\n  /**\n   * Creates a new database connection. If the database file pointed to by `path` does not exists, it will be created.\n   *\n   * @constructor\n   * @param {string} path - Path to the database file.\n   */\n  constructor(path, opts) {\n    const encryptionCipher = opts?.encryptionCipher ?? \"aes256cbc\";\n    if (opts && opts.syncUrl) {\n      var authToken = \"\";\n      if (opts.syncAuth) {\n          console.warn(\"Warning: The `syncAuth` option is deprecated, please use `authToken` option instead.\");\n          authToken = opts.syncAuth;\n      } else if (opts.authToken) {\n          authToken = opts.authToken;\n      }\n      const encryptionKey = opts?.encryptionKey ?? \"\";\n      const syncPeriod = opts?.syncPeriod ?? 0.0;\n      const readYourWrites = opts?.readYourWrites ?? true;\n      this.db = databaseOpenWithRpcSync(path, opts.syncUrl, authToken, encryptionCipher, encryptionKey, syncPeriod, readYourWrites);\n    } else {\n      const authToken = opts?.authToken ?? \"\";\n      const encryptionKey = opts?.encryptionKey ?? \"\";\n      this.db = databaseOpen(path, authToken, encryptionCipher, encryptionKey);\n    }\n    // TODO: Use a libSQL API for this?\n    this.memory = path === \":memory:\";\n    this.readonly = false;\n    this.name = \"\";\n    this.open = true;\n\n    const db = this.db;\n    Object.defineProperties(this, {\n      inTransaction: {\n        get() {\n          return databaseInTransaction(db);\n        }\n      },\n    });\n  }\n\n  sync() {\n    return databaseSyncSync.call(this.db);\n  }\n\n  syncUntil(replicationIndex) {\n    return databaseSyncUntilSync.call(this.db, replicationIndex);\n  }\n\n  /**\n   * Prepares a SQL statement for execution.\n   *\n   * @param {string} sql - The SQL statement string to prepare.\n   */\n  prepare(sql) {\n    try {\n      const stmt = databasePrepareSync.call(this.db, sql);\n      return new Statement(stmt);  \n    } catch (err) {\n      throw convertError(err);\n    }\n  }\n\n  /**\n   * Returns a function that executes the given function in a transaction.\n   *\n   * @param {function} fn - The function to wrap in a transaction.\n   */\n  transaction(fn) {\n    if (typeof fn !== \"function\")\n      throw new TypeError(\"Expected first argument to be a function\");\n\n    const db = this;\n    const wrapTxn = (mode) => {\n      return (...bindParameters) => {\n        db.exec(\"BEGIN \" + mode);\n        try {\n          const result = fn(...bindParameters);\n          db.exec(\"COMMIT\");\n          return result;\n        } catch (err) {\n          db.exec(\"ROLLBACK\");\n          throw err;\n        }\n      };\n    };\n    const properties = {\n      default: { value: wrapTxn(\"\") },\n      deferred: { value: wrapTxn(\"DEFERRED\") },\n      immediate: { value: wrapTxn(\"IMMEDIATE\") },\n      exclusive: { value: wrapTxn(\"EXCLUSIVE\") },\n      database: { value: this, enumerable: true },\n    };\n    Object.defineProperties(properties.default.value, properties);\n    Object.defineProperties(properties.deferred.value, properties);\n    Object.defineProperties(properties.immediate.value, properties);\n    Object.defineProperties(properties.exclusive.value, properties);\n    return properties.default.value;\n  }\n\n  pragma(source, options) {\n    if (options == null) options = {};\n    if (typeof source !== 'string') throw new TypeError('Expected first argument to be a string');\n    if (typeof options !== 'object') throw new TypeError('Expected second argument to be an options object');\n    const simple = options['simple'];\n    const stmt = this.prepare(`PRAGMA ${source}`, this, true);\n    return simple ? stmt.pluck().get() : stmt.all();\n  }\n\n  backup(filename, options) {\n    throw new Error(\"not implemented\");\n  }\n\n  serialize(options) {\n    throw new Error(\"not implemented\");\n  }\n\n  function(name, options, fn) {\n    // Apply defaults\n    if (options == null) options = {};\n    if (typeof options === \"function\") {\n      fn = options;\n      options = {};\n    }\n\n    // Validate arguments\n    if (typeof name !== \"string\")\n      throw new TypeError(\"Expected first argument to be a string\");\n    if (typeof fn !== \"function\")\n      throw new TypeError(\"Expected last argument to be a function\");\n    if (typeof options !== \"object\")\n      throw new TypeError(\"Expected second argument to be an options object\");\n    if (!name)\n      throw new TypeError(\n        \"User-defined function name cannot be an empty string\"\n      );\n\n    throw new Error(\"not implemented\");\n  }\n\n  aggregate(name, options) {\n    // Validate arguments\n    if (typeof name !== \"string\")\n      throw new TypeError(\"Expected first argument to be a string\");\n    if (typeof options !== \"object\" || options === null)\n      throw new TypeError(\"Expected second argument to be an options object\");\n    if (!name)\n      throw new TypeError(\n        \"User-defined function name cannot be an empty string\"\n      );\n\n    throw new Error(\"not implemented\");\n  }\n\n  table(name, factory) {\n    // Validate arguments\n    if (typeof name !== \"string\")\n      throw new TypeError(\"Expected first argument to be a string\");\n    if (!name)\n      throw new TypeError(\n        \"Virtual table module name cannot be an empty string\"\n      );\n\n    throw new Error(\"not implemented\");\n  }\n\n  loadExtension(...args) {\n    databaseLoadExtension.call(this.db, ...args);\n  }\n\n  maxWriteReplicationIndex() {\n    return databaseMaxWriteReplicationIndex.call(this.db)\n  }\n\n  /**\n   * Executes a SQL statement.\n   *\n   * @param {string} sql - The SQL statement string to execute.\n   */\n  exec(sql) {\n    try {\n      databaseExecSync.call(this.db, sql);\n    } catch (err) {\n      throw convertError(err);\n    }\n  }\n\n  /**\n   * Closes the database connection.\n   */\n  close() {\n    databaseClose.call(this.db);\n    this.open = false;\n  }\n\n  /**\n   * Toggle 64-bit integer support.\n   */\n  defaultSafeIntegers(toggle) {\n    databaseDefaultSafeIntegers.call(this.db, toggle ?? true);\n    return this;\n  }\n\n  unsafeMode(...args) {\n    throw new Error(\"not implemented\");\n  }\n}\n\n/**\n * Statement represents a prepared SQL statement that can be executed.\n */\nclass Statement {\n  constructor(stmt) {\n    this.stmt = stmt;\n  }\n\n  /**\n   * Toggle raw mode.\n   *\n   * @param raw Enable or disable raw mode. If you don't pass the parameter, raw mode is enabled.\n   */\n  raw(raw) {\n    statementRaw.call(this.stmt, raw ?? true);\n    return this;\n  }\n\n  get reader() {\n    return statementIsReader.call(this.stmt);\n  }\n\n  /**\n   * Executes the SQL statement and returns an info object.\n   */\n  run(...bindParameters) {\n    try {\n      if (bindParameters.length == 1 && typeof bindParameters[0] === \"object\") {\n        return statementRun.call(this.stmt, bindParameters[0]);\n      } else {\n        return statementRun.call(this.stmt, bindParameters.flat());\n      }  \n    } catch (err) {\n      throw convertError(err);\n    }\n  }\n\n  /**\n   * Executes the SQL statement and returns the first row.\n   *\n   * @param bindParameters - The bind parameters for executing the statement.\n   */\n  get(...bindParameters) {\n    if (bindParameters.length == 1 && typeof bindParameters[0] === \"object\") {\n      return statementGet.call(this.stmt, bindParameters[0]);\n    } else {\n      return statementGet.call(this.stmt, bindParameters.flat());\n    }\n  }\n\n  /**\n   * Executes the SQL statement and returns an iterator to the resulting rows.\n   *\n   * @param bindParameters - The bind parameters for executing the statement.\n   */\n  iterate(...bindParameters) {\n    var rows = undefined;\n    if (bindParameters.length == 1 && typeof bindParameters[0] === \"object\") {\n      rows = statementRowsSync.call(this.stmt, bindParameters[0]);\n    } else {\n      rows = statementRowsSync.call(this.stmt, bindParameters.flat());\n    }\n    const iter = {\n      nextRows: Array(100),\n      nextRowIndex: 100,\n      next() {\n        if (this.nextRowIndex === 100) {\n          rowsNext.call(rows, this.nextRows);\n          this.nextRowIndex = 0;\n        }\n        const row = this.nextRows[this.nextRowIndex];\n        this.nextRows[this.nextRowIndex] = undefined;\n        if (!row) {\n          return { done: true };\n        }\n        this.nextRowIndex++;\n        return { value: row, done: false };\n      },\n      [Symbol.iterator]() {\n        return this;\n      },\n    };\n    return iter;\n  }\n\n  /**\n   * Executes the SQL statement and returns an array of the resulting rows.\n   *\n   * @param bindParameters - The bind parameters for executing the statement.\n   */\n  all(...bindParameters) {\n    const result = [];\n    for (const row of this.iterate(...bindParameters)) {\n      result.push(row);\n    }\n    return result;\n  }\n\n  /**\n   * Returns the columns in the result set returned by this prepared statement.\n   */\n  columns() {\n    return statementColumns.call(this.stmt);\n  }\n\n  /**\n   * Toggle 64-bit integer support.\n   */\n  safeIntegers(toggle) {\n    statementSafeIntegers.call(this.stmt, toggle ?? true);\n    return this;\n  }\n}\n\nmodule.exports = Database;\nmodule.exports.SqliteError = SqliteError;\n","'use strict';\n\nconst { Duplex } = require('stream');\n\n/**\n * Emits the `'close'` event on a stream.\n *\n * @param {Duplex} stream The stream.\n * @private\n */\nfunction emitClose(stream) {\n  stream.emit('close');\n}\n\n/**\n * The listener of the `'end'` event.\n *\n * @private\n */\nfunction duplexOnEnd() {\n  if (!this.destroyed && this._writableState.finished) {\n    this.destroy();\n  }\n}\n\n/**\n * The listener of the `'error'` event.\n *\n * @param {Error} err The error\n * @private\n */\nfunction duplexOnError(err) {\n  this.removeListener('error', duplexOnError);\n  this.destroy();\n  if (this.listenerCount('error') === 0) {\n    // Do not suppress the throwing behavior.\n    this.emit('error', err);\n  }\n}\n\n/**\n * Wraps a `WebSocket` in a duplex stream.\n *\n * @param {WebSocket} ws The `WebSocket` to wrap\n * @param {Object} [options] The options for the `Duplex` constructor\n * @return {Duplex} The duplex stream\n * @public\n */\nfunction createWebSocketStream(ws, options) {\n  let terminateOnDestroy = true;\n\n  const duplex = new Duplex({\n    ...options,\n    autoDestroy: false,\n    emitClose: false,\n    objectMode: false,\n    writableObjectMode: false\n  });\n\n  ws.on('message', function message(msg, isBinary) {\n    const data =\n      !isBinary && duplex._readableState.objectMode ? msg.toString() : msg;\n\n    if (!duplex.push(data)) ws.pause();\n  });\n\n  ws.once('error', function error(err) {\n    if (duplex.destroyed) return;\n\n    // Prevent `ws.terminate()` from being called by `duplex._destroy()`.\n    //\n    // - If the `'error'` event is emitted before the `'open'` event, then\n    //   `ws.terminate()` is a noop as no socket is assigned.\n    // - Otherwise, the error is re-emitted by the listener of the `'error'`\n    //   event of the `Receiver` object. The listener already closes the\n    //   connection by calling `ws.close()`. This allows a close frame to be\n    //   sent to the other peer. If `ws.terminate()` is called right after this,\n    //   then the close frame might not be sent.\n    terminateOnDestroy = false;\n    duplex.destroy(err);\n  });\n\n  ws.once('close', function close() {\n    if (duplex.destroyed) return;\n\n    duplex.push(null);\n  });\n\n  duplex._destroy = function (err, callback) {\n    if (ws.readyState === ws.CLOSED) {\n      callback(err);\n      process.nextTick(emitClose, duplex);\n      return;\n    }\n\n    let called = false;\n\n    ws.once('error', function error(err) {\n      called = true;\n      callback(err);\n    });\n\n    ws.once('close', function close() {\n      if (!called) callback(err);\n      process.nextTick(emitClose, duplex);\n    });\n\n    if (terminateOnDestroy) ws.terminate();\n  };\n\n  duplex._final = function (callback) {\n    if (ws.readyState === ws.CONNECTING) {\n      ws.once('open', function open() {\n        duplex._final(callback);\n      });\n      return;\n    }\n\n    // If the value of the `_socket` property is `null` it means that `ws` is a\n    // client websocket and the handshake failed. In fact, when this happens, a\n    // socket is never assigned to the websocket. Wait for the `'error'` event\n    // that will be emitted by the websocket.\n    if (ws._socket === null) return;\n\n    if (ws._socket._writableState.finished) {\n      callback();\n      if (duplex._readableState.endEmitted) duplex.destroy();\n    } else {\n      ws._socket.once('finish', function finish() {\n        // `duplex` is not destroyed here because the `'end'` event will be\n        // emitted on `duplex` after this `'finish'` event. The EOF signaling\n        // `null` chunk is, in fact, pushed when the websocket emits `'close'`.\n        callback();\n      });\n      ws.close();\n    }\n  };\n\n  duplex._read = function () {\n    if (ws.isPaused) ws.resume();\n  };\n\n  duplex._write = function (chunk, encoding, callback) {\n    if (ws.readyState === ws.CONNECTING) {\n      ws.once('open', function open() {\n        duplex._write(chunk, encoding, callback);\n      });\n      return;\n    }\n\n    ws.send(chunk, callback);\n  };\n\n  duplex.on('end', duplexOnEnd);\n  duplex.on('error', duplexOnError);\n  return duplex;\n}\n\nmodule.exports = createWebSocketStream;\n","'use strict';\n\nconst BINARY_TYPES = ['nodebuffer', 'arraybuffer', 'fragments'];\nconst hasBlob = typeof Blob !== 'undefined';\n\nif (hasBlob) BINARY_TYPES.push('blob');\n\nmodule.exports = {\n  BINARY_TYPES,\n  EMPTY_BUFFER: Buffer.alloc(0),\n  GUID: '258EAFA5-E914-47DA-95CA-C5AB0DC85B11',\n  hasBlob,\n  kForOnEventAttribute: Symbol('kIsForOnEventAttribute'),\n  kListener: Symbol('kListener'),\n  kStatusCode: Symbol('status-code'),\n  kWebSocket: Symbol('websocket'),\n  NOOP: () => {}\n};\n","'use strict';\n\nconst { EMPTY_BUFFER } = require('./constants');\n\nconst FastBuffer = Buffer[Symbol.species];\n\n/**\n * Merges an array of buffers into a new buffer.\n *\n * @param {Buffer[]} list The array of buffers to concat\n * @param {Number} totalLength The total length of buffers in the list\n * @return {Buffer} The resulting buffer\n * @public\n */\nfunction concat(list, totalLength) {\n  if (list.length === 0) return EMPTY_BUFFER;\n  if (list.length === 1) return list[0];\n\n  const target = Buffer.allocUnsafe(totalLength);\n  let offset = 0;\n\n  for (let i = 0; i < list.length; i++) {\n    const buf = list[i];\n    target.set(buf, offset);\n    offset += buf.length;\n  }\n\n  if (offset < totalLength) {\n    return new FastBuffer(target.buffer, target.byteOffset, offset);\n  }\n\n  return target;\n}\n\n/**\n * Masks a buffer using the given mask.\n *\n * @param {Buffer} source The buffer to mask\n * @param {Buffer} mask The mask to use\n * @param {Buffer} output The buffer where to store the result\n * @param {Number} offset The offset at which to start writing\n * @param {Number} length The number of bytes to mask.\n * @public\n */\nfunction _mask(source, mask, output, offset, length) {\n  for (let i = 0; i < length; i++) {\n    output[offset + i] = source[i] ^ mask[i & 3];\n  }\n}\n\n/**\n * Unmasks a buffer using the given mask.\n *\n * @param {Buffer} buffer The buffer to unmask\n * @param {Buffer} mask The mask to use\n * @public\n */\nfunction _unmask(buffer, mask) {\n  for (let i = 0; i < buffer.length; i++) {\n    buffer[i] ^= mask[i & 3];\n  }\n}\n\n/**\n * Converts a buffer to an `ArrayBuffer`.\n *\n * @param {Buffer} buf The buffer to convert\n * @return {ArrayBuffer} Converted buffer\n * @public\n */\nfunction toArrayBuffer(buf) {\n  if (buf.length === buf.buffer.byteLength) {\n    return buf.buffer;\n  }\n\n  return buf.buffer.slice(buf.byteOffset, buf.byteOffset + buf.length);\n}\n\n/**\n * Converts `data` to a `Buffer`.\n *\n * @param {*} data The data to convert\n * @return {Buffer} The buffer\n * @throws {TypeError}\n * @public\n */\nfunction toBuffer(data) {\n  toBuffer.readOnly = true;\n\n  if (Buffer.isBuffer(data)) return data;\n\n  let buf;\n\n  if (data instanceof ArrayBuffer) {\n    buf = new FastBuffer(data);\n  } else if (ArrayBuffer.isView(data)) {\n    buf = new FastBuffer(data.buffer, data.byteOffset, data.byteLength);\n  } else {\n    buf = Buffer.from(data);\n    toBuffer.readOnly = false;\n  }\n\n  return buf;\n}\n\nmodule.exports = {\n  concat,\n  mask: _mask,\n  toArrayBuffer,\n  toBuffer,\n  unmask: _unmask\n};\n\n/* istanbul ignore else  */\nif (!process.env.WS_NO_BUFFER_UTIL) {\n  try {\n    const bufferUtil = require('bufferutil');\n\n    module.exports.mask = function (source, mask, output, offset, length) {\n      if (length < 48) _mask(source, mask, output, offset, length);\n      else bufferUtil.mask(source, mask, output, offset, length);\n    };\n\n    module.exports.unmask = function (buffer, mask) {\n      if (buffer.length < 32) _unmask(buffer, mask);\n      else bufferUtil.unmask(buffer, mask);\n    };\n  } catch (e) {\n    // Continue regardless of the error.\n  }\n}\n","'use strict';\n\nconst kDone = Symbol('kDone');\nconst kRun = Symbol('kRun');\n\n/**\n * A very simple job queue with adjustable concurrency. Adapted from\n * https://github.com/STRML/async-limiter\n */\nclass Limiter {\n  /**\n   * Creates a new `Limiter`.\n   *\n   * @param {Number} [concurrency=Infinity] The maximum number of jobs allowed\n   *     to run concurrently\n   */\n  constructor(concurrency) {\n    this[kDone] = () => {\n      this.pending--;\n      this[kRun]();\n    };\n    this.concurrency = concurrency || Infinity;\n    this.jobs = [];\n    this.pending = 0;\n  }\n\n  /**\n   * Adds a job to the queue.\n   *\n   * @param {Function} job The job to run\n   * @public\n   */\n  add(job) {\n    this.jobs.push(job);\n    this[kRun]();\n  }\n\n  /**\n   * Removes a job from the queue and runs it if possible.\n   *\n   * @private\n   */\n  [kRun]() {\n    if (this.pending === this.concurrency) return;\n\n    if (this.jobs.length) {\n      const job = this.jobs.shift();\n\n      this.pending++;\n      job(this[kDone]);\n    }\n  }\n}\n\nmodule.exports = Limiter;\n","'use strict';\n\nconst zlib = require('zlib');\n\nconst bufferUtil = require('./buffer-util');\nconst Limiter = require('./limiter');\nconst { kStatusCode } = require('./constants');\n\nconst FastBuffer = Buffer[Symbol.species];\nconst TRAILER = Buffer.from([0x00, 0x00, 0xff, 0xff]);\nconst kPerMessageDeflate = Symbol('permessage-deflate');\nconst kTotalLength = Symbol('total-length');\nconst kCallback = Symbol('callback');\nconst kBuffers = Symbol('buffers');\nconst kError = Symbol('error');\n\n//\n// We limit zlib concurrency, which prevents severe memory fragmentation\n// as documented in https://github.com/nodejs/node/issues/8871#issuecomment-250915913\n// and https://github.com/websockets/ws/issues/1202\n//\n// Intentionally global; it's the global thread pool that's an issue.\n//\nlet zlibLimiter;\n\n/**\n * permessage-deflate implementation.\n */\nclass PerMessageDeflate {\n  /**\n   * Creates a PerMessageDeflate instance.\n   *\n   * @param {Object} [options] Configuration options\n   * @param {(Boolean|Number)} [options.clientMaxWindowBits] Advertise support\n   *     for, or request, a custom client window size\n   * @param {Boolean} [options.clientNoContextTakeover=false] Advertise/\n   *     acknowledge disabling of client context takeover\n   * @param {Number} [options.concurrencyLimit=10] The number of concurrent\n   *     calls to zlib\n   * @param {(Boolean|Number)} [options.serverMaxWindowBits] Request/confirm the\n   *     use of a custom server window size\n   * @param {Boolean} [options.serverNoContextTakeover=false] Request/accept\n   *     disabling of server context takeover\n   * @param {Number} [options.threshold=1024] Size (in bytes) below which\n   *     messages should not be compressed if context takeover is disabled\n   * @param {Object} [options.zlibDeflateOptions] Options to pass to zlib on\n   *     deflate\n   * @param {Object} [options.zlibInflateOptions] Options to pass to zlib on\n   *     inflate\n   * @param {Boolean} [isServer=false] Create the instance in either server or\n   *     client mode\n   * @param {Number} [maxPayload=0] The maximum allowed message length\n   */\n  constructor(options, isServer, maxPayload) {\n    this._maxPayload = maxPayload | 0;\n    this._options = options || {};\n    this._threshold =\n      this._options.threshold !== undefined ? this._options.threshold : 1024;\n    this._isServer = !!isServer;\n    this._deflate = null;\n    this._inflate = null;\n\n    this.params = null;\n\n    if (!zlibLimiter) {\n      const concurrency =\n        this._options.concurrencyLimit !== undefined\n          ? this._options.concurrencyLimit\n          : 10;\n      zlibLimiter = new Limiter(concurrency);\n    }\n  }\n\n  /**\n   * @type {String}\n   */\n  static get extensionName() {\n    return 'permessage-deflate';\n  }\n\n  /**\n   * Create an extension negotiation offer.\n   *\n   * @return {Object} Extension parameters\n   * @public\n   */\n  offer() {\n    const params = {};\n\n    if (this._options.serverNoContextTakeover) {\n      params.server_no_context_takeover = true;\n    }\n    if (this._options.clientNoContextTakeover) {\n      params.client_no_context_takeover = true;\n    }\n    if (this._options.serverMaxWindowBits) {\n      params.server_max_window_bits = this._options.serverMaxWindowBits;\n    }\n    if (this._options.clientMaxWindowBits) {\n      params.client_max_window_bits = this._options.clientMaxWindowBits;\n    } else if (this._options.clientMaxWindowBits == null) {\n      params.client_max_window_bits = true;\n    }\n\n    return params;\n  }\n\n  /**\n   * Accept an extension negotiation offer/response.\n   *\n   * @param {Array} configurations The extension negotiation offers/reponse\n   * @return {Object} Accepted configuration\n   * @public\n   */\n  accept(configurations) {\n    configurations = this.normalizeParams(configurations);\n\n    this.params = this._isServer\n      ? this.acceptAsServer(configurations)\n      : this.acceptAsClient(configurations);\n\n    return this.params;\n  }\n\n  /**\n   * Releases all resources used by the extension.\n   *\n   * @public\n   */\n  cleanup() {\n    if (this._inflate) {\n      this._inflate.close();\n      this._inflate = null;\n    }\n\n    if (this._deflate) {\n      const callback = this._deflate[kCallback];\n\n      this._deflate.close();\n      this._deflate = null;\n\n      if (callback) {\n        callback(\n          new Error(\n            'The deflate stream was closed while data was being processed'\n          )\n        );\n      }\n    }\n  }\n\n  /**\n   *  Accept an extension negotiation offer.\n   *\n   * @param {Array} offers The extension negotiation offers\n   * @return {Object} Accepted configuration\n   * @private\n   */\n  acceptAsServer(offers) {\n    const opts = this._options;\n    const accepted = offers.find((params) => {\n      if (\n        (opts.serverNoContextTakeover === false &&\n          params.server_no_context_takeover) ||\n        (params.server_max_window_bits &&\n          (opts.serverMaxWindowBits === false ||\n            (typeof opts.serverMaxWindowBits === 'number' &&\n              opts.serverMaxWindowBits > params.server_max_window_bits))) ||\n        (typeof opts.clientMaxWindowBits === 'number' &&\n          !params.client_max_window_bits)\n      ) {\n        return false;\n      }\n\n      return true;\n    });\n\n    if (!accepted) {\n      throw new Error('None of the extension offers can be accepted');\n    }\n\n    if (opts.serverNoContextTakeover) {\n      accepted.server_no_context_takeover = true;\n    }\n    if (opts.clientNoContextTakeover) {\n      accepted.client_no_context_takeover = true;\n    }\n    if (typeof opts.serverMaxWindowBits === 'number') {\n      accepted.server_max_window_bits = opts.serverMaxWindowBits;\n    }\n    if (typeof opts.clientMaxWindowBits === 'number') {\n      accepted.client_max_window_bits = opts.clientMaxWindowBits;\n    } else if (\n      accepted.client_max_window_bits === true ||\n      opts.clientMaxWindowBits === false\n    ) {\n      delete accepted.client_max_window_bits;\n    }\n\n    return accepted;\n  }\n\n  /**\n   * Accept the extension negotiation response.\n   *\n   * @param {Array} response The extension negotiation response\n   * @return {Object} Accepted configuration\n   * @private\n   */\n  acceptAsClient(response) {\n    const params = response[0];\n\n    if (\n      this._options.clientNoContextTakeover === false &&\n      params.client_no_context_takeover\n    ) {\n      throw new Error('Unexpected parameter \"client_no_context_takeover\"');\n    }\n\n    if (!params.client_max_window_bits) {\n      if (typeof this._options.clientMaxWindowBits === 'number') {\n        params.client_max_window_bits = this._options.clientMaxWindowBits;\n      }\n    } else if (\n      this._options.clientMaxWindowBits === false ||\n      (typeof this._options.clientMaxWindowBits === 'number' &&\n        params.client_max_window_bits > this._options.clientMaxWindowBits)\n    ) {\n      throw new Error(\n        'Unexpected or invalid parameter \"client_max_window_bits\"'\n      );\n    }\n\n    return params;\n  }\n\n  /**\n   * Normalize parameters.\n   *\n   * @param {Array} configurations The extension negotiation offers/reponse\n   * @return {Array} The offers/response with normalized parameters\n   * @private\n   */\n  normalizeParams(configurations) {\n    configurations.forEach((params) => {\n      Object.keys(params).forEach((key) => {\n        let value = params[key];\n\n        if (value.length > 1) {\n          throw new Error(`Parameter \"${key}\" must have only a single value`);\n        }\n\n        value = value[0];\n\n        if (key === 'client_max_window_bits') {\n          if (value !== true) {\n            const num = +value;\n            if (!Number.isInteger(num) || num < 8 || num > 15) {\n              throw new TypeError(\n                `Invalid value for parameter \"${key}\": ${value}`\n              );\n            }\n            value = num;\n          } else if (!this._isServer) {\n            throw new TypeError(\n              `Invalid value for parameter \"${key}\": ${value}`\n            );\n          }\n        } else if (key === 'server_max_window_bits') {\n          const num = +value;\n          if (!Number.isInteger(num) || num < 8 || num > 15) {\n            throw new TypeError(\n              `Invalid value for parameter \"${key}\": ${value}`\n            );\n          }\n          value = num;\n        } else if (\n          key === 'client_no_context_takeover' ||\n          key === 'server_no_context_takeover'\n        ) {\n          if (value !== true) {\n            throw new TypeError(\n              `Invalid value for parameter \"${key}\": ${value}`\n            );\n          }\n        } else {\n          throw new Error(`Unknown parameter \"${key}\"`);\n        }\n\n        params[key] = value;\n      });\n    });\n\n    return configurations;\n  }\n\n  /**\n   * Decompress data. Concurrency limited.\n   *\n   * @param {Buffer} data Compressed data\n   * @param {Boolean} fin Specifies whether or not this is the last fragment\n   * @param {Function} callback Callback\n   * @public\n   */\n  decompress(data, fin, callback) {\n    zlibLimiter.add((done) => {\n      this._decompress(data, fin, (err, result) => {\n        done();\n        callback(err, result);\n      });\n    });\n  }\n\n  /**\n   * Compress data. Concurrency limited.\n   *\n   * @param {(Buffer|String)} data Data to compress\n   * @param {Boolean} fin Specifies whether or not this is the last fragment\n   * @param {Function} callback Callback\n   * @public\n   */\n  compress(data, fin, callback) {\n    zlibLimiter.add((done) => {\n      this._compress(data, fin, (err, result) => {\n        done();\n        callback(err, result);\n      });\n    });\n  }\n\n  /**\n   * Decompress data.\n   *\n   * @param {Buffer} data Compressed data\n   * @param {Boolean} fin Specifies whether or not this is the last fragment\n   * @param {Function} callback Callback\n   * @private\n   */\n  _decompress(data, fin, callback) {\n    const endpoint = this._isServer ? 'client' : 'server';\n\n    if (!this._inflate) {\n      const key = `${endpoint}_max_window_bits`;\n      const windowBits =\n        typeof this.params[key] !== 'number'\n          ? zlib.Z_DEFAULT_WINDOWBITS\n          : this.params[key];\n\n      this._inflate = zlib.createInflateRaw({\n        ...this._options.zlibInflateOptions,\n        windowBits\n      });\n      this._inflate[kPerMessageDeflate] = this;\n      this._inflate[kTotalLength] = 0;\n      this._inflate[kBuffers] = [];\n      this._inflate.on('error', inflateOnError);\n      this._inflate.on('data', inflateOnData);\n    }\n\n    this._inflate[kCallback] = callback;\n\n    this._inflate.write(data);\n    if (fin) this._inflate.write(TRAILER);\n\n    this._inflate.flush(() => {\n      const err = this._inflate[kError];\n\n      if (err) {\n        this._inflate.close();\n        this._inflate = null;\n        callback(err);\n        return;\n      }\n\n      const data = bufferUtil.concat(\n        this._inflate[kBuffers],\n        this._inflate[kTotalLength]\n      );\n\n      if (this._inflate._readableState.endEmitted) {\n        this._inflate.close();\n        this._inflate = null;\n      } else {\n        this._inflate[kTotalLength] = 0;\n        this._inflate[kBuffers] = [];\n\n        if (fin && this.params[`${endpoint}_no_context_takeover`]) {\n          this._inflate.reset();\n        }\n      }\n\n      callback(null, data);\n    });\n  }\n\n  /**\n   * Compress data.\n   *\n   * @param {(Buffer|String)} data Data to compress\n   * @param {Boolean} fin Specifies whether or not this is the last fragment\n   * @param {Function} callback Callback\n   * @private\n   */\n  _compress(data, fin, callback) {\n    const endpoint = this._isServer ? 'server' : 'client';\n\n    if (!this._deflate) {\n      const key = `${endpoint}_max_window_bits`;\n      const windowBits =\n        typeof this.params[key] !== 'number'\n          ? zlib.Z_DEFAULT_WINDOWBITS\n          : this.params[key];\n\n      this._deflate = zlib.createDeflateRaw({\n        ...this._options.zlibDeflateOptions,\n        windowBits\n      });\n\n      this._deflate[kTotalLength] = 0;\n      this._deflate[kBuffers] = [];\n\n      this._deflate.on('data', deflateOnData);\n    }\n\n    this._deflate[kCallback] = callback;\n\n    this._deflate.write(data);\n    this._deflate.flush(zlib.Z_SYNC_FLUSH, () => {\n      if (!this._deflate) {\n        //\n        // The deflate stream was closed while data was being processed.\n        //\n        return;\n      }\n\n      let data = bufferUtil.concat(\n        this._deflate[kBuffers],\n        this._deflate[kTotalLength]\n      );\n\n      if (fin) {\n        data = new FastBuffer(data.buffer, data.byteOffset, data.length - 4);\n      }\n\n      //\n      // Ensure that the callback will not be called again in\n      // `PerMessageDeflate#cleanup()`.\n      //\n      this._deflate[kCallback] = null;\n\n      this._deflate[kTotalLength] = 0;\n      this._deflate[kBuffers] = [];\n\n      if (fin && this.params[`${endpoint}_no_context_takeover`]) {\n        this._deflate.reset();\n      }\n\n      callback(null, data);\n    });\n  }\n}\n\nmodule.exports = PerMessageDeflate;\n\n/**\n * The listener of the `zlib.DeflateRaw` stream `'data'` event.\n *\n * @param {Buffer} chunk A chunk of data\n * @private\n */\nfunction deflateOnData(chunk) {\n  this[kBuffers].push(chunk);\n  this[kTotalLength] += chunk.length;\n}\n\n/**\n * The listener of the `zlib.InflateRaw` stream `'data'` event.\n *\n * @param {Buffer} chunk A chunk of data\n * @private\n */\nfunction inflateOnData(chunk) {\n  this[kTotalLength] += chunk.length;\n\n  if (\n    this[kPerMessageDeflate]._maxPayload < 1 ||\n    this[kTotalLength] <= this[kPerMessageDeflate]._maxPayload\n  ) {\n    this[kBuffers].push(chunk);\n    return;\n  }\n\n  this[kError] = new RangeError('Max payload size exceeded');\n  this[kError].code = 'WS_ERR_UNSUPPORTED_MESSAGE_LENGTH';\n  this[kError][kStatusCode] = 1009;\n  this.removeListener('data', inflateOnData);\n  this.reset();\n}\n\n/**\n * The listener of the `zlib.InflateRaw` stream `'error'` event.\n *\n * @param {Error} err The emitted error\n * @private\n */\nfunction inflateOnError(err) {\n  //\n  // There is no need to call `Zlib#close()` as the handle is automatically\n  // closed when an error is emitted.\n  //\n  this[kPerMessageDeflate]._inflate = null;\n  err[kStatusCode] = 1007;\n  this[kCallback](err);\n}\n","'use strict';\n\nconst { isUtf8 } = require('buffer');\n\nconst { hasBlob } = require('./constants');\n\n//\n// Allowed token characters:\n//\n// '!', '#', '$', '%', '&', ''', '*', '+', '-',\n// '.', 0-9, A-Z, '^', '_', '`', a-z, '|', '~'\n//\n// tokenChars[32] === 0 // ' '\n// tokenChars[33] === 1 // '!'\n// tokenChars[34] === 0 // '\"'\n// ...\n//\n// prettier-ignore\nconst tokenChars = [\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, // 0 - 15\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, // 16 - 31\n  0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, // 32 - 47\n  1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, // 48 - 63\n  0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, // 64 - 79\n  1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, // 80 - 95\n  1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, // 96 - 111\n  1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0 // 112 - 127\n];\n\n/**\n * Checks if a status code is allowed in a close frame.\n *\n * @param {Number} code The status code\n * @return {Boolean} `true` if the status code is valid, else `false`\n * @public\n */\nfunction isValidStatusCode(code) {\n  return (\n    (code >= 1000 &&\n      code <= 1014 &&\n      code !== 1004 &&\n      code !== 1005 &&\n      code !== 1006) ||\n    (code >= 3000 && code <= 4999)\n  );\n}\n\n/**\n * Checks if a given buffer contains only correct UTF-8.\n * Ported from https://www.cl.cam.ac.uk/%7Emgk25/ucs/utf8_check.c by\n * Markus Kuhn.\n *\n * @param {Buffer} buf The buffer to check\n * @return {Boolean} `true` if `buf` contains only correct UTF-8, else `false`\n * @public\n */\nfunction _isValidUTF8(buf) {\n  const len = buf.length;\n  let i = 0;\n\n  while (i < len) {\n    if ((buf[i] & 0x80) === 0) {\n      // 0xxxxxxx\n      i++;\n    } else if ((buf[i] & 0xe0) === 0xc0) {\n      // 110xxxxx 10xxxxxx\n      if (\n        i + 1 === len ||\n        (buf[i + 1] & 0xc0) !== 0x80 ||\n        (buf[i] & 0xfe) === 0xc0 // Overlong\n      ) {\n        return false;\n      }\n\n      i += 2;\n    } else if ((buf[i] & 0xf0) === 0xe0) {\n      // 1110xxxx 10xxxxxx 10xxxxxx\n      if (\n        i + 2 >= len ||\n        (buf[i + 1] & 0xc0) !== 0x80 ||\n        (buf[i + 2] & 0xc0) !== 0x80 ||\n        (buf[i] === 0xe0 && (buf[i + 1] & 0xe0) === 0x80) || // Overlong\n        (buf[i] === 0xed && (buf[i + 1] & 0xe0) === 0xa0) // Surrogate (U+D800 - U+DFFF)\n      ) {\n        return false;\n      }\n\n      i += 3;\n    } else if ((buf[i] & 0xf8) === 0xf0) {\n      // 11110xxx 10xxxxxx 10xxxxxx 10xxxxxx\n      if (\n        i + 3 >= len ||\n        (buf[i + 1] & 0xc0) !== 0x80 ||\n        (buf[i + 2] & 0xc0) !== 0x80 ||\n        (buf[i + 3] & 0xc0) !== 0x80 ||\n        (buf[i] === 0xf0 && (buf[i + 1] & 0xf0) === 0x80) || // Overlong\n        (buf[i] === 0xf4 && buf[i + 1] > 0x8f) ||\n        buf[i] > 0xf4 // > U+10FFFF\n      ) {\n        return false;\n      }\n\n      i += 4;\n    } else {\n      return false;\n    }\n  }\n\n  return true;\n}\n\n/**\n * Determines whether a value is a `Blob`.\n *\n * @param {*} value The value to be tested\n * @return {Boolean} `true` if `value` is a `Blob`, else `false`\n * @private\n */\nfunction isBlob(value) {\n  return (\n    hasBlob &&\n    typeof value === 'object' &&\n    typeof value.arrayBuffer === 'function' &&\n    typeof value.type === 'string' &&\n    typeof value.stream === 'function' &&\n    (value[Symbol.toStringTag] === 'Blob' ||\n      value[Symbol.toStringTag] === 'File')\n  );\n}\n\nmodule.exports = {\n  isBlob,\n  isValidStatusCode,\n  isValidUTF8: _isValidUTF8,\n  tokenChars\n};\n\nif (isUtf8) {\n  module.exports.isValidUTF8 = function (buf) {\n    return buf.length < 24 ? _isValidUTF8(buf) : isUtf8(buf);\n  };\n} /* istanbul ignore else  */ else if (!process.env.WS_NO_UTF_8_VALIDATE) {\n  try {\n    const isValidUTF8 = require('utf-8-validate');\n\n    module.exports.isValidUTF8 = function (buf) {\n      return buf.length < 32 ? _isValidUTF8(buf) : isValidUTF8(buf);\n    };\n  } catch (e) {\n    // Continue regardless of the error.\n  }\n}\n","'use strict';\n\nconst { Writable } = require('stream');\n\nconst PerMessageDeflate = require('./permessage-deflate');\nconst {\n  BINARY_TYPES,\n  EMPTY_BUFFER,\n  kStatusCode,\n  kWebSocket\n} = require('./constants');\nconst { concat, toArrayBuffer, unmask } = require('./buffer-util');\nconst { isValidStatusCode, isValidUTF8 } = require('./validation');\n\nconst FastBuffer = Buffer[Symbol.species];\n\nconst GET_INFO = 0;\nconst GET_PAYLOAD_LENGTH_16 = 1;\nconst GET_PAYLOAD_LENGTH_64 = 2;\nconst GET_MASK = 3;\nconst GET_DATA = 4;\nconst INFLATING = 5;\nconst DEFER_EVENT = 6;\n\n/**\n * HyBi Receiver implementation.\n *\n * @extends Writable\n */\nclass Receiver extends Writable {\n  /**\n   * Creates a Receiver instance.\n   *\n   * @param {Object} [options] Options object\n   * @param {Boolean} [options.allowSynchronousEvents=true] Specifies whether\n   *     any of the `'message'`, `'ping'`, and `'pong'` events can be emitted\n   *     multiple times in the same tick\n   * @param {String} [options.binaryType=nodebuffer] The type for binary data\n   * @param {Object} [options.extensions] An object containing the negotiated\n   *     extensions\n   * @param {Boolean} [options.isServer=false] Specifies whether to operate in\n   *     client or server mode\n   * @param {Number} [options.maxPayload=0] The maximum allowed message length\n   * @param {Boolean} [options.skipUTF8Validation=false] Specifies whether or\n   *     not to skip UTF-8 validation for text and close messages\n   */\n  constructor(options = {}) {\n    super();\n\n    this._allowSynchronousEvents =\n      options.allowSynchronousEvents !== undefined\n        ? options.allowSynchronousEvents\n        : true;\n    this._binaryType = options.binaryType || BINARY_TYPES[0];\n    this._extensions = options.extensions || {};\n    this._isServer = !!options.isServer;\n    this._maxPayload = options.maxPayload | 0;\n    this._skipUTF8Validation = !!options.skipUTF8Validation;\n    this[kWebSocket] = undefined;\n\n    this._bufferedBytes = 0;\n    this._buffers = [];\n\n    this._compressed = false;\n    this._payloadLength = 0;\n    this._mask = undefined;\n    this._fragmented = 0;\n    this._masked = false;\n    this._fin = false;\n    this._opcode = 0;\n\n    this._totalPayloadLength = 0;\n    this._messageLength = 0;\n    this._fragments = [];\n\n    this._errored = false;\n    this._loop = false;\n    this._state = GET_INFO;\n  }\n\n  /**\n   * Implements `Writable.prototype._write()`.\n   *\n   * @param {Buffer} chunk The chunk of data to write\n   * @param {String} encoding The character encoding of `chunk`\n   * @param {Function} cb Callback\n   * @private\n   */\n  _write(chunk, encoding, cb) {\n    if (this._opcode === 0x08 && this._state == GET_INFO) return cb();\n\n    this._bufferedBytes += chunk.length;\n    this._buffers.push(chunk);\n    this.startLoop(cb);\n  }\n\n  /**\n   * Consumes `n` bytes from the buffered data.\n   *\n   * @param {Number} n The number of bytes to consume\n   * @return {Buffer} The consumed bytes\n   * @private\n   */\n  consume(n) {\n    this._bufferedBytes -= n;\n\n    if (n === this._buffers[0].length) return this._buffers.shift();\n\n    if (n < this._buffers[0].length) {\n      const buf = this._buffers[0];\n      this._buffers[0] = new FastBuffer(\n        buf.buffer,\n        buf.byteOffset + n,\n        buf.length - n\n      );\n\n      return new FastBuffer(buf.buffer, buf.byteOffset, n);\n    }\n\n    const dst = Buffer.allocUnsafe(n);\n\n    do {\n      const buf = this._buffers[0];\n      const offset = dst.length - n;\n\n      if (n >= buf.length) {\n        dst.set(this._buffers.shift(), offset);\n      } else {\n        dst.set(new Uint8Array(buf.buffer, buf.byteOffset, n), offset);\n        this._buffers[0] = new FastBuffer(\n          buf.buffer,\n          buf.byteOffset + n,\n          buf.length - n\n        );\n      }\n\n      n -= buf.length;\n    } while (n > 0);\n\n    return dst;\n  }\n\n  /**\n   * Starts the parsing loop.\n   *\n   * @param {Function} cb Callback\n   * @private\n   */\n  startLoop(cb) {\n    this._loop = true;\n\n    do {\n      switch (this._state) {\n        case GET_INFO:\n          this.getInfo(cb);\n          break;\n        case GET_PAYLOAD_LENGTH_16:\n          this.getPayloadLength16(cb);\n          break;\n        case GET_PAYLOAD_LENGTH_64:\n          this.getPayloadLength64(cb);\n          break;\n        case GET_MASK:\n          this.getMask();\n          break;\n        case GET_DATA:\n          this.getData(cb);\n          break;\n        case INFLATING:\n        case DEFER_EVENT:\n          this._loop = false;\n          return;\n      }\n    } while (this._loop);\n\n    if (!this._errored) cb();\n  }\n\n  /**\n   * Reads the first two bytes of a frame.\n   *\n   * @param {Function} cb Callback\n   * @private\n   */\n  getInfo(cb) {\n    if (this._bufferedBytes < 2) {\n      this._loop = false;\n      return;\n    }\n\n    const buf = this.consume(2);\n\n    if ((buf[0] & 0x30) !== 0x00) {\n      const error = this.createError(\n        RangeError,\n        'RSV2 and RSV3 must be clear',\n        true,\n        1002,\n        'WS_ERR_UNEXPECTED_RSV_2_3'\n      );\n\n      cb(error);\n      return;\n    }\n\n    const compressed = (buf[0] & 0x40) === 0x40;\n\n    if (compressed && !this._extensions[PerMessageDeflate.extensionName]) {\n      const error = this.createError(\n        RangeError,\n        'RSV1 must be clear',\n        true,\n        1002,\n        'WS_ERR_UNEXPECTED_RSV_1'\n      );\n\n      cb(error);\n      return;\n    }\n\n    this._fin = (buf[0] & 0x80) === 0x80;\n    this._opcode = buf[0] & 0x0f;\n    this._payloadLength = buf[1] & 0x7f;\n\n    if (this._opcode === 0x00) {\n      if (compressed) {\n        const error = this.createError(\n          RangeError,\n          'RSV1 must be clear',\n          true,\n          1002,\n          'WS_ERR_UNEXPECTED_RSV_1'\n        );\n\n        cb(error);\n        return;\n      }\n\n      if (!this._fragmented) {\n        const error = this.createError(\n          RangeError,\n          'invalid opcode 0',\n          true,\n          1002,\n          'WS_ERR_INVALID_OPCODE'\n        );\n\n        cb(error);\n        return;\n      }\n\n      this._opcode = this._fragmented;\n    } else if (this._opcode === 0x01 || this._opcode === 0x02) {\n      if (this._fragmented) {\n        const error = this.createError(\n          RangeError,\n          `invalid opcode ${this._opcode}`,\n          true,\n          1002,\n          'WS_ERR_INVALID_OPCODE'\n        );\n\n        cb(error);\n        return;\n      }\n\n      this._compressed = compressed;\n    } else if (this._opcode > 0x07 && this._opcode < 0x0b) {\n      if (!this._fin) {\n        const error = this.createError(\n          RangeError,\n          'FIN must be set',\n          true,\n          1002,\n          'WS_ERR_EXPECTED_FIN'\n        );\n\n        cb(error);\n        return;\n      }\n\n      if (compressed) {\n        const error = this.createError(\n          RangeError,\n          'RSV1 must be clear',\n          true,\n          1002,\n          'WS_ERR_UNEXPECTED_RSV_1'\n        );\n\n        cb(error);\n        return;\n      }\n\n      if (\n        this._payloadLength > 0x7d ||\n        (this._opcode === 0x08 && this._payloadLength === 1)\n      ) {\n        const error = this.createError(\n          RangeError,\n          `invalid payload length ${this._payloadLength}`,\n          true,\n          1002,\n          'WS_ERR_INVALID_CONTROL_PAYLOAD_LENGTH'\n        );\n\n        cb(error);\n        return;\n      }\n    } else {\n      const error = this.createError(\n        RangeError,\n        `invalid opcode ${this._opcode}`,\n        true,\n        1002,\n        'WS_ERR_INVALID_OPCODE'\n      );\n\n      cb(error);\n      return;\n    }\n\n    if (!this._fin && !this._fragmented) this._fragmented = this._opcode;\n    this._masked = (buf[1] & 0x80) === 0x80;\n\n    if (this._isServer) {\n      if (!this._masked) {\n        const error = this.createError(\n          RangeError,\n          'MASK must be set',\n          true,\n          1002,\n          'WS_ERR_EXPECTED_MASK'\n        );\n\n        cb(error);\n        return;\n      }\n    } else if (this._masked) {\n      const error = this.createError(\n        RangeError,\n        'MASK must be clear',\n        true,\n        1002,\n        'WS_ERR_UNEXPECTED_MASK'\n      );\n\n      cb(error);\n      return;\n    }\n\n    if (this._payloadLength === 126) this._state = GET_PAYLOAD_LENGTH_16;\n    else if (this._payloadLength === 127) this._state = GET_PAYLOAD_LENGTH_64;\n    else this.haveLength(cb);\n  }\n\n  /**\n   * Gets extended payload length (7+16).\n   *\n   * @param {Function} cb Callback\n   * @private\n   */\n  getPayloadLength16(cb) {\n    if (this._bufferedBytes < 2) {\n      this._loop = false;\n      return;\n    }\n\n    this._payloadLength = this.consume(2).readUInt16BE(0);\n    this.haveLength(cb);\n  }\n\n  /**\n   * Gets extended payload length (7+64).\n   *\n   * @param {Function} cb Callback\n   * @private\n   */\n  getPayloadLength64(cb) {\n    if (this._bufferedBytes < 8) {\n      this._loop = false;\n      return;\n    }\n\n    const buf = this.consume(8);\n    const num = buf.readUInt32BE(0);\n\n    //\n    // The maximum safe integer in JavaScript is 2^53 - 1. An error is returned\n    // if payload length is greater than this number.\n    //\n    if (num > Math.pow(2, 53 - 32) - 1) {\n      const error = this.createError(\n        RangeError,\n        'Unsupported WebSocket frame: payload length > 2^53 - 1',\n        false,\n        1009,\n        'WS_ERR_UNSUPPORTED_DATA_PAYLOAD_LENGTH'\n      );\n\n      cb(error);\n      return;\n    }\n\n    this._payloadLength = num * Math.pow(2, 32) + buf.readUInt32BE(4);\n    this.haveLength(cb);\n  }\n\n  /**\n   * Payload length has been read.\n   *\n   * @param {Function} cb Callback\n   * @private\n   */\n  haveLength(cb) {\n    if (this._payloadLength && this._opcode < 0x08) {\n      this._totalPayloadLength += this._payloadLength;\n      if (this._totalPayloadLength > this._maxPayload && this._maxPayload > 0) {\n        const error = this.createError(\n          RangeError,\n          'Max payload size exceeded',\n          false,\n          1009,\n          'WS_ERR_UNSUPPORTED_MESSAGE_LENGTH'\n        );\n\n        cb(error);\n        return;\n      }\n    }\n\n    if (this._masked) this._state = GET_MASK;\n    else this._state = GET_DATA;\n  }\n\n  /**\n   * Reads mask bytes.\n   *\n   * @private\n   */\n  getMask() {\n    if (this._bufferedBytes < 4) {\n      this._loop = false;\n      return;\n    }\n\n    this._mask = this.consume(4);\n    this._state = GET_DATA;\n  }\n\n  /**\n   * Reads data bytes.\n   *\n   * @param {Function} cb Callback\n   * @private\n   */\n  getData(cb) {\n    let data = EMPTY_BUFFER;\n\n    if (this._payloadLength) {\n      if (this._bufferedBytes < this._payloadLength) {\n        this._loop = false;\n        return;\n      }\n\n      data = this.consume(this._payloadLength);\n\n      if (\n        this._masked &&\n        (this._mask[0] | this._mask[1] | this._mask[2] | this._mask[3]) !== 0\n      ) {\n        unmask(data, this._mask);\n      }\n    }\n\n    if (this._opcode > 0x07) {\n      this.controlMessage(data, cb);\n      return;\n    }\n\n    if (this._compressed) {\n      this._state = INFLATING;\n      this.decompress(data, cb);\n      return;\n    }\n\n    if (data.length) {\n      //\n      // This message is not compressed so its length is the sum of the payload\n      // length of all fragments.\n      //\n      this._messageLength = this._totalPayloadLength;\n      this._fragments.push(data);\n    }\n\n    this.dataMessage(cb);\n  }\n\n  /**\n   * Decompresses data.\n   *\n   * @param {Buffer} data Compressed data\n   * @param {Function} cb Callback\n   * @private\n   */\n  decompress(data, cb) {\n    const perMessageDeflate = this._extensions[PerMessageDeflate.extensionName];\n\n    perMessageDeflate.decompress(data, this._fin, (err, buf) => {\n      if (err) return cb(err);\n\n      if (buf.length) {\n        this._messageLength += buf.length;\n        if (this._messageLength > this._maxPayload && this._maxPayload > 0) {\n          const error = this.createError(\n            RangeError,\n            'Max payload size exceeded',\n            false,\n            1009,\n            'WS_ERR_UNSUPPORTED_MESSAGE_LENGTH'\n          );\n\n          cb(error);\n          return;\n        }\n\n        this._fragments.push(buf);\n      }\n\n      this.dataMessage(cb);\n      if (this._state === GET_INFO) this.startLoop(cb);\n    });\n  }\n\n  /**\n   * Handles a data message.\n   *\n   * @param {Function} cb Callback\n   * @private\n   */\n  dataMessage(cb) {\n    if (!this._fin) {\n      this._state = GET_INFO;\n      return;\n    }\n\n    const messageLength = this._messageLength;\n    const fragments = this._fragments;\n\n    this._totalPayloadLength = 0;\n    this._messageLength = 0;\n    this._fragmented = 0;\n    this._fragments = [];\n\n    if (this._opcode === 2) {\n      let data;\n\n      if (this._binaryType === 'nodebuffer') {\n        data = concat(fragments, messageLength);\n      } else if (this._binaryType === 'arraybuffer') {\n        data = toArrayBuffer(concat(fragments, messageLength));\n      } else if (this._binaryType === 'blob') {\n        data = new Blob(fragments);\n      } else {\n        data = fragments;\n      }\n\n      if (this._allowSynchronousEvents) {\n        this.emit('message', data, true);\n        this._state = GET_INFO;\n      } else {\n        this._state = DEFER_EVENT;\n        setImmediate(() => {\n          this.emit('message', data, true);\n          this._state = GET_INFO;\n          this.startLoop(cb);\n        });\n      }\n    } else {\n      const buf = concat(fragments, messageLength);\n\n      if (!this._skipUTF8Validation && !isValidUTF8(buf)) {\n        const error = this.createError(\n          Error,\n          'invalid UTF-8 sequence',\n          true,\n          1007,\n          'WS_ERR_INVALID_UTF8'\n        );\n\n        cb(error);\n        return;\n      }\n\n      if (this._state === INFLATING || this._allowSynchronousEvents) {\n        this.emit('message', buf, false);\n        this._state = GET_INFO;\n      } else {\n        this._state = DEFER_EVENT;\n        setImmediate(() => {\n          this.emit('message', buf, false);\n          this._state = GET_INFO;\n          this.startLoop(cb);\n        });\n      }\n    }\n  }\n\n  /**\n   * Handles a control message.\n   *\n   * @param {Buffer} data Data to handle\n   * @return {(Error|RangeError|undefined)} A possible error\n   * @private\n   */\n  controlMessage(data, cb) {\n    if (this._opcode === 0x08) {\n      if (data.length === 0) {\n        this._loop = false;\n        this.emit('conclude', 1005, EMPTY_BUFFER);\n        this.end();\n      } else {\n        const code = data.readUInt16BE(0);\n\n        if (!isValidStatusCode(code)) {\n          const error = this.createError(\n            RangeError,\n            `invalid status code ${code}`,\n            true,\n            1002,\n            'WS_ERR_INVALID_CLOSE_CODE'\n          );\n\n          cb(error);\n          return;\n        }\n\n        const buf = new FastBuffer(\n          data.buffer,\n          data.byteOffset + 2,\n          data.length - 2\n        );\n\n        if (!this._skipUTF8Validation && !isValidUTF8(buf)) {\n          const error = this.createError(\n            Error,\n            'invalid UTF-8 sequence',\n            true,\n            1007,\n            'WS_ERR_INVALID_UTF8'\n          );\n\n          cb(error);\n          return;\n        }\n\n        this._loop = false;\n        this.emit('conclude', code, buf);\n        this.end();\n      }\n\n      this._state = GET_INFO;\n      return;\n    }\n\n    if (this._allowSynchronousEvents) {\n      this.emit(this._opcode === 0x09 ? 'ping' : 'pong', data);\n      this._state = GET_INFO;\n    } else {\n      this._state = DEFER_EVENT;\n      setImmediate(() => {\n        this.emit(this._opcode === 0x09 ? 'ping' : 'pong', data);\n        this._state = GET_INFO;\n        this.startLoop(cb);\n      });\n    }\n  }\n\n  /**\n   * Builds an error object.\n   *\n   * @param {function(new:Error|RangeError)} ErrorCtor The error constructor\n   * @param {String} message The error message\n   * @param {Boolean} prefix Specifies whether or not to add a default prefix to\n   *     `message`\n   * @param {Number} statusCode The status code\n   * @param {String} errorCode The exposed error code\n   * @return {(Error|RangeError)} The error\n   * @private\n   */\n  createError(ErrorCtor, message, prefix, statusCode, errorCode) {\n    this._loop = false;\n    this._errored = true;\n\n    const err = new ErrorCtor(\n      prefix ? `Invalid WebSocket frame: ${message}` : message\n    );\n\n    Error.captureStackTrace(err, this.createError);\n    err.code = errorCode;\n    err[kStatusCode] = statusCode;\n    return err;\n  }\n}\n\nmodule.exports = Receiver;\n","/* eslint no-unused-vars: [\"error\", { \"varsIgnorePattern\": \"^Duplex\" }] */\n\n'use strict';\n\nconst { Duplex } = require('stream');\nconst { randomFillSync } = require('crypto');\n\nconst PerMessageDeflate = require('./permessage-deflate');\nconst { EMPTY_BUFFER, kWebSocket, NOOP } = require('./constants');\nconst { isBlob, isValidStatusCode } = require('./validation');\nconst { mask: applyMask, toBuffer } = require('./buffer-util');\n\nconst kByteLength = Symbol('kByteLength');\nconst maskBuffer = Buffer.alloc(4);\nconst RANDOM_POOL_SIZE = 8 * 1024;\nlet randomPool;\nlet randomPoolPointer = RANDOM_POOL_SIZE;\n\nconst DEFAULT = 0;\nconst DEFLATING = 1;\nconst GET_BLOB_DATA = 2;\n\n/**\n * HyBi Sender implementation.\n */\nclass Sender {\n  /**\n   * Creates a Sender instance.\n   *\n   * @param {Duplex} socket The connection socket\n   * @param {Object} [extensions] An object containing the negotiated extensions\n   * @param {Function} [generateMask] The function used to generate the masking\n   *     key\n   */\n  constructor(socket, extensions, generateMask) {\n    this._extensions = extensions || {};\n\n    if (generateMask) {\n      this._generateMask = generateMask;\n      this._maskBuffer = Buffer.alloc(4);\n    }\n\n    this._socket = socket;\n\n    this._firstFragment = true;\n    this._compress = false;\n\n    this._bufferedBytes = 0;\n    this._queue = [];\n    this._state = DEFAULT;\n    this.onerror = NOOP;\n    this[kWebSocket] = undefined;\n  }\n\n  /**\n   * Frames a piece of data according to the HyBi WebSocket protocol.\n   *\n   * @param {(Buffer|String)} data The data to frame\n   * @param {Object} options Options object\n   * @param {Boolean} [options.fin=false] Specifies whether or not to set the\n   *     FIN bit\n   * @param {Function} [options.generateMask] The function used to generate the\n   *     masking key\n   * @param {Boolean} [options.mask=false] Specifies whether or not to mask\n   *     `data`\n   * @param {Buffer} [options.maskBuffer] The buffer used to store the masking\n   *     key\n   * @param {Number} options.opcode The opcode\n   * @param {Boolean} [options.readOnly=false] Specifies whether `data` can be\n   *     modified\n   * @param {Boolean} [options.rsv1=false] Specifies whether or not to set the\n   *     RSV1 bit\n   * @return {(Buffer|String)[]} The framed data\n   * @public\n   */\n  static frame(data, options) {\n    let mask;\n    let merge = false;\n    let offset = 2;\n    let skipMasking = false;\n\n    if (options.mask) {\n      mask = options.maskBuffer || maskBuffer;\n\n      if (options.generateMask) {\n        options.generateMask(mask);\n      } else {\n        if (randomPoolPointer === RANDOM_POOL_SIZE) {\n          /* istanbul ignore else  */\n          if (randomPool === undefined) {\n            //\n            // This is lazily initialized because server-sent frames must not\n            // be masked so it may never be used.\n            //\n            randomPool = Buffer.alloc(RANDOM_POOL_SIZE);\n          }\n\n          randomFillSync(randomPool, 0, RANDOM_POOL_SIZE);\n          randomPoolPointer = 0;\n        }\n\n        mask[0] = randomPool[randomPoolPointer++];\n        mask[1] = randomPool[randomPoolPointer++];\n        mask[2] = randomPool[randomPoolPointer++];\n        mask[3] = randomPool[randomPoolPointer++];\n      }\n\n      skipMasking = (mask[0] | mask[1] | mask[2] | mask[3]) === 0;\n      offset = 6;\n    }\n\n    let dataLength;\n\n    if (typeof data === 'string') {\n      if (\n        (!options.mask || skipMasking) &&\n        options[kByteLength] !== undefined\n      ) {\n        dataLength = options[kByteLength];\n      } else {\n        data = Buffer.from(data);\n        dataLength = data.length;\n      }\n    } else {\n      dataLength = data.length;\n      merge = options.mask && options.readOnly && !skipMasking;\n    }\n\n    let payloadLength = dataLength;\n\n    if (dataLength >= 65536) {\n      offset += 8;\n      payloadLength = 127;\n    } else if (dataLength > 125) {\n      offset += 2;\n      payloadLength = 126;\n    }\n\n    const target = Buffer.allocUnsafe(merge ? dataLength + offset : offset);\n\n    target[0] = options.fin ? options.opcode | 0x80 : options.opcode;\n    if (options.rsv1) target[0] |= 0x40;\n\n    target[1] = payloadLength;\n\n    if (payloadLength === 126) {\n      target.writeUInt16BE(dataLength, 2);\n    } else if (payloadLength === 127) {\n      target[2] = target[3] = 0;\n      target.writeUIntBE(dataLength, 4, 6);\n    }\n\n    if (!options.mask) return [target, data];\n\n    target[1] |= 0x80;\n    target[offset - 4] = mask[0];\n    target[offset - 3] = mask[1];\n    target[offset - 2] = mask[2];\n    target[offset - 1] = mask[3];\n\n    if (skipMasking) return [target, data];\n\n    if (merge) {\n      applyMask(data, mask, target, offset, dataLength);\n      return [target];\n    }\n\n    applyMask(data, mask, data, 0, dataLength);\n    return [target, data];\n  }\n\n  /**\n   * Sends a close message to the other peer.\n   *\n   * @param {Number} [code] The status code component of the body\n   * @param {(String|Buffer)} [data] The message component of the body\n   * @param {Boolean} [mask=false] Specifies whether or not to mask the message\n   * @param {Function} [cb] Callback\n   * @public\n   */\n  close(code, data, mask, cb) {\n    let buf;\n\n    if (code === undefined) {\n      buf = EMPTY_BUFFER;\n    } else if (typeof code !== 'number' || !isValidStatusCode(code)) {\n      throw new TypeError('First argument must be a valid error code number');\n    } else if (data === undefined || !data.length) {\n      buf = Buffer.allocUnsafe(2);\n      buf.writeUInt16BE(code, 0);\n    } else {\n      const length = Buffer.byteLength(data);\n\n      if (length > 123) {\n        throw new RangeError('The message must not be greater than 123 bytes');\n      }\n\n      buf = Buffer.allocUnsafe(2 + length);\n      buf.writeUInt16BE(code, 0);\n\n      if (typeof data === 'string') {\n        buf.write(data, 2);\n      } else {\n        buf.set(data, 2);\n      }\n    }\n\n    const options = {\n      [kByteLength]: buf.length,\n      fin: true,\n      generateMask: this._generateMask,\n      mask,\n      maskBuffer: this._maskBuffer,\n      opcode: 0x08,\n      readOnly: false,\n      rsv1: false\n    };\n\n    if (this._state !== DEFAULT) {\n      this.enqueue([this.dispatch, buf, false, options, cb]);\n    } else {\n      this.sendFrame(Sender.frame(buf, options), cb);\n    }\n  }\n\n  /**\n   * Sends a ping message to the other peer.\n   *\n   * @param {*} data The message to send\n   * @param {Boolean} [mask=false] Specifies whether or not to mask `data`\n   * @param {Function} [cb] Callback\n   * @public\n   */\n  ping(data, mask, cb) {\n    let byteLength;\n    let readOnly;\n\n    if (typeof data === 'string') {\n      byteLength = Buffer.byteLength(data);\n      readOnly = false;\n    } else if (isBlob(data)) {\n      byteLength = data.size;\n      readOnly = false;\n    } else {\n      data = toBuffer(data);\n      byteLength = data.length;\n      readOnly = toBuffer.readOnly;\n    }\n\n    if (byteLength > 125) {\n      throw new RangeError('The data size must not be greater than 125 bytes');\n    }\n\n    const options = {\n      [kByteLength]: byteLength,\n      fin: true,\n      generateMask: this._generateMask,\n      mask,\n      maskBuffer: this._maskBuffer,\n      opcode: 0x09,\n      readOnly,\n      rsv1: false\n    };\n\n    if (isBlob(data)) {\n      if (this._state !== DEFAULT) {\n        this.enqueue([this.getBlobData, data, false, options, cb]);\n      } else {\n        this.getBlobData(data, false, options, cb);\n      }\n    } else if (this._state !== DEFAULT) {\n      this.enqueue([this.dispatch, data, false, options, cb]);\n    } else {\n      this.sendFrame(Sender.frame(data, options), cb);\n    }\n  }\n\n  /**\n   * Sends a pong message to the other peer.\n   *\n   * @param {*} data The message to send\n   * @param {Boolean} [mask=false] Specifies whether or not to mask `data`\n   * @param {Function} [cb] Callback\n   * @public\n   */\n  pong(data, mask, cb) {\n    let byteLength;\n    let readOnly;\n\n    if (typeof data === 'string') {\n      byteLength = Buffer.byteLength(data);\n      readOnly = false;\n    } else if (isBlob(data)) {\n      byteLength = data.size;\n      readOnly = false;\n    } else {\n      data = toBuffer(data);\n      byteLength = data.length;\n      readOnly = toBuffer.readOnly;\n    }\n\n    if (byteLength > 125) {\n      throw new RangeError('The data size must not be greater than 125 bytes');\n    }\n\n    const options = {\n      [kByteLength]: byteLength,\n      fin: true,\n      generateMask: this._generateMask,\n      mask,\n      maskBuffer: this._maskBuffer,\n      opcode: 0x0a,\n      readOnly,\n      rsv1: false\n    };\n\n    if (isBlob(data)) {\n      if (this._state !== DEFAULT) {\n        this.enqueue([this.getBlobData, data, false, options, cb]);\n      } else {\n        this.getBlobData(data, false, options, cb);\n      }\n    } else if (this._state !== DEFAULT) {\n      this.enqueue([this.dispatch, data, false, options, cb]);\n    } else {\n      this.sendFrame(Sender.frame(data, options), cb);\n    }\n  }\n\n  /**\n   * Sends a data message to the other peer.\n   *\n   * @param {*} data The message to send\n   * @param {Object} options Options object\n   * @param {Boolean} [options.binary=false] Specifies whether `data` is binary\n   *     or text\n   * @param {Boolean} [options.compress=false] Specifies whether or not to\n   *     compress `data`\n   * @param {Boolean} [options.fin=false] Specifies whether the fragment is the\n   *     last one\n   * @param {Boolean} [options.mask=false] Specifies whether or not to mask\n   *     `data`\n   * @param {Function} [cb] Callback\n   * @public\n   */\n  send(data, options, cb) {\n    const perMessageDeflate = this._extensions[PerMessageDeflate.extensionName];\n    let opcode = options.binary ? 2 : 1;\n    let rsv1 = options.compress;\n\n    let byteLength;\n    let readOnly;\n\n    if (typeof data === 'string') {\n      byteLength = Buffer.byteLength(data);\n      readOnly = false;\n    } else if (isBlob(data)) {\n      byteLength = data.size;\n      readOnly = false;\n    } else {\n      data = toBuffer(data);\n      byteLength = data.length;\n      readOnly = toBuffer.readOnly;\n    }\n\n    if (this._firstFragment) {\n      this._firstFragment = false;\n      if (\n        rsv1 &&\n        perMessageDeflate &&\n        perMessageDeflate.params[\n          perMessageDeflate._isServer\n            ? 'server_no_context_takeover'\n            : 'client_no_context_takeover'\n        ]\n      ) {\n        rsv1 = byteLength >= perMessageDeflate._threshold;\n      }\n      this._compress = rsv1;\n    } else {\n      rsv1 = false;\n      opcode = 0;\n    }\n\n    if (options.fin) this._firstFragment = true;\n\n    const opts = {\n      [kByteLength]: byteLength,\n      fin: options.fin,\n      generateMask: this._generateMask,\n      mask: options.mask,\n      maskBuffer: this._maskBuffer,\n      opcode,\n      readOnly,\n      rsv1\n    };\n\n    if (isBlob(data)) {\n      if (this._state !== DEFAULT) {\n        this.enqueue([this.getBlobData, data, this._compress, opts, cb]);\n      } else {\n        this.getBlobData(data, this._compress, opts, cb);\n      }\n    } else if (this._state !== DEFAULT) {\n      this.enqueue([this.dispatch, data, this._compress, opts, cb]);\n    } else {\n      this.dispatch(data, this._compress, opts, cb);\n    }\n  }\n\n  /**\n   * Gets the contents of a blob as binary data.\n   *\n   * @param {Blob} blob The blob\n   * @param {Boolean} [compress=false] Specifies whether or not to compress\n   *     the data\n   * @param {Object} options Options object\n   * @param {Boolean} [options.fin=false] Specifies whether or not to set the\n   *     FIN bit\n   * @param {Function} [options.generateMask] The function used to generate the\n   *     masking key\n   * @param {Boolean} [options.mask=false] Specifies whether or not to mask\n   *     `data`\n   * @param {Buffer} [options.maskBuffer] The buffer used to store the masking\n   *     key\n   * @param {Number} options.opcode The opcode\n   * @param {Boolean} [options.readOnly=false] Specifies whether `data` can be\n   *     modified\n   * @param {Boolean} [options.rsv1=false] Specifies whether or not to set the\n   *     RSV1 bit\n   * @param {Function} [cb] Callback\n   * @private\n   */\n  getBlobData(blob, compress, options, cb) {\n    this._bufferedBytes += options[kByteLength];\n    this._state = GET_BLOB_DATA;\n\n    blob\n      .arrayBuffer()\n      .then((arrayBuffer) => {\n        if (this._socket.destroyed) {\n          const err = new Error(\n            'The socket was closed while the blob was being read'\n          );\n\n          //\n          // `callCallbacks` is called in the next tick to ensure that errors\n          // that might be thrown in the callbacks behave like errors thrown\n          // outside the promise chain.\n          //\n          process.nextTick(callCallbacks, this, err, cb);\n          return;\n        }\n\n        this._bufferedBytes -= options[kByteLength];\n        const data = toBuffer(arrayBuffer);\n\n        if (!compress) {\n          this._state = DEFAULT;\n          this.sendFrame(Sender.frame(data, options), cb);\n          this.dequeue();\n        } else {\n          this.dispatch(data, compress, options, cb);\n        }\n      })\n      .catch((err) => {\n        //\n        // `onError` is called in the next tick for the same reason that\n        // `callCallbacks` above is.\n        //\n        process.nextTick(onError, this, err, cb);\n      });\n  }\n\n  /**\n   * Dispatches a message.\n   *\n   * @param {(Buffer|String)} data The message to send\n   * @param {Boolean} [compress=false] Specifies whether or not to compress\n   *     `data`\n   * @param {Object} options Options object\n   * @param {Boolean} [options.fin=false] Specifies whether or not to set the\n   *     FIN bit\n   * @param {Function} [options.generateMask] The function used to generate the\n   *     masking key\n   * @param {Boolean} [options.mask=false] Specifies whether or not to mask\n   *     `data`\n   * @param {Buffer} [options.maskBuffer] The buffer used to store the masking\n   *     key\n   * @param {Number} options.opcode The opcode\n   * @param {Boolean} [options.readOnly=false] Specifies whether `data` can be\n   *     modified\n   * @param {Boolean} [options.rsv1=false] Specifies whether or not to set the\n   *     RSV1 bit\n   * @param {Function} [cb] Callback\n   * @private\n   */\n  dispatch(data, compress, options, cb) {\n    if (!compress) {\n      this.sendFrame(Sender.frame(data, options), cb);\n      return;\n    }\n\n    const perMessageDeflate = this._extensions[PerMessageDeflate.extensionName];\n\n    this._bufferedBytes += options[kByteLength];\n    this._state = DEFLATING;\n    perMessageDeflate.compress(data, options.fin, (_, buf) => {\n      if (this._socket.destroyed) {\n        const err = new Error(\n          'The socket was closed while data was being compressed'\n        );\n\n        callCallbacks(this, err, cb);\n        return;\n      }\n\n      this._bufferedBytes -= options[kByteLength];\n      this._state = DEFAULT;\n      options.readOnly = false;\n      this.sendFrame(Sender.frame(buf, options), cb);\n      this.dequeue();\n    });\n  }\n\n  /**\n   * Executes queued send operations.\n   *\n   * @private\n   */\n  dequeue() {\n    while (this._state === DEFAULT && this._queue.length) {\n      const params = this._queue.shift();\n\n      this._bufferedBytes -= params[3][kByteLength];\n      Reflect.apply(params[0], this, params.slice(1));\n    }\n  }\n\n  /**\n   * Enqueues a send operation.\n   *\n   * @param {Array} params Send operation parameters.\n   * @private\n   */\n  enqueue(params) {\n    this._bufferedBytes += params[3][kByteLength];\n    this._queue.push(params);\n  }\n\n  /**\n   * Sends a frame.\n   *\n   * @param {Buffer[]} list The frame to send\n   * @param {Function} [cb] Callback\n   * @private\n   */\n  sendFrame(list, cb) {\n    if (list.length === 2) {\n      this._socket.cork();\n      this._socket.write(list[0]);\n      this._socket.write(list[1], cb);\n      this._socket.uncork();\n    } else {\n      this._socket.write(list[0], cb);\n    }\n  }\n}\n\nmodule.exports = Sender;\n\n/**\n * Calls queued callbacks with an error.\n *\n * @param {Sender} sender The `Sender` instance\n * @param {Error} err The error to call the callbacks with\n * @param {Function} [cb] The first callback\n * @private\n */\nfunction callCallbacks(sender, err, cb) {\n  if (typeof cb === 'function') cb(err);\n\n  for (let i = 0; i < sender._queue.length; i++) {\n    const params = sender._queue[i];\n    const callback = params[params.length - 1];\n\n    if (typeof callback === 'function') callback(err);\n  }\n}\n\n/**\n * Handles a `Sender` error.\n *\n * @param {Sender} sender The `Sender` instance\n * @param {Error} err The error\n * @param {Function} [cb] The first pending callback\n * @private\n */\nfunction onError(sender, err, cb) {\n  callCallbacks(sender, err, cb);\n  sender.onerror(err);\n}\n","'use strict';\n\nconst { kForOnEventAttribute, kListener } = require('./constants');\n\nconst kCode = Symbol('kCode');\nconst kData = Symbol('kData');\nconst kError = Symbol('kError');\nconst kMessage = Symbol('kMessage');\nconst kReason = Symbol('kReason');\nconst kTarget = Symbol('kTarget');\nconst kType = Symbol('kType');\nconst kWasClean = Symbol('kWasClean');\n\n/**\n * Class representing an event.\n */\nclass Event {\n  /**\n   * Create a new `Event`.\n   *\n   * @param {String} type The name of the event\n   * @throws {TypeError} If the `type` argument is not specified\n   */\n  constructor(type) {\n    this[kTarget] = null;\n    this[kType] = type;\n  }\n\n  /**\n   * @type {*}\n   */\n  get target() {\n    return this[kTarget];\n  }\n\n  /**\n   * @type {String}\n   */\n  get type() {\n    return this[kType];\n  }\n}\n\nObject.defineProperty(Event.prototype, 'target', { enumerable: true });\nObject.defineProperty(Event.prototype, 'type', { enumerable: true });\n\n/**\n * Class representing a close event.\n *\n * @extends Event\n */\nclass CloseEvent extends Event {\n  /**\n   * Create a new `CloseEvent`.\n   *\n   * @param {String} type The name of the event\n   * @param {Object} [options] A dictionary object that allows for setting\n   *     attributes via object members of the same name\n   * @param {Number} [options.code=0] The status code explaining why the\n   *     connection was closed\n   * @param {String} [options.reason=''] A human-readable string explaining why\n   *     the connection was closed\n   * @param {Boolean} [options.wasClean=false] Indicates whether or not the\n   *     connection was cleanly closed\n   */\n  constructor(type, options = {}) {\n    super(type);\n\n    this[kCode] = options.code === undefined ? 0 : options.code;\n    this[kReason] = options.reason === undefined ? '' : options.reason;\n    this[kWasClean] = options.wasClean === undefined ? false : options.wasClean;\n  }\n\n  /**\n   * @type {Number}\n   */\n  get code() {\n    return this[kCode];\n  }\n\n  /**\n   * @type {String}\n   */\n  get reason() {\n    return this[kReason];\n  }\n\n  /**\n   * @type {Boolean}\n   */\n  get wasClean() {\n    return this[kWasClean];\n  }\n}\n\nObject.defineProperty(CloseEvent.prototype, 'code', { enumerable: true });\nObject.defineProperty(CloseEvent.prototype, 'reason', { enumerable: true });\nObject.defineProperty(CloseEvent.prototype, 'wasClean', { enumerable: true });\n\n/**\n * Class representing an error event.\n *\n * @extends Event\n */\nclass ErrorEvent extends Event {\n  /**\n   * Create a new `ErrorEvent`.\n   *\n   * @param {String} type The name of the event\n   * @param {Object} [options] A dictionary object that allows for setting\n   *     attributes via object members of the same name\n   * @param {*} [options.error=null] The error that generated this event\n   * @param {String} [options.message=''] The error message\n   */\n  constructor(type, options = {}) {\n    super(type);\n\n    this[kError] = options.error === undefined ? null : options.error;\n    this[kMessage] = options.message === undefined ? '' : options.message;\n  }\n\n  /**\n   * @type {*}\n   */\n  get error() {\n    return this[kError];\n  }\n\n  /**\n   * @type {String}\n   */\n  get message() {\n    return this[kMessage];\n  }\n}\n\nObject.defineProperty(ErrorEvent.prototype, 'error', { enumerable: true });\nObject.defineProperty(ErrorEvent.prototype, 'message', { enumerable: true });\n\n/**\n * Class representing a message event.\n *\n * @extends Event\n */\nclass MessageEvent extends Event {\n  /**\n   * Create a new `MessageEvent`.\n   *\n   * @param {String} type The name of the event\n   * @param {Object} [options] A dictionary object that allows for setting\n   *     attributes via object members of the same name\n   * @param {*} [options.data=null] The message content\n   */\n  constructor(type, options = {}) {\n    super(type);\n\n    this[kData] = options.data === undefined ? null : options.data;\n  }\n\n  /**\n   * @type {*}\n   */\n  get data() {\n    return this[kData];\n  }\n}\n\nObject.defineProperty(MessageEvent.prototype, 'data', { enumerable: true });\n\n/**\n * This provides methods for emulating the `EventTarget` interface. It's not\n * meant to be used directly.\n *\n * @mixin\n */\nconst EventTarget = {\n  /**\n   * Register an event listener.\n   *\n   * @param {String} type A string representing the event type to listen for\n   * @param {(Function|Object)} handler The listener to add\n   * @param {Object} [options] An options object specifies characteristics about\n   *     the event listener\n   * @param {Boolean} [options.once=false] A `Boolean` indicating that the\n   *     listener should be invoked at most once after being added. If `true`,\n   *     the listener would be automatically removed when invoked.\n   * @public\n   */\n  addEventListener(type, handler, options = {}) {\n    for (const listener of this.listeners(type)) {\n      if (\n        !options[kForOnEventAttribute] &&\n        listener[kListener] === handler &&\n        !listener[kForOnEventAttribute]\n      ) {\n        return;\n      }\n    }\n\n    let wrapper;\n\n    if (type === 'message') {\n      wrapper = function onMessage(data, isBinary) {\n        const event = new MessageEvent('message', {\n          data: isBinary ? data : data.toString()\n        });\n\n        event[kTarget] = this;\n        callListener(handler, this, event);\n      };\n    } else if (type === 'close') {\n      wrapper = function onClose(code, message) {\n        const event = new CloseEvent('close', {\n          code,\n          reason: message.toString(),\n          wasClean: this._closeFrameReceived && this._closeFrameSent\n        });\n\n        event[kTarget] = this;\n        callListener(handler, this, event);\n      };\n    } else if (type === 'error') {\n      wrapper = function onError(error) {\n        const event = new ErrorEvent('error', {\n          error,\n          message: error.message\n        });\n\n        event[kTarget] = this;\n        callListener(handler, this, event);\n      };\n    } else if (type === 'open') {\n      wrapper = function onOpen() {\n        const event = new Event('open');\n\n        event[kTarget] = this;\n        callListener(handler, this, event);\n      };\n    } else {\n      return;\n    }\n\n    wrapper[kForOnEventAttribute] = !!options[kForOnEventAttribute];\n    wrapper[kListener] = handler;\n\n    if (options.once) {\n      this.once(type, wrapper);\n    } else {\n      this.on(type, wrapper);\n    }\n  },\n\n  /**\n   * Remove an event listener.\n   *\n   * @param {String} type A string representing the event type to remove\n   * @param {(Function|Object)} handler The listener to remove\n   * @public\n   */\n  removeEventListener(type, handler) {\n    for (const listener of this.listeners(type)) {\n      if (listener[kListener] === handler && !listener[kForOnEventAttribute]) {\n        this.removeListener(type, listener);\n        break;\n      }\n    }\n  }\n};\n\nmodule.exports = {\n  CloseEvent,\n  ErrorEvent,\n  Event,\n  EventTarget,\n  MessageEvent\n};\n\n/**\n * Call an event listener\n *\n * @param {(Function|Object)} listener The listener to call\n * @param {*} thisArg The value to use as `this`` when calling the listener\n * @param {Event} event The event to pass to the listener\n * @private\n */\nfunction callListener(listener, thisArg, event) {\n  if (typeof listener === 'object' && listener.handleEvent) {\n    listener.handleEvent.call(listener, event);\n  } else {\n    listener.call(thisArg, event);\n  }\n}\n","'use strict';\n\nconst { tokenChars } = require('./validation');\n\n/**\n * Adds an offer to the map of extension offers or a parameter to the map of\n * parameters.\n *\n * @param {Object} dest The map of extension offers or parameters\n * @param {String} name The extension or parameter name\n * @param {(Object|Boolean|String)} elem The extension parameters or the\n *     parameter value\n * @private\n */\nfunction push(dest, name, elem) {\n  if (dest[name] === undefined) dest[name] = [elem];\n  else dest[name].push(elem);\n}\n\n/**\n * Parses the `Sec-WebSocket-Extensions` header into an object.\n *\n * @param {String} header The field value of the header\n * @return {Object} The parsed object\n * @public\n */\nfunction parse(header) {\n  const offers = Object.create(null);\n  let params = Object.create(null);\n  let mustUnescape = false;\n  let isEscaping = false;\n  let inQuotes = false;\n  let extensionName;\n  let paramName;\n  let start = -1;\n  let code = -1;\n  let end = -1;\n  let i = 0;\n\n  for (; i < header.length; i++) {\n    code = header.charCodeAt(i);\n\n    if (extensionName === undefined) {\n      if (end === -1 && tokenChars[code] === 1) {\n        if (start === -1) start = i;\n      } else if (\n        i !== 0 &&\n        (code === 0x20 /* ' ' */ || code === 0x09) /* '\\t' */\n      ) {\n        if (end === -1 && start !== -1) end = i;\n      } else if (code === 0x3b /* ';' */ || code === 0x2c /* ',' */) {\n        if (start === -1) {\n          throw new SyntaxError(`Unexpected character at index ${i}`);\n        }\n\n        if (end === -1) end = i;\n        const name = header.slice(start, end);\n        if (code === 0x2c) {\n          push(offers, name, params);\n          params = Object.create(null);\n        } else {\n          extensionName = name;\n        }\n\n        start = end = -1;\n      } else {\n        throw new SyntaxError(`Unexpected character at index ${i}`);\n      }\n    } else if (paramName === undefined) {\n      if (end === -1 && tokenChars[code] === 1) {\n        if (start === -1) start = i;\n      } else if (code === 0x20 || code === 0x09) {\n        if (end === -1 && start !== -1) end = i;\n      } else if (code === 0x3b || code === 0x2c) {\n        if (start === -1) {\n          throw new SyntaxError(`Unexpected character at index ${i}`);\n        }\n\n        if (end === -1) end = i;\n        push(params, header.slice(start, end), true);\n        if (code === 0x2c) {\n          push(offers, extensionName, params);\n          params = Object.create(null);\n          extensionName = undefined;\n        }\n\n        start = end = -1;\n      } else if (code === 0x3d /* '=' */ && start !== -1 && end === -1) {\n        paramName = header.slice(start, i);\n        start = end = -1;\n      } else {\n        throw new SyntaxError(`Unexpected character at index ${i}`);\n      }\n    } else {\n      //\n      // The value of a quoted-string after unescaping must conform to the\n      // token ABNF, so only token characters are valid.\n      // Ref: https://tools.ietf.org/html/rfc6455#section-9.1\n      //\n      if (isEscaping) {\n        if (tokenChars[code] !== 1) {\n          throw new SyntaxError(`Unexpected character at index ${i}`);\n        }\n        if (start === -1) start = i;\n        else if (!mustUnescape) mustUnescape = true;\n        isEscaping = false;\n      } else if (inQuotes) {\n        if (tokenChars[code] === 1) {\n          if (start === -1) start = i;\n        } else if (code === 0x22 /* '\"' */ && start !== -1) {\n          inQuotes = false;\n          end = i;\n        } else if (code === 0x5c /* '\\' */) {\n          isEscaping = true;\n        } else {\n          throw new SyntaxError(`Unexpected character at index ${i}`);\n        }\n      } else if (code === 0x22 && header.charCodeAt(i - 1) === 0x3d) {\n        inQuotes = true;\n      } else if (end === -1 && tokenChars[code] === 1) {\n        if (start === -1) start = i;\n      } else if (start !== -1 && (code === 0x20 || code === 0x09)) {\n        if (end === -1) end = i;\n      } else if (code === 0x3b || code === 0x2c) {\n        if (start === -1) {\n          throw new SyntaxError(`Unexpected character at index ${i}`);\n        }\n\n        if (end === -1) end = i;\n        let value = header.slice(start, end);\n        if (mustUnescape) {\n          value = value.replace(/\\\\/g, '');\n          mustUnescape = false;\n        }\n        push(params, paramName, value);\n        if (code === 0x2c) {\n          push(offers, extensionName, params);\n          params = Object.create(null);\n          extensionName = undefined;\n        }\n\n        paramName = undefined;\n        start = end = -1;\n      } else {\n        throw new SyntaxError(`Unexpected character at index ${i}`);\n      }\n    }\n  }\n\n  if (start === -1 || inQuotes || code === 0x20 || code === 0x09) {\n    throw new SyntaxError('Unexpected end of input');\n  }\n\n  if (end === -1) end = i;\n  const token = header.slice(start, end);\n  if (extensionName === undefined) {\n    push(offers, token, params);\n  } else {\n    if (paramName === undefined) {\n      push(params, token, true);\n    } else if (mustUnescape) {\n      push(params, paramName, token.replace(/\\\\/g, ''));\n    } else {\n      push(params, paramName, token);\n    }\n    push(offers, extensionName, params);\n  }\n\n  return offers;\n}\n\n/**\n * Builds the `Sec-WebSocket-Extensions` header field value.\n *\n * @param {Object} extensions The map of extensions and parameters to format\n * @return {String} A string representing the given object\n * @public\n */\nfunction format(extensions) {\n  return Object.keys(extensions)\n    .map((extension) => {\n      let configurations = extensions[extension];\n      if (!Array.isArray(configurations)) configurations = [configurations];\n      return configurations\n        .map((params) => {\n          return [extension]\n            .concat(\n              Object.keys(params).map((k) => {\n                let values = params[k];\n                if (!Array.isArray(values)) values = [values];\n                return values\n                  .map((v) => (v === true ? k : `${k}=${v}`))\n                  .join('; ');\n              })\n            )\n            .join('; ');\n        })\n        .join(', ');\n    })\n    .join(', ');\n}\n\nmodule.exports = { format, parse };\n","/* eslint no-unused-vars: [\"error\", { \"varsIgnorePattern\": \"^Duplex|Readable$\", \"caughtErrors\": \"none\" }] */\n\n'use strict';\n\nconst EventEmitter = require('events');\nconst https = require('https');\nconst http = require('http');\nconst net = require('net');\nconst tls = require('tls');\nconst { randomBytes, createHash } = require('crypto');\nconst { Duplex, Readable } = require('stream');\nconst { URL } = require('url');\n\nconst PerMessageDeflate = require('./permessage-deflate');\nconst Receiver = require('./receiver');\nconst Sender = require('./sender');\nconst { isBlob } = require('./validation');\n\nconst {\n  BINARY_TYPES,\n  EMPTY_BUFFER,\n  GUID,\n  kForOnEventAttribute,\n  kListener,\n  kStatusCode,\n  kWebSocket,\n  NOOP\n} = require('./constants');\nconst {\n  EventTarget: { addEventListener, removeEventListener }\n} = require('./event-target');\nconst { format, parse } = require('./extension');\nconst { toBuffer } = require('./buffer-util');\n\nconst closeTimeout = 30 * 1000;\nconst kAborted = Symbol('kAborted');\nconst protocolVersions = [8, 13];\nconst readyStates = ['CONNECTING', 'OPEN', 'CLOSING', 'CLOSED'];\nconst subprotocolRegex = /^[!#$%&'*+\\-.0-9A-Z^_`|a-z~]+$/;\n\n/**\n * Class representing a WebSocket.\n *\n * @extends EventEmitter\n */\nclass WebSocket extends EventEmitter {\n  /**\n   * Create a new `WebSocket`.\n   *\n   * @param {(String|URL)} address The URL to which to connect\n   * @param {(String|String[])} [protocols] The subprotocols\n   * @param {Object} [options] Connection options\n   */\n  constructor(address, protocols, options) {\n    super();\n\n    this._binaryType = BINARY_TYPES[0];\n    this._closeCode = 1006;\n    this._closeFrameReceived = false;\n    this._closeFrameSent = false;\n    this._closeMessage = EMPTY_BUFFER;\n    this._closeTimer = null;\n    this._errorEmitted = false;\n    this._extensions = {};\n    this._paused = false;\n    this._protocol = '';\n    this._readyState = WebSocket.CONNECTING;\n    this._receiver = null;\n    this._sender = null;\n    this._socket = null;\n\n    if (address !== null) {\n      this._bufferedAmount = 0;\n      this._isServer = false;\n      this._redirects = 0;\n\n      if (protocols === undefined) {\n        protocols = [];\n      } else if (!Array.isArray(protocols)) {\n        if (typeof protocols === 'object' && protocols !== null) {\n          options = protocols;\n          protocols = [];\n        } else {\n          protocols = [protocols];\n        }\n      }\n\n      initAsClient(this, address, protocols, options);\n    } else {\n      this._autoPong = options.autoPong;\n      this._isServer = true;\n    }\n  }\n\n  /**\n   * For historical reasons, the custom \"nodebuffer\" type is used by the default\n   * instead of \"blob\".\n   *\n   * @type {String}\n   */\n  get binaryType() {\n    return this._binaryType;\n  }\n\n  set binaryType(type) {\n    if (!BINARY_TYPES.includes(type)) return;\n\n    this._binaryType = type;\n\n    //\n    // Allow to change `binaryType` on the fly.\n    //\n    if (this._receiver) this._receiver._binaryType = type;\n  }\n\n  /**\n   * @type {Number}\n   */\n  get bufferedAmount() {\n    if (!this._socket) return this._bufferedAmount;\n\n    return this._socket._writableState.length + this._sender._bufferedBytes;\n  }\n\n  /**\n   * @type {String}\n   */\n  get extensions() {\n    return Object.keys(this._extensions).join();\n  }\n\n  /**\n   * @type {Boolean}\n   */\n  get isPaused() {\n    return this._paused;\n  }\n\n  /**\n   * @type {Function}\n   */\n  /* istanbul ignore next */\n  get onclose() {\n    return null;\n  }\n\n  /**\n   * @type {Function}\n   */\n  /* istanbul ignore next */\n  get onerror() {\n    return null;\n  }\n\n  /**\n   * @type {Function}\n   */\n  /* istanbul ignore next */\n  get onopen() {\n    return null;\n  }\n\n  /**\n   * @type {Function}\n   */\n  /* istanbul ignore next */\n  get onmessage() {\n    return null;\n  }\n\n  /**\n   * @type {String}\n   */\n  get protocol() {\n    return this._protocol;\n  }\n\n  /**\n   * @type {Number}\n   */\n  get readyState() {\n    return this._readyState;\n  }\n\n  /**\n   * @type {String}\n   */\n  get url() {\n    return this._url;\n  }\n\n  /**\n   * Set up the socket and the internal resources.\n   *\n   * @param {Duplex} socket The network socket between the server and client\n   * @param {Buffer} head The first packet of the upgraded stream\n   * @param {Object} options Options object\n   * @param {Boolean} [options.allowSynchronousEvents=false] Specifies whether\n   *     any of the `'message'`, `'ping'`, and `'pong'` events can be emitted\n   *     multiple times in the same tick\n   * @param {Function} [options.generateMask] The function used to generate the\n   *     masking key\n   * @param {Number} [options.maxPayload=0] The maximum allowed message size\n   * @param {Boolean} [options.skipUTF8Validation=false] Specifies whether or\n   *     not to skip UTF-8 validation for text and close messages\n   * @private\n   */\n  setSocket(socket, head, options) {\n    const receiver = new Receiver({\n      allowSynchronousEvents: options.allowSynchronousEvents,\n      binaryType: this.binaryType,\n      extensions: this._extensions,\n      isServer: this._isServer,\n      maxPayload: options.maxPayload,\n      skipUTF8Validation: options.skipUTF8Validation\n    });\n\n    const sender = new Sender(socket, this._extensions, options.generateMask);\n\n    this._receiver = receiver;\n    this._sender = sender;\n    this._socket = socket;\n\n    receiver[kWebSocket] = this;\n    sender[kWebSocket] = this;\n    socket[kWebSocket] = this;\n\n    receiver.on('conclude', receiverOnConclude);\n    receiver.on('drain', receiverOnDrain);\n    receiver.on('error', receiverOnError);\n    receiver.on('message', receiverOnMessage);\n    receiver.on('ping', receiverOnPing);\n    receiver.on('pong', receiverOnPong);\n\n    sender.onerror = senderOnError;\n\n    //\n    // These methods may not be available if `socket` is just a `Duplex`.\n    //\n    if (socket.setTimeout) socket.setTimeout(0);\n    if (socket.setNoDelay) socket.setNoDelay();\n\n    if (head.length > 0) socket.unshift(head);\n\n    socket.on('close', socketOnClose);\n    socket.on('data', socketOnData);\n    socket.on('end', socketOnEnd);\n    socket.on('error', socketOnError);\n\n    this._readyState = WebSocket.OPEN;\n    this.emit('open');\n  }\n\n  /**\n   * Emit the `'close'` event.\n   *\n   * @private\n   */\n  emitClose() {\n    if (!this._socket) {\n      this._readyState = WebSocket.CLOSED;\n      this.emit('close', this._closeCode, this._closeMessage);\n      return;\n    }\n\n    if (this._extensions[PerMessageDeflate.extensionName]) {\n      this._extensions[PerMessageDeflate.extensionName].cleanup();\n    }\n\n    this._receiver.removeAllListeners();\n    this._readyState = WebSocket.CLOSED;\n    this.emit('close', this._closeCode, this._closeMessage);\n  }\n\n  /**\n   * Start a closing handshake.\n   *\n   *          +----------+   +-----------+   +----------+\n   *     - - -|ws.close()|-->|close frame|-->|ws.close()|- - -\n   *    |     +----------+   +-----------+   +----------+     |\n   *          +----------+   +-----------+         |\n   * CLOSING  |ws.close()|<--|close frame|<--+-----+       CLOSING\n   *          +----------+   +-----------+   |\n   *    |           |                        |   +---+        |\n   *                +------------------------+-->|fin| - - - -\n   *    |         +---+                      |   +---+\n   *     - - - - -|fin|<---------------------+\n   *              +---+\n   *\n   * @param {Number} [code] Status code explaining why the connection is closing\n   * @param {(String|Buffer)} [data] The reason why the connection is\n   *     closing\n   * @public\n   */\n  close(code, data) {\n    if (this.readyState === WebSocket.CLOSED) return;\n    if (this.readyState === WebSocket.CONNECTING) {\n      const msg = 'WebSocket was closed before the connection was established';\n      abortHandshake(this, this._req, msg);\n      return;\n    }\n\n    if (this.readyState === WebSocket.CLOSING) {\n      if (\n        this._closeFrameSent &&\n        (this._closeFrameReceived || this._receiver._writableState.errorEmitted)\n      ) {\n        this._socket.end();\n      }\n\n      return;\n    }\n\n    this._readyState = WebSocket.CLOSING;\n    this._sender.close(code, data, !this._isServer, (err) => {\n      //\n      // This error is handled by the `'error'` listener on the socket. We only\n      // want to know if the close frame has been sent here.\n      //\n      if (err) return;\n\n      this._closeFrameSent = true;\n\n      if (\n        this._closeFrameReceived ||\n        this._receiver._writableState.errorEmitted\n      ) {\n        this._socket.end();\n      }\n    });\n\n    setCloseTimer(this);\n  }\n\n  /**\n   * Pause the socket.\n   *\n   * @public\n   */\n  pause() {\n    if (\n      this.readyState === WebSocket.CONNECTING ||\n      this.readyState === WebSocket.CLOSED\n    ) {\n      return;\n    }\n\n    this._paused = true;\n    this._socket.pause();\n  }\n\n  /**\n   * Send a ping.\n   *\n   * @param {*} [data] The data to send\n   * @param {Boolean} [mask] Indicates whether or not to mask `data`\n   * @param {Function} [cb] Callback which is executed when the ping is sent\n   * @public\n   */\n  ping(data, mask, cb) {\n    if (this.readyState === WebSocket.CONNECTING) {\n      throw new Error('WebSocket is not open: readyState 0 (CONNECTING)');\n    }\n\n    if (typeof data === 'function') {\n      cb = data;\n      data = mask = undefined;\n    } else if (typeof mask === 'function') {\n      cb = mask;\n      mask = undefined;\n    }\n\n    if (typeof data === 'number') data = data.toString();\n\n    if (this.readyState !== WebSocket.OPEN) {\n      sendAfterClose(this, data, cb);\n      return;\n    }\n\n    if (mask === undefined) mask = !this._isServer;\n    this._sender.ping(data || EMPTY_BUFFER, mask, cb);\n  }\n\n  /**\n   * Send a pong.\n   *\n   * @param {*} [data] The data to send\n   * @param {Boolean} [mask] Indicates whether or not to mask `data`\n   * @param {Function} [cb] Callback which is executed when the pong is sent\n   * @public\n   */\n  pong(data, mask, cb) {\n    if (this.readyState === WebSocket.CONNECTING) {\n      throw new Error('WebSocket is not open: readyState 0 (CONNECTING)');\n    }\n\n    if (typeof data === 'function') {\n      cb = data;\n      data = mask = undefined;\n    } else if (typeof mask === 'function') {\n      cb = mask;\n      mask = undefined;\n    }\n\n    if (typeof data === 'number') data = data.toString();\n\n    if (this.readyState !== WebSocket.OPEN) {\n      sendAfterClose(this, data, cb);\n      return;\n    }\n\n    if (mask === undefined) mask = !this._isServer;\n    this._sender.pong(data || EMPTY_BUFFER, mask, cb);\n  }\n\n  /**\n   * Resume the socket.\n   *\n   * @public\n   */\n  resume() {\n    if (\n      this.readyState === WebSocket.CONNECTING ||\n      this.readyState === WebSocket.CLOSED\n    ) {\n      return;\n    }\n\n    this._paused = false;\n    if (!this._receiver._writableState.needDrain) this._socket.resume();\n  }\n\n  /**\n   * Send a data message.\n   *\n   * @param {*} data The message to send\n   * @param {Object} [options] Options object\n   * @param {Boolean} [options.binary] Specifies whether `data` is binary or\n   *     text\n   * @param {Boolean} [options.compress] Specifies whether or not to compress\n   *     `data`\n   * @param {Boolean} [options.fin=true] Specifies whether the fragment is the\n   *     last one\n   * @param {Boolean} [options.mask] Specifies whether or not to mask `data`\n   * @param {Function} [cb] Callback which is executed when data is written out\n   * @public\n   */\n  send(data, options, cb) {\n    if (this.readyState === WebSocket.CONNECTING) {\n      throw new Error('WebSocket is not open: readyState 0 (CONNECTING)');\n    }\n\n    if (typeof options === 'function') {\n      cb = options;\n      options = {};\n    }\n\n    if (typeof data === 'number') data = data.toString();\n\n    if (this.readyState !== WebSocket.OPEN) {\n      sendAfterClose(this, data, cb);\n      return;\n    }\n\n    const opts = {\n      binary: typeof data !== 'string',\n      mask: !this._isServer,\n      compress: true,\n      fin: true,\n      ...options\n    };\n\n    if (!this._extensions[PerMessageDeflate.extensionName]) {\n      opts.compress = false;\n    }\n\n    this._sender.send(data || EMPTY_BUFFER, opts, cb);\n  }\n\n  /**\n   * Forcibly close the connection.\n   *\n   * @public\n   */\n  terminate() {\n    if (this.readyState === WebSocket.CLOSED) return;\n    if (this.readyState === WebSocket.CONNECTING) {\n      const msg = 'WebSocket was closed before the connection was established';\n      abortHandshake(this, this._req, msg);\n      return;\n    }\n\n    if (this._socket) {\n      this._readyState = WebSocket.CLOSING;\n      this._socket.destroy();\n    }\n  }\n}\n\n/**\n * @constant {Number} CONNECTING\n * @memberof WebSocket\n */\nObject.defineProperty(WebSocket, 'CONNECTING', {\n  enumerable: true,\n  value: readyStates.indexOf('CONNECTING')\n});\n\n/**\n * @constant {Number} CONNECTING\n * @memberof WebSocket.prototype\n */\nObject.defineProperty(WebSocket.prototype, 'CONNECTING', {\n  enumerable: true,\n  value: readyStates.indexOf('CONNECTING')\n});\n\n/**\n * @constant {Number} OPEN\n * @memberof WebSocket\n */\nObject.defineProperty(WebSocket, 'OPEN', {\n  enumerable: true,\n  value: readyStates.indexOf('OPEN')\n});\n\n/**\n * @constant {Number} OPEN\n * @memberof WebSocket.prototype\n */\nObject.defineProperty(WebSocket.prototype, 'OPEN', {\n  enumerable: true,\n  value: readyStates.indexOf('OPEN')\n});\n\n/**\n * @constant {Number} CLOSING\n * @memberof WebSocket\n */\nObject.defineProperty(WebSocket, 'CLOSING', {\n  enumerable: true,\n  value: readyStates.indexOf('CLOSING')\n});\n\n/**\n * @constant {Number} CLOSING\n * @memberof WebSocket.prototype\n */\nObject.defineProperty(WebSocket.prototype, 'CLOSING', {\n  enumerable: true,\n  value: readyStates.indexOf('CLOSING')\n});\n\n/**\n * @constant {Number} CLOSED\n * @memberof WebSocket\n */\nObject.defineProperty(WebSocket, 'CLOSED', {\n  enumerable: true,\n  value: readyStates.indexOf('CLOSED')\n});\n\n/**\n * @constant {Number} CLOSED\n * @memberof WebSocket.prototype\n */\nObject.defineProperty(WebSocket.prototype, 'CLOSED', {\n  enumerable: true,\n  value: readyStates.indexOf('CLOSED')\n});\n\n[\n  'binaryType',\n  'bufferedAmount',\n  'extensions',\n  'isPaused',\n  'protocol',\n  'readyState',\n  'url'\n].forEach((property) => {\n  Object.defineProperty(WebSocket.prototype, property, { enumerable: true });\n});\n\n//\n// Add the `onopen`, `onerror`, `onclose`, and `onmessage` attributes.\n// See https://html.spec.whatwg.org/multipage/comms.html#the-websocket-interface\n//\n['open', 'error', 'close', 'message'].forEach((method) => {\n  Object.defineProperty(WebSocket.prototype, `on${method}`, {\n    enumerable: true,\n    get() {\n      for (const listener of this.listeners(method)) {\n        if (listener[kForOnEventAttribute]) return listener[kListener];\n      }\n\n      return null;\n    },\n    set(handler) {\n      for (const listener of this.listeners(method)) {\n        if (listener[kForOnEventAttribute]) {\n          this.removeListener(method, listener);\n          break;\n        }\n      }\n\n      if (typeof handler !== 'function') return;\n\n      this.addEventListener(method, handler, {\n        [kForOnEventAttribute]: true\n      });\n    }\n  });\n});\n\nWebSocket.prototype.addEventListener = addEventListener;\nWebSocket.prototype.removeEventListener = removeEventListener;\n\nmodule.exports = WebSocket;\n\n/**\n * Initialize a WebSocket client.\n *\n * @param {WebSocket} websocket The client to initialize\n * @param {(String|URL)} address The URL to which to connect\n * @param {Array} protocols The subprotocols\n * @param {Object} [options] Connection options\n * @param {Boolean} [options.allowSynchronousEvents=true] Specifies whether any\n *     of the `'message'`, `'ping'`, and `'pong'` events can be emitted multiple\n *     times in the same tick\n * @param {Boolean} [options.autoPong=true] Specifies whether or not to\n *     automatically send a pong in response to a ping\n * @param {Function} [options.finishRequest] A function which can be used to\n *     customize the headers of each http request before it is sent\n * @param {Boolean} [options.followRedirects=false] Whether or not to follow\n *     redirects\n * @param {Function} [options.generateMask] The function used to generate the\n *     masking key\n * @param {Number} [options.handshakeTimeout] Timeout in milliseconds for the\n *     handshake request\n * @param {Number} [options.maxPayload=104857600] The maximum allowed message\n *     size\n * @param {Number} [options.maxRedirects=10] The maximum number of redirects\n *     allowed\n * @param {String} [options.origin] Value of the `Origin` or\n *     `Sec-WebSocket-Origin` header\n * @param {(Boolean|Object)} [options.perMessageDeflate=true] Enable/disable\n *     permessage-deflate\n * @param {Number} [options.protocolVersion=13] Value of the\n *     `Sec-WebSocket-Version` header\n * @param {Boolean} [options.skipUTF8Validation=false] Specifies whether or\n *     not to skip UTF-8 validation for text and close messages\n * @private\n */\nfunction initAsClient(websocket, address, protocols, options) {\n  const opts = {\n    allowSynchronousEvents: true,\n    autoPong: true,\n    protocolVersion: protocolVersions[1],\n    maxPayload: 100 * 1024 * 1024,\n    skipUTF8Validation: false,\n    perMessageDeflate: true,\n    followRedirects: false,\n    maxRedirects: 10,\n    ...options,\n    socketPath: undefined,\n    hostname: undefined,\n    protocol: undefined,\n    timeout: undefined,\n    method: 'GET',\n    host: undefined,\n    path: undefined,\n    port: undefined\n  };\n\n  websocket._autoPong = opts.autoPong;\n\n  if (!protocolVersions.includes(opts.protocolVersion)) {\n    throw new RangeError(\n      `Unsupported protocol version: ${opts.protocolVersion} ` +\n        `(supported versions: ${protocolVersions.join(', ')})`\n    );\n  }\n\n  let parsedUrl;\n\n  if (address instanceof URL) {\n    parsedUrl = address;\n  } else {\n    try {\n      parsedUrl = new URL(address);\n    } catch (e) {\n      throw new SyntaxError(`Invalid URL: ${address}`);\n    }\n  }\n\n  if (parsedUrl.protocol === 'http:') {\n    parsedUrl.protocol = 'ws:';\n  } else if (parsedUrl.protocol === 'https:') {\n    parsedUrl.protocol = 'wss:';\n  }\n\n  websocket._url = parsedUrl.href;\n\n  const isSecure = parsedUrl.protocol === 'wss:';\n  const isIpcUrl = parsedUrl.protocol === 'ws+unix:';\n  let invalidUrlMessage;\n\n  if (parsedUrl.protocol !== 'ws:' && !isSecure && !isIpcUrl) {\n    invalidUrlMessage =\n      'The URL\\'s protocol must be one of \"ws:\", \"wss:\", ' +\n      '\"http:\", \"https\", or \"ws+unix:\"';\n  } else if (isIpcUrl && !parsedUrl.pathname) {\n    invalidUrlMessage = \"The URL's pathname is empty\";\n  } else if (parsedUrl.hash) {\n    invalidUrlMessage = 'The URL contains a fragment identifier';\n  }\n\n  if (invalidUrlMessage) {\n    const err = new SyntaxError(invalidUrlMessage);\n\n    if (websocket._redirects === 0) {\n      throw err;\n    } else {\n      emitErrorAndClose(websocket, err);\n      return;\n    }\n  }\n\n  const defaultPort = isSecure ? 443 : 80;\n  const key = randomBytes(16).toString('base64');\n  const request = isSecure ? https.request : http.request;\n  const protocolSet = new Set();\n  let perMessageDeflate;\n\n  opts.createConnection =\n    opts.createConnection || (isSecure ? tlsConnect : netConnect);\n  opts.defaultPort = opts.defaultPort || defaultPort;\n  opts.port = parsedUrl.port || defaultPort;\n  opts.host = parsedUrl.hostname.startsWith('[')\n    ? parsedUrl.hostname.slice(1, -1)\n    : parsedUrl.hostname;\n  opts.headers = {\n    ...opts.headers,\n    'Sec-WebSocket-Version': opts.protocolVersion,\n    'Sec-WebSocket-Key': key,\n    Connection: 'Upgrade',\n    Upgrade: 'websocket'\n  };\n  opts.path = parsedUrl.pathname + parsedUrl.search;\n  opts.timeout = opts.handshakeTimeout;\n\n  if (opts.perMessageDeflate) {\n    perMessageDeflate = new PerMessageDeflate(\n      opts.perMessageDeflate !== true ? opts.perMessageDeflate : {},\n      false,\n      opts.maxPayload\n    );\n    opts.headers['Sec-WebSocket-Extensions'] = format({\n      [PerMessageDeflate.extensionName]: perMessageDeflate.offer()\n    });\n  }\n  if (protocols.length) {\n    for (const protocol of protocols) {\n      if (\n        typeof protocol !== 'string' ||\n        !subprotocolRegex.test(protocol) ||\n        protocolSet.has(protocol)\n      ) {\n        throw new SyntaxError(\n          'An invalid or duplicated subprotocol was specified'\n        );\n      }\n\n      protocolSet.add(protocol);\n    }\n\n    opts.headers['Sec-WebSocket-Protocol'] = protocols.join(',');\n  }\n  if (opts.origin) {\n    if (opts.protocolVersion < 13) {\n      opts.headers['Sec-WebSocket-Origin'] = opts.origin;\n    } else {\n      opts.headers.Origin = opts.origin;\n    }\n  }\n  if (parsedUrl.username || parsedUrl.password) {\n    opts.auth = `${parsedUrl.username}:${parsedUrl.password}`;\n  }\n\n  if (isIpcUrl) {\n    const parts = opts.path.split(':');\n\n    opts.socketPath = parts[0];\n    opts.path = parts[1];\n  }\n\n  let req;\n\n  if (opts.followRedirects) {\n    if (websocket._redirects === 0) {\n      websocket._originalIpc = isIpcUrl;\n      websocket._originalSecure = isSecure;\n      websocket._originalHostOrSocketPath = isIpcUrl\n        ? opts.socketPath\n        : parsedUrl.host;\n\n      const headers = options && options.headers;\n\n      //\n      // Shallow copy the user provided options so that headers can be changed\n      // without mutating the original object.\n      //\n      options = { ...options, headers: {} };\n\n      if (headers) {\n        for (const [key, value] of Object.entries(headers)) {\n          options.headers[key.toLowerCase()] = value;\n        }\n      }\n    } else if (websocket.listenerCount('redirect') === 0) {\n      const isSameHost = isIpcUrl\n        ? websocket._originalIpc\n          ? opts.socketPath === websocket._originalHostOrSocketPath\n          : false\n        : websocket._originalIpc\n          ? false\n          : parsedUrl.host === websocket._originalHostOrSocketPath;\n\n      if (!isSameHost || (websocket._originalSecure && !isSecure)) {\n        //\n        // Match curl 7.77.0 behavior and drop the following headers. These\n        // headers are also dropped when following a redirect to a subdomain.\n        //\n        delete opts.headers.authorization;\n        delete opts.headers.cookie;\n\n        if (!isSameHost) delete opts.headers.host;\n\n        opts.auth = undefined;\n      }\n    }\n\n    //\n    // Match curl 7.77.0 behavior and make the first `Authorization` header win.\n    // If the `Authorization` header is set, then there is nothing to do as it\n    // will take precedence.\n    //\n    if (opts.auth && !options.headers.authorization) {\n      options.headers.authorization =\n        'Basic ' + Buffer.from(opts.auth).toString('base64');\n    }\n\n    req = websocket._req = request(opts);\n\n    if (websocket._redirects) {\n      //\n      // Unlike what is done for the `'upgrade'` event, no early exit is\n      // triggered here if the user calls `websocket.close()` or\n      // `websocket.terminate()` from a listener of the `'redirect'` event. This\n      // is because the user can also call `request.destroy()` with an error\n      // before calling `websocket.close()` or `websocket.terminate()` and this\n      // would result in an error being emitted on the `request` object with no\n      // `'error'` event listeners attached.\n      //\n      websocket.emit('redirect', websocket.url, req);\n    }\n  } else {\n    req = websocket._req = request(opts);\n  }\n\n  if (opts.timeout) {\n    req.on('timeout', () => {\n      abortHandshake(websocket, req, 'Opening handshake has timed out');\n    });\n  }\n\n  req.on('error', (err) => {\n    if (req === null || req[kAborted]) return;\n\n    req = websocket._req = null;\n    emitErrorAndClose(websocket, err);\n  });\n\n  req.on('response', (res) => {\n    const location = res.headers.location;\n    const statusCode = res.statusCode;\n\n    if (\n      location &&\n      opts.followRedirects &&\n      statusCode >= 300 &&\n      statusCode < 400\n    ) {\n      if (++websocket._redirects > opts.maxRedirects) {\n        abortHandshake(websocket, req, 'Maximum redirects exceeded');\n        return;\n      }\n\n      req.abort();\n\n      let addr;\n\n      try {\n        addr = new URL(location, address);\n      } catch (e) {\n        const err = new SyntaxError(`Invalid URL: ${location}`);\n        emitErrorAndClose(websocket, err);\n        return;\n      }\n\n      initAsClient(websocket, addr, protocols, options);\n    } else if (!websocket.emit('unexpected-response', req, res)) {\n      abortHandshake(\n        websocket,\n        req,\n        `Unexpected server response: ${res.statusCode}`\n      );\n    }\n  });\n\n  req.on('upgrade', (res, socket, head) => {\n    websocket.emit('upgrade', res);\n\n    //\n    // The user may have closed the connection from a listener of the\n    // `'upgrade'` event.\n    //\n    if (websocket.readyState !== WebSocket.CONNECTING) return;\n\n    req = websocket._req = null;\n\n    const upgrade = res.headers.upgrade;\n\n    if (upgrade === undefined || upgrade.toLowerCase() !== 'websocket') {\n      abortHandshake(websocket, socket, 'Invalid Upgrade header');\n      return;\n    }\n\n    const digest = createHash('sha1')\n      .update(key + GUID)\n      .digest('base64');\n\n    if (res.headers['sec-websocket-accept'] !== digest) {\n      abortHandshake(websocket, socket, 'Invalid Sec-WebSocket-Accept header');\n      return;\n    }\n\n    const serverProt = res.headers['sec-websocket-protocol'];\n    let protError;\n\n    if (serverProt !== undefined) {\n      if (!protocolSet.size) {\n        protError = 'Server sent a subprotocol but none was requested';\n      } else if (!protocolSet.has(serverProt)) {\n        protError = 'Server sent an invalid subprotocol';\n      }\n    } else if (protocolSet.size) {\n      protError = 'Server sent no subprotocol';\n    }\n\n    if (protError) {\n      abortHandshake(websocket, socket, protError);\n      return;\n    }\n\n    if (serverProt) websocket._protocol = serverProt;\n\n    const secWebSocketExtensions = res.headers['sec-websocket-extensions'];\n\n    if (secWebSocketExtensions !== undefined) {\n      if (!perMessageDeflate) {\n        const message =\n          'Server sent a Sec-WebSocket-Extensions header but no extension ' +\n          'was requested';\n        abortHandshake(websocket, socket, message);\n        return;\n      }\n\n      let extensions;\n\n      try {\n        extensions = parse(secWebSocketExtensions);\n      } catch (err) {\n        const message = 'Invalid Sec-WebSocket-Extensions header';\n        abortHandshake(websocket, socket, message);\n        return;\n      }\n\n      const extensionNames = Object.keys(extensions);\n\n      if (\n        extensionNames.length !== 1 ||\n        extensionNames[0] !== PerMessageDeflate.extensionName\n      ) {\n        const message = 'Server indicated an extension that was not requested';\n        abortHandshake(websocket, socket, message);\n        return;\n      }\n\n      try {\n        perMessageDeflate.accept(extensions[PerMessageDeflate.extensionName]);\n      } catch (err) {\n        const message = 'Invalid Sec-WebSocket-Extensions header';\n        abortHandshake(websocket, socket, message);\n        return;\n      }\n\n      websocket._extensions[PerMessageDeflate.extensionName] =\n        perMessageDeflate;\n    }\n\n    websocket.setSocket(socket, head, {\n      allowSynchronousEvents: opts.allowSynchronousEvents,\n      generateMask: opts.generateMask,\n      maxPayload: opts.maxPayload,\n      skipUTF8Validation: opts.skipUTF8Validation\n    });\n  });\n\n  if (opts.finishRequest) {\n    opts.finishRequest(req, websocket);\n  } else {\n    req.end();\n  }\n}\n\n/**\n * Emit the `'error'` and `'close'` events.\n *\n * @param {WebSocket} websocket The WebSocket instance\n * @param {Error} The error to emit\n * @private\n */\nfunction emitErrorAndClose(websocket, err) {\n  websocket._readyState = WebSocket.CLOSING;\n  //\n  // The following assignment is practically useless and is done only for\n  // consistency.\n  //\n  websocket._errorEmitted = true;\n  websocket.emit('error', err);\n  websocket.emitClose();\n}\n\n/**\n * Create a `net.Socket` and initiate a connection.\n *\n * @param {Object} options Connection options\n * @return {net.Socket} The newly created socket used to start the connection\n * @private\n */\nfunction netConnect(options) {\n  options.path = options.socketPath;\n  return net.connect(options);\n}\n\n/**\n * Create a `tls.TLSSocket` and initiate a connection.\n *\n * @param {Object} options Connection options\n * @return {tls.TLSSocket} The newly created socket used to start the connection\n * @private\n */\nfunction tlsConnect(options) {\n  options.path = undefined;\n\n  if (!options.servername && options.servername !== '') {\n    options.servername = net.isIP(options.host) ? '' : options.host;\n  }\n\n  return tls.connect(options);\n}\n\n/**\n * Abort the handshake and emit an error.\n *\n * @param {WebSocket} websocket The WebSocket instance\n * @param {(http.ClientRequest|net.Socket|tls.Socket)} stream The request to\n *     abort or the socket to destroy\n * @param {String} message The error message\n * @private\n */\nfunction abortHandshake(websocket, stream, message) {\n  websocket._readyState = WebSocket.CLOSING;\n\n  const err = new Error(message);\n  Error.captureStackTrace(err, abortHandshake);\n\n  if (stream.setHeader) {\n    stream[kAborted] = true;\n    stream.abort();\n\n    if (stream.socket && !stream.socket.destroyed) {\n      //\n      // On Node.js >= 14.3.0 `request.abort()` does not destroy the socket if\n      // called after the request completed. See\n      // https://github.com/websockets/ws/issues/1869.\n      //\n      stream.socket.destroy();\n    }\n\n    process.nextTick(emitErrorAndClose, websocket, err);\n  } else {\n    stream.destroy(err);\n    stream.once('error', websocket.emit.bind(websocket, 'error'));\n    stream.once('close', websocket.emitClose.bind(websocket));\n  }\n}\n\n/**\n * Handle cases where the `ping()`, `pong()`, or `send()` methods are called\n * when the `readyState` attribute is `CLOSING` or `CLOSED`.\n *\n * @param {WebSocket} websocket The WebSocket instance\n * @param {*} [data] The data to send\n * @param {Function} [cb] Callback\n * @private\n */\nfunction sendAfterClose(websocket, data, cb) {\n  if (data) {\n    const length = isBlob(data) ? data.size : toBuffer(data).length;\n\n    //\n    // The `_bufferedAmount` property is used only when the peer is a client and\n    // the opening handshake fails. Under these circumstances, in fact, the\n    // `setSocket()` method is not called, so the `_socket` and `_sender`\n    // properties are set to `null`.\n    //\n    if (websocket._socket) websocket._sender._bufferedBytes += length;\n    else websocket._bufferedAmount += length;\n  }\n\n  if (cb) {\n    const err = new Error(\n      `WebSocket is not open: readyState ${websocket.readyState} ` +\n        `(${readyStates[websocket.readyState]})`\n    );\n    process.nextTick(cb, err);\n  }\n}\n\n/**\n * The listener of the `Receiver` `'conclude'` event.\n *\n * @param {Number} code The status code\n * @param {Buffer} reason The reason for closing\n * @private\n */\nfunction receiverOnConclude(code, reason) {\n  const websocket = this[kWebSocket];\n\n  websocket._closeFrameReceived = true;\n  websocket._closeMessage = reason;\n  websocket._closeCode = code;\n\n  if (websocket._socket[kWebSocket] === undefined) return;\n\n  websocket._socket.removeListener('data', socketOnData);\n  process.nextTick(resume, websocket._socket);\n\n  if (code === 1005) websocket.close();\n  else websocket.close(code, reason);\n}\n\n/**\n * The listener of the `Receiver` `'drain'` event.\n *\n * @private\n */\nfunction receiverOnDrain() {\n  const websocket = this[kWebSocket];\n\n  if (!websocket.isPaused) websocket._socket.resume();\n}\n\n/**\n * The listener of the `Receiver` `'error'` event.\n *\n * @param {(RangeError|Error)} err The emitted error\n * @private\n */\nfunction receiverOnError(err) {\n  const websocket = this[kWebSocket];\n\n  if (websocket._socket[kWebSocket] !== undefined) {\n    websocket._socket.removeListener('data', socketOnData);\n\n    //\n    // On Node.js < 14.0.0 the `'error'` event is emitted synchronously. See\n    // https://github.com/websockets/ws/issues/1940.\n    //\n    process.nextTick(resume, websocket._socket);\n\n    websocket.close(err[kStatusCode]);\n  }\n\n  if (!websocket._errorEmitted) {\n    websocket._errorEmitted = true;\n    websocket.emit('error', err);\n  }\n}\n\n/**\n * The listener of the `Receiver` `'finish'` event.\n *\n * @private\n */\nfunction receiverOnFinish() {\n  this[kWebSocket].emitClose();\n}\n\n/**\n * The listener of the `Receiver` `'message'` event.\n *\n * @param {Buffer|ArrayBuffer|Buffer[])} data The message\n * @param {Boolean} isBinary Specifies whether the message is binary or not\n * @private\n */\nfunction receiverOnMessage(data, isBinary) {\n  this[kWebSocket].emit('message', data, isBinary);\n}\n\n/**\n * The listener of the `Receiver` `'ping'` event.\n *\n * @param {Buffer} data The data included in the ping frame\n * @private\n */\nfunction receiverOnPing(data) {\n  const websocket = this[kWebSocket];\n\n  if (websocket._autoPong) websocket.pong(data, !this._isServer, NOOP);\n  websocket.emit('ping', data);\n}\n\n/**\n * The listener of the `Receiver` `'pong'` event.\n *\n * @param {Buffer} data The data included in the pong frame\n * @private\n */\nfunction receiverOnPong(data) {\n  this[kWebSocket].emit('pong', data);\n}\n\n/**\n * Resume a readable stream\n *\n * @param {Readable} stream The readable stream\n * @private\n */\nfunction resume(stream) {\n  stream.resume();\n}\n\n/**\n * The `Sender` error event handler.\n *\n * @param {Error} The error\n * @private\n */\nfunction senderOnError(err) {\n  const websocket = this[kWebSocket];\n\n  if (websocket.readyState === WebSocket.CLOSED) return;\n  if (websocket.readyState === WebSocket.OPEN) {\n    websocket._readyState = WebSocket.CLOSING;\n    setCloseTimer(websocket);\n  }\n\n  //\n  // `socket.end()` is used instead of `socket.destroy()` to allow the other\n  // peer to finish sending queued data. There is no need to set a timer here\n  // because `CLOSING` means that it is already set or not needed.\n  //\n  this._socket.end();\n\n  if (!websocket._errorEmitted) {\n    websocket._errorEmitted = true;\n    websocket.emit('error', err);\n  }\n}\n\n/**\n * Set a timer to destroy the underlying raw socket of a WebSocket.\n *\n * @param {WebSocket} websocket The WebSocket instance\n * @private\n */\nfunction setCloseTimer(websocket) {\n  websocket._closeTimer = setTimeout(\n    websocket._socket.destroy.bind(websocket._socket),\n    closeTimeout\n  );\n}\n\n/**\n * The listener of the socket `'close'` event.\n *\n * @private\n */\nfunction socketOnClose() {\n  const websocket = this[kWebSocket];\n\n  this.removeListener('close', socketOnClose);\n  this.removeListener('data', socketOnData);\n  this.removeListener('end', socketOnEnd);\n\n  websocket._readyState = WebSocket.CLOSING;\n\n  let chunk;\n\n  //\n  // The close frame might not have been received or the `'end'` event emitted,\n  // for example, if the socket was destroyed due to an error. Ensure that the\n  // `receiver` stream is closed after writing any remaining buffered data to\n  // it. If the readable side of the socket is in flowing mode then there is no\n  // buffered data as everything has been already written and `readable.read()`\n  // will return `null`. If instead, the socket is paused, any possible buffered\n  // data will be read as a single chunk.\n  //\n  if (\n    !this._readableState.endEmitted &&\n    !websocket._closeFrameReceived &&\n    !websocket._receiver._writableState.errorEmitted &&\n    (chunk = websocket._socket.read()) !== null\n  ) {\n    websocket._receiver.write(chunk);\n  }\n\n  websocket._receiver.end();\n\n  this[kWebSocket] = undefined;\n\n  clearTimeout(websocket._closeTimer);\n\n  if (\n    websocket._receiver._writableState.finished ||\n    websocket._receiver._writableState.errorEmitted\n  ) {\n    websocket.emitClose();\n  } else {\n    websocket._receiver.on('error', receiverOnFinish);\n    websocket._receiver.on('finish', receiverOnFinish);\n  }\n}\n\n/**\n * The listener of the socket `'data'` event.\n *\n * @param {Buffer} chunk A chunk of data\n * @private\n */\nfunction socketOnData(chunk) {\n  if (!this[kWebSocket]._receiver.write(chunk)) {\n    this.pause();\n  }\n}\n\n/**\n * The listener of the socket `'end'` event.\n *\n * @private\n */\nfunction socketOnEnd() {\n  const websocket = this[kWebSocket];\n\n  websocket._readyState = WebSocket.CLOSING;\n  websocket._receiver.end();\n  this.end();\n}\n\n/**\n * The listener of the socket `'error'` event.\n *\n * @private\n */\nfunction socketOnError() {\n  const websocket = this[kWebSocket];\n\n  this.removeListener('error', socketOnError);\n  this.on('error', NOOP);\n\n  if (websocket) {\n    websocket._readyState = WebSocket.CLOSING;\n    this.destroy();\n  }\n}\n","'use strict';\n\nconst { tokenChars } = require('./validation');\n\n/**\n * Parses the `Sec-WebSocket-Protocol` header into a set of subprotocol names.\n *\n * @param {String} header The field value of the header\n * @return {Set} The subprotocol names\n * @public\n */\nfunction parse(header) {\n  const protocols = new Set();\n  let start = -1;\n  let end = -1;\n  let i = 0;\n\n  for (i; i < header.length; i++) {\n    const code = header.charCodeAt(i);\n\n    if (end === -1 && tokenChars[code] === 1) {\n      if (start === -1) start = i;\n    } else if (\n      i !== 0 &&\n      (code === 0x20 /* ' ' */ || code === 0x09) /* '\\t' */\n    ) {\n      if (end === -1 && start !== -1) end = i;\n    } else if (code === 0x2c /* ',' */) {\n      if (start === -1) {\n        throw new SyntaxError(`Unexpected character at index ${i}`);\n      }\n\n      if (end === -1) end = i;\n\n      const protocol = header.slice(start, end);\n\n      if (protocols.has(protocol)) {\n        throw new SyntaxError(`The \"${protocol}\" subprotocol is duplicated`);\n      }\n\n      protocols.add(protocol);\n      start = end = -1;\n    } else {\n      throw new SyntaxError(`Unexpected character at index ${i}`);\n    }\n  }\n\n  if (start === -1 || end !== -1) {\n    throw new SyntaxError('Unexpected end of input');\n  }\n\n  const protocol = header.slice(start, i);\n\n  if (protocols.has(protocol)) {\n    throw new SyntaxError(`The \"${protocol}\" subprotocol is duplicated`);\n  }\n\n  protocols.add(protocol);\n  return protocols;\n}\n\nmodule.exports = { parse };\n","/* eslint no-unused-vars: [\"error\", { \"varsIgnorePattern\": \"^Duplex$\", \"caughtErrors\": \"none\" }] */\n\n'use strict';\n\nconst EventEmitter = require('events');\nconst http = require('http');\nconst { Duplex } = require('stream');\nconst { createHash } = require('crypto');\n\nconst extension = require('./extension');\nconst PerMessageDeflate = require('./permessage-deflate');\nconst subprotocol = require('./subprotocol');\nconst WebSocket = require('./websocket');\nconst { GUID, kWebSocket } = require('./constants');\n\nconst keyRegex = /^[+/0-9A-Za-z]{22}==$/;\n\nconst RUNNING = 0;\nconst CLOSING = 1;\nconst CLOSED = 2;\n\n/**\n * Class representing a WebSocket server.\n *\n * @extends EventEmitter\n */\nclass WebSocketServer extends EventEmitter {\n  /**\n   * Create a `WebSocketServer` instance.\n   *\n   * @param {Object} options Configuration options\n   * @param {Boolean} [options.allowSynchronousEvents=true] Specifies whether\n   *     any of the `'message'`, `'ping'`, and `'pong'` events can be emitted\n   *     multiple times in the same tick\n   * @param {Boolean} [options.autoPong=true] Specifies whether or not to\n   *     automatically send a pong in response to a ping\n   * @param {Number} [options.backlog=511] The maximum length of the queue of\n   *     pending connections\n   * @param {Boolean} [options.clientTracking=true] Specifies whether or not to\n   *     track clients\n   * @param {Function} [options.handleProtocols] A hook to handle protocols\n   * @param {String} [options.host] The hostname where to bind the server\n   * @param {Number} [options.maxPayload=104857600] The maximum allowed message\n   *     size\n   * @param {Boolean} [options.noServer=false] Enable no server mode\n   * @param {String} [options.path] Accept only connections matching this path\n   * @param {(Boolean|Object)} [options.perMessageDeflate=false] Enable/disable\n   *     permessage-deflate\n   * @param {Number} [options.port] The port where to bind the server\n   * @param {(http.Server|https.Server)} [options.server] A pre-created HTTP/S\n   *     server to use\n   * @param {Boolean} [options.skipUTF8Validation=false] Specifies whether or\n   *     not to skip UTF-8 validation for text and close messages\n   * @param {Function} [options.verifyClient] A hook to reject connections\n   * @param {Function} [options.WebSocket=WebSocket] Specifies the `WebSocket`\n   *     class to use. It must be the `WebSocket` class or class that extends it\n   * @param {Function} [callback] A listener for the `listening` event\n   */\n  constructor(options, callback) {\n    super();\n\n    options = {\n      allowSynchronousEvents: true,\n      autoPong: true,\n      maxPayload: 100 * 1024 * 1024,\n      skipUTF8Validation: false,\n      perMessageDeflate: false,\n      handleProtocols: null,\n      clientTracking: true,\n      verifyClient: null,\n      noServer: false,\n      backlog: null, // use default (511 as implemented in net.js)\n      server: null,\n      host: null,\n      path: null,\n      port: null,\n      WebSocket,\n      ...options\n    };\n\n    if (\n      (options.port == null && !options.server && !options.noServer) ||\n      (options.port != null && (options.server || options.noServer)) ||\n      (options.server && options.noServer)\n    ) {\n      throw new TypeError(\n        'One and only one of the \"port\", \"server\", or \"noServer\" options ' +\n          'must be specified'\n      );\n    }\n\n    if (options.port != null) {\n      this._server = http.createServer((req, res) => {\n        const body = http.STATUS_CODES[426];\n\n        res.writeHead(426, {\n          'Content-Length': body.length,\n          'Content-Type': 'text/plain'\n        });\n        res.end(body);\n      });\n      this._server.listen(\n        options.port,\n        options.host,\n        options.backlog,\n        callback\n      );\n    } else if (options.server) {\n      this._server = options.server;\n    }\n\n    if (this._server) {\n      const emitConnection = this.emit.bind(this, 'connection');\n\n      this._removeListeners = addListeners(this._server, {\n        listening: this.emit.bind(this, 'listening'),\n        error: this.emit.bind(this, 'error'),\n        upgrade: (req, socket, head) => {\n          this.handleUpgrade(req, socket, head, emitConnection);\n        }\n      });\n    }\n\n    if (options.perMessageDeflate === true) options.perMessageDeflate = {};\n    if (options.clientTracking) {\n      this.clients = new Set();\n      this._shouldEmitClose = false;\n    }\n\n    this.options = options;\n    this._state = RUNNING;\n  }\n\n  /**\n   * Returns the bound address, the address family name, and port of the server\n   * as reported by the operating system if listening on an IP socket.\n   * If the server is listening on a pipe or UNIX domain socket, the name is\n   * returned as a string.\n   *\n   * @return {(Object|String|null)} The address of the server\n   * @public\n   */\n  address() {\n    if (this.options.noServer) {\n      throw new Error('The server is operating in \"noServer\" mode');\n    }\n\n    if (!this._server) return null;\n    return this._server.address();\n  }\n\n  /**\n   * Stop the server from accepting new connections and emit the `'close'` event\n   * when all existing connections are closed.\n   *\n   * @param {Function} [cb] A one-time listener for the `'close'` event\n   * @public\n   */\n  close(cb) {\n    if (this._state === CLOSED) {\n      if (cb) {\n        this.once('close', () => {\n          cb(new Error('The server is not running'));\n        });\n      }\n\n      process.nextTick(emitClose, this);\n      return;\n    }\n\n    if (cb) this.once('close', cb);\n\n    if (this._state === CLOSING) return;\n    this._state = CLOSING;\n\n    if (this.options.noServer || this.options.server) {\n      if (this._server) {\n        this._removeListeners();\n        this._removeListeners = this._server = null;\n      }\n\n      if (this.clients) {\n        if (!this.clients.size) {\n          process.nextTick(emitClose, this);\n        } else {\n          this._shouldEmitClose = true;\n        }\n      } else {\n        process.nextTick(emitClose, this);\n      }\n    } else {\n      const server = this._server;\n\n      this._removeListeners();\n      this._removeListeners = this._server = null;\n\n      //\n      // The HTTP/S server was created internally. Close it, and rely on its\n      // `'close'` event.\n      //\n      server.close(() => {\n        emitClose(this);\n      });\n    }\n  }\n\n  /**\n   * See if a given request should be handled by this server instance.\n   *\n   * @param {http.IncomingMessage} req Request object to inspect\n   * @return {Boolean} `true` if the request is valid, else `false`\n   * @public\n   */\n  shouldHandle(req) {\n    if (this.options.path) {\n      const index = req.url.indexOf('?');\n      const pathname = index !== -1 ? req.url.slice(0, index) : req.url;\n\n      if (pathname !== this.options.path) return false;\n    }\n\n    return true;\n  }\n\n  /**\n   * Handle a HTTP Upgrade request.\n   *\n   * @param {http.IncomingMessage} req The request object\n   * @param {Duplex} socket The network socket between the server and client\n   * @param {Buffer} head The first packet of the upgraded stream\n   * @param {Function} cb Callback\n   * @public\n   */\n  handleUpgrade(req, socket, head, cb) {\n    socket.on('error', socketOnError);\n\n    const key = req.headers['sec-websocket-key'];\n    const upgrade = req.headers.upgrade;\n    const version = +req.headers['sec-websocket-version'];\n\n    if (req.method !== 'GET') {\n      const message = 'Invalid HTTP method';\n      abortHandshakeOrEmitwsClientError(this, req, socket, 405, message);\n      return;\n    }\n\n    if (upgrade === undefined || upgrade.toLowerCase() !== 'websocket') {\n      const message = 'Invalid Upgrade header';\n      abortHandshakeOrEmitwsClientError(this, req, socket, 400, message);\n      return;\n    }\n\n    if (key === undefined || !keyRegex.test(key)) {\n      const message = 'Missing or invalid Sec-WebSocket-Key header';\n      abortHandshakeOrEmitwsClientError(this, req, socket, 400, message);\n      return;\n    }\n\n    if (version !== 8 && version !== 13) {\n      const message = 'Missing or invalid Sec-WebSocket-Version header';\n      abortHandshakeOrEmitwsClientError(this, req, socket, 400, message);\n      return;\n    }\n\n    if (!this.shouldHandle(req)) {\n      abortHandshake(socket, 400);\n      return;\n    }\n\n    const secWebSocketProtocol = req.headers['sec-websocket-protocol'];\n    let protocols = new Set();\n\n    if (secWebSocketProtocol !== undefined) {\n      try {\n        protocols = subprotocol.parse(secWebSocketProtocol);\n      } catch (err) {\n        const message = 'Invalid Sec-WebSocket-Protocol header';\n        abortHandshakeOrEmitwsClientError(this, req, socket, 400, message);\n        return;\n      }\n    }\n\n    const secWebSocketExtensions = req.headers['sec-websocket-extensions'];\n    const extensions = {};\n\n    if (\n      this.options.perMessageDeflate &&\n      secWebSocketExtensions !== undefined\n    ) {\n      const perMessageDeflate = new PerMessageDeflate(\n        this.options.perMessageDeflate,\n        true,\n        this.options.maxPayload\n      );\n\n      try {\n        const offers = extension.parse(secWebSocketExtensions);\n\n        if (offers[PerMessageDeflate.extensionName]) {\n          perMessageDeflate.accept(offers[PerMessageDeflate.extensionName]);\n          extensions[PerMessageDeflate.extensionName] = perMessageDeflate;\n        }\n      } catch (err) {\n        const message =\n          'Invalid or unacceptable Sec-WebSocket-Extensions header';\n        abortHandshakeOrEmitwsClientError(this, req, socket, 400, message);\n        return;\n      }\n    }\n\n    //\n    // Optionally call external client verification handler.\n    //\n    if (this.options.verifyClient) {\n      const info = {\n        origin:\n          req.headers[`${version === 8 ? 'sec-websocket-origin' : 'origin'}`],\n        secure: !!(req.socket.authorized || req.socket.encrypted),\n        req\n      };\n\n      if (this.options.verifyClient.length === 2) {\n        this.options.verifyClient(info, (verified, code, message, headers) => {\n          if (!verified) {\n            return abortHandshake(socket, code || 401, message, headers);\n          }\n\n          this.completeUpgrade(\n            extensions,\n            key,\n            protocols,\n            req,\n            socket,\n            head,\n            cb\n          );\n        });\n        return;\n      }\n\n      if (!this.options.verifyClient(info)) return abortHandshake(socket, 401);\n    }\n\n    this.completeUpgrade(extensions, key, protocols, req, socket, head, cb);\n  }\n\n  /**\n   * Upgrade the connection to WebSocket.\n   *\n   * @param {Object} extensions The accepted extensions\n   * @param {String} key The value of the `Sec-WebSocket-Key` header\n   * @param {Set} protocols The subprotocols\n   * @param {http.IncomingMessage} req The request object\n   * @param {Duplex} socket The network socket between the server and client\n   * @param {Buffer} head The first packet of the upgraded stream\n   * @param {Function} cb Callback\n   * @throws {Error} If called more than once with the same socket\n   * @private\n   */\n  completeUpgrade(extensions, key, protocols, req, socket, head, cb) {\n    //\n    // Destroy the socket if the client has already sent a FIN packet.\n    //\n    if (!socket.readable || !socket.writable) return socket.destroy();\n\n    if (socket[kWebSocket]) {\n      throw new Error(\n        'server.handleUpgrade() was called more than once with the same ' +\n          'socket, possibly due to a misconfiguration'\n      );\n    }\n\n    if (this._state > RUNNING) return abortHandshake(socket, 503);\n\n    const digest = createHash('sha1')\n      .update(key + GUID)\n      .digest('base64');\n\n    const headers = [\n      'HTTP/1.1 101 Switching Protocols',\n      'Upgrade: websocket',\n      'Connection: Upgrade',\n      `Sec-WebSocket-Accept: ${digest}`\n    ];\n\n    const ws = new this.options.WebSocket(null, undefined, this.options);\n\n    if (protocols.size) {\n      //\n      // Optionally call external protocol selection handler.\n      //\n      const protocol = this.options.handleProtocols\n        ? this.options.handleProtocols(protocols, req)\n        : protocols.values().next().value;\n\n      if (protocol) {\n        headers.push(`Sec-WebSocket-Protocol: ${protocol}`);\n        ws._protocol = protocol;\n      }\n    }\n\n    if (extensions[PerMessageDeflate.extensionName]) {\n      const params = extensions[PerMessageDeflate.extensionName].params;\n      const value = extension.format({\n        [PerMessageDeflate.extensionName]: [params]\n      });\n      headers.push(`Sec-WebSocket-Extensions: ${value}`);\n      ws._extensions = extensions;\n    }\n\n    //\n    // Allow external modification/inspection of handshake headers.\n    //\n    this.emit('headers', headers, req);\n\n    socket.write(headers.concat('\\r\\n').join('\\r\\n'));\n    socket.removeListener('error', socketOnError);\n\n    ws.setSocket(socket, head, {\n      allowSynchronousEvents: this.options.allowSynchronousEvents,\n      maxPayload: this.options.maxPayload,\n      skipUTF8Validation: this.options.skipUTF8Validation\n    });\n\n    if (this.clients) {\n      this.clients.add(ws);\n      ws.on('close', () => {\n        this.clients.delete(ws);\n\n        if (this._shouldEmitClose && !this.clients.size) {\n          process.nextTick(emitClose, this);\n        }\n      });\n    }\n\n    cb(ws, req);\n  }\n}\n\nmodule.exports = WebSocketServer;\n\n/**\n * Add event listeners on an `EventEmitter` using a map of <event, listener>\n * pairs.\n *\n * @param {EventEmitter} server The event emitter\n * @param {Object.<String, Function>} map The listeners to add\n * @return {Function} A function that will remove the added listeners when\n *     called\n * @private\n */\nfunction addListeners(server, map) {\n  for (const event of Object.keys(map)) server.on(event, map[event]);\n\n  return function removeListeners() {\n    for (const event of Object.keys(map)) {\n      server.removeListener(event, map[event]);\n    }\n  };\n}\n\n/**\n * Emit a `'close'` event on an `EventEmitter`.\n *\n * @param {EventEmitter} server The event emitter\n * @private\n */\nfunction emitClose(server) {\n  server._state = CLOSED;\n  server.emit('close');\n}\n\n/**\n * Handle socket errors.\n *\n * @private\n */\nfunction socketOnError() {\n  this.destroy();\n}\n\n/**\n * Close the connection when preconditions are not fulfilled.\n *\n * @param {Duplex} socket The socket of the upgrade request\n * @param {Number} code The HTTP response status code\n * @param {String} [message] The HTTP response body\n * @param {Object} [headers] Additional HTTP response headers\n * @private\n */\nfunction abortHandshake(socket, code, message, headers) {\n  //\n  // The socket is writable unless the user destroyed or ended it before calling\n  // `server.handleUpgrade()` or in the `verifyClient` function, which is a user\n  // error. Handling this does not make much sense as the worst that can happen\n  // is that some of the data written by the user might be discarded due to the\n  // call to `socket.end()` below, which triggers an `'error'` event that in\n  // turn causes the socket to be destroyed.\n  //\n  message = message || http.STATUS_CODES[code];\n  headers = {\n    Connection: 'close',\n    'Content-Type': 'text/html',\n    'Content-Length': Buffer.byteLength(message),\n    ...headers\n  };\n\n  socket.once('finish', socket.destroy);\n\n  socket.end(\n    `HTTP/1.1 ${code} ${http.STATUS_CODES[code]}\\r\\n` +\n      Object.keys(headers)\n        .map((h) => `${h}: ${headers[h]}`)\n        .join('\\r\\n') +\n      '\\r\\n\\r\\n' +\n      message\n  );\n}\n\n/**\n * Emit a `'wsClientError'` event on a `WebSocketServer` if there is at least\n * one listener for it, otherwise call `abortHandshake()`.\n *\n * @param {WebSocketServer} server The WebSocket server\n * @param {http.IncomingMessage} req The request object\n * @param {Duplex} socket The socket of the upgrade request\n * @param {Number} code The HTTP response status code\n * @param {String} message The HTTP response body\n * @private\n */\nfunction abortHandshakeOrEmitwsClientError(server, req, socket, code, message) {\n  if (server.listenerCount('wsClientError')) {\n    const err = new Error(message);\n    Error.captureStackTrace(err, abortHandshakeOrEmitwsClientError);\n\n    server.emit('wsClientError', err, socket, req);\n  } else {\n    abortHandshake(socket, code, message);\n  }\n}\n","function limiter (count) {\n  var outstanding = 0\n  var jobs = []\n\n  function remove () {\n    outstanding--\n\n    if (outstanding < count) {\n      dequeue()\n    }\n  }\n\n  function dequeue () {\n    var job = jobs.shift()\n    semaphore.queue = jobs.length\n\n    if (job) {\n      run(job.fn).then(job.resolve).catch(job.reject)\n    }\n  }\n\n  function queue (fn) {\n    return new Promise(function (resolve, reject) {\n      jobs.push({fn: fn, resolve: resolve, reject: reject})\n      semaphore.queue = jobs.length\n    })\n  }\n\n  function run (fn) {\n    outstanding++\n    try {\n      return Promise.resolve(fn()).then(function (result) {\n        remove()\n        return result\n      }, function (error) {\n        remove()\n        throw error\n      })\n    } catch (err) {\n      remove()\n      return Promise.reject(err)\n    }\n  }\n\n  var semaphore = function (fn) {\n    if (outstanding >= count) {\n      return queue(fn)\n    } else {\n      return run(fn)\n    }\n  }\n\n  return semaphore\n}\n\nfunction map (items, mapper) {\n  var failed = false\n\n  var limit = this\n\n  return Promise.all(items.map(function () {\n    var args = arguments\n    return limit(function () {\n      if (!failed) {\n        return mapper.apply(undefined, args).catch(function (e) {\n          failed = true\n          throw e\n        })\n      }\n    })\n  }))\n}\n\nfunction addExtras (fn) {\n  fn.queue = 0\n  fn.map = map\n  return fn\n}\n\nmodule.exports = function (count) {\n  if (count) {\n    return addExtras(limiter(count))\n  } else {\n    return addExtras(function (fn) {\n      return fn()\n    })\n  }\n}\n","/**\n * Copyright © Adobe, Inc. All rights reserved.\n */\n\nexport * from \"./library\"\n","/** Error thrown by the client. */\nexport class LibsqlError extends Error {\n    /** Machine-readable error code. */\n    code;\n    /** Raw numeric error code */\n    rawCode;\n    constructor(message, code, rawCode, cause) {\n        if (code !== undefined) {\n            message = `${code}: ${message}`;\n        }\n        super(message, { cause });\n        this.code = code;\n        this.rawCode = rawCode;\n        this.name = \"LibsqlError\";\n    }\n}\n","// URI parser based on RFC 3986\n// We can't use the standard `URL` object, because we want to support relative `file:` URLs like\n// `file:relative/path/database.db`, which are not correct according to RFC 8089, which standardizes the\n// `file` scheme.\nimport { LibsqlError } from \"./api.js\";\nexport function parseUri(text) {\n    const match = URI_RE.exec(text);\n    if (match === null) {\n        throw new LibsqlError(`The URL '${text}' is not in a valid format`, \"URL_INVALID\");\n    }\n    const groups = match.groups;\n    const scheme = groups[\"scheme\"];\n    const authority = groups[\"authority\"] !== undefined\n        ? parseAuthority(groups[\"authority\"])\n        : undefined;\n    const path = percentDecode(groups[\"path\"]);\n    const query = groups[\"query\"] !== undefined ? parseQuery(groups[\"query\"]) : undefined;\n    const fragment = groups[\"fragment\"] !== undefined\n        ? percentDecode(groups[\"fragment\"])\n        : undefined;\n    return { scheme, authority, path, query, fragment };\n}\nconst URI_RE = (() => {\n    const SCHEME = \"(?<scheme>[A-Za-z][A-Za-z.+-]*)\";\n    const AUTHORITY = \"(?<authority>[^/?#]*)\";\n    const PATH = \"(?<path>[^?#]*)\";\n    const QUERY = \"(?<query>[^#]*)\";\n    const FRAGMENT = \"(?<fragment>.*)\";\n    return new RegExp(`^${SCHEME}:(//${AUTHORITY})?${PATH}(\\\\?${QUERY})?(#${FRAGMENT})?$`, \"su\");\n})();\nfunction parseAuthority(text) {\n    const match = AUTHORITY_RE.exec(text);\n    if (match === null) {\n        throw new LibsqlError(\"The authority part of the URL is not in a valid format\", \"URL_INVALID\");\n    }\n    const groups = match.groups;\n    const host = percentDecode(groups[\"host_br\"] ?? groups[\"host\"]);\n    const port = groups[\"port\"] ? parseInt(groups[\"port\"], 10) : undefined;\n    const userinfo = groups[\"username\"] !== undefined\n        ? {\n            username: percentDecode(groups[\"username\"]),\n            password: groups[\"password\"] !== undefined\n                ? percentDecode(groups[\"password\"])\n                : undefined,\n        }\n        : undefined;\n    return { host, port, userinfo };\n}\nconst AUTHORITY_RE = (() => {\n    return new RegExp(`^((?<username>[^:]*)(:(?<password>.*))?@)?((?<host>[^:\\\\[\\\\]]*)|(\\\\[(?<host_br>[^\\\\[\\\\]]*)\\\\]))(:(?<port>[0-9]*))?$`, \"su\");\n})();\n// Query string is parsed as application/x-www-form-urlencoded according to the Web URL standard:\n// https://url.spec.whatwg.org/#urlencoded-parsing\nfunction parseQuery(text) {\n    const sequences = text.split(\"&\");\n    const pairs = [];\n    for (const sequence of sequences) {\n        if (sequence === \"\") {\n            continue;\n        }\n        let key;\n        let value;\n        const splitIdx = sequence.indexOf(\"=\");\n        if (splitIdx < 0) {\n            key = sequence;\n            value = \"\";\n        }\n        else {\n            key = sequence.substring(0, splitIdx);\n            value = sequence.substring(splitIdx + 1);\n        }\n        pairs.push({\n            key: percentDecode(key.replaceAll(\"+\", \" \")),\n            value: percentDecode(value.replaceAll(\"+\", \" \")),\n        });\n    }\n    return { pairs };\n}\nfunction percentDecode(text) {\n    try {\n        return decodeURIComponent(text);\n    }\n    catch (e) {\n        if (e instanceof URIError) {\n            throw new LibsqlError(`URL component has invalid percent encoding: ${e}`, \"URL_INVALID\", undefined, e);\n        }\n        throw e;\n    }\n}\nexport function encodeBaseUrl(scheme, authority, path) {\n    if (authority === undefined) {\n        throw new LibsqlError(`URL with scheme ${JSON.stringify(scheme + \":\")} requires authority (the \"//\" part)`, \"URL_INVALID\");\n    }\n    const schemeText = `${scheme}:`;\n    const hostText = encodeHost(authority.host);\n    const portText = encodePort(authority.port);\n    const userinfoText = encodeUserinfo(authority.userinfo);\n    const authorityText = `//${userinfoText}${hostText}${portText}`;\n    let pathText = path.split(\"/\").map(encodeURIComponent).join(\"/\");\n    if (pathText !== \"\" && !pathText.startsWith(\"/\")) {\n        pathText = \"/\" + pathText;\n    }\n    return new URL(`${schemeText}${authorityText}${pathText}`);\n}\nfunction encodeHost(host) {\n    return host.includes(\":\") ? `[${encodeURI(host)}]` : encodeURI(host);\n}\nfunction encodePort(port) {\n    return port !== undefined ? `:${port}` : \"\";\n}\nfunction encodeUserinfo(userinfo) {\n    if (userinfo === undefined) {\n        return \"\";\n    }\n    const usernameText = encodeURIComponent(userinfo.username);\n    const passwordText = userinfo.password !== undefined\n        ? `:${encodeURIComponent(userinfo.password)}`\n        : \"\";\n    return `${usernameText}${passwordText}@`;\n}\n","/**\n *  base64.ts\n *\n *  Licensed under the BSD 3-Clause License.\n *    http://opensource.org/licenses/BSD-3-Clause\n *\n *  References:\n *    http://en.wikipedia.org/wiki/Base64\n *\n * @author Dan Kogai (https://github.com/dankogai)\n */\nconst version = '3.7.7';\n/**\n * @deprecated use lowercase `version`.\n */\nconst VERSION = version;\nconst _hasBuffer = typeof Buffer === 'function';\nconst _TD = typeof TextDecoder === 'function' ? new TextDecoder() : undefined;\nconst _TE = typeof TextEncoder === 'function' ? new TextEncoder() : undefined;\nconst b64ch = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\nconst b64chs = Array.prototype.slice.call(b64ch);\nconst b64tab = ((a) => {\n    let tab = {};\n    a.forEach((c, i) => tab[c] = i);\n    return tab;\n})(b64chs);\nconst b64re = /^(?:[A-Za-z\\d+\\/]{4})*?(?:[A-Za-z\\d+\\/]{2}(?:==)?|[A-Za-z\\d+\\/]{3}=?)?$/;\nconst _fromCC = String.fromCharCode.bind(String);\nconst _U8Afrom = typeof Uint8Array.from === 'function'\n    ? Uint8Array.from.bind(Uint8Array)\n    : (it) => new Uint8Array(Array.prototype.slice.call(it, 0));\nconst _mkUriSafe = (src) => src\n    .replace(/=/g, '').replace(/[+\\/]/g, (m0) => m0 == '+' ? '-' : '_');\nconst _tidyB64 = (s) => s.replace(/[^A-Za-z0-9\\+\\/]/g, '');\n/**\n * polyfill version of `btoa`\n */\nconst btoaPolyfill = (bin) => {\n    // console.log('polyfilled');\n    let u32, c0, c1, c2, asc = '';\n    const pad = bin.length % 3;\n    for (let i = 0; i < bin.length;) {\n        if ((c0 = bin.charCodeAt(i++)) > 255 ||\n            (c1 = bin.charCodeAt(i++)) > 255 ||\n            (c2 = bin.charCodeAt(i++)) > 255)\n            throw new TypeError('invalid character found');\n        u32 = (c0 << 16) | (c1 << 8) | c2;\n        asc += b64chs[u32 >> 18 & 63]\n            + b64chs[u32 >> 12 & 63]\n            + b64chs[u32 >> 6 & 63]\n            + b64chs[u32 & 63];\n    }\n    return pad ? asc.slice(0, pad - 3) + \"===\".substring(pad) : asc;\n};\n/**\n * does what `window.btoa` of web browsers do.\n * @param {String} bin binary string\n * @returns {string} Base64-encoded string\n */\nconst _btoa = typeof btoa === 'function' ? (bin) => btoa(bin)\n    : _hasBuffer ? (bin) => Buffer.from(bin, 'binary').toString('base64')\n        : btoaPolyfill;\nconst _fromUint8Array = _hasBuffer\n    ? (u8a) => Buffer.from(u8a).toString('base64')\n    : (u8a) => {\n        // cf. https://stackoverflow.com/questions/12710001/how-to-convert-uint8-array-to-base64-encoded-string/12713326#12713326\n        const maxargs = 0x1000;\n        let strs = [];\n        for (let i = 0, l = u8a.length; i < l; i += maxargs) {\n            strs.push(_fromCC.apply(null, u8a.subarray(i, i + maxargs)));\n        }\n        return _btoa(strs.join(''));\n    };\n/**\n * converts a Uint8Array to a Base64 string.\n * @param {boolean} [urlsafe] URL-and-filename-safe a la RFC4648 §5\n * @returns {string} Base64 string\n */\nconst fromUint8Array = (u8a, urlsafe = false) => urlsafe ? _mkUriSafe(_fromUint8Array(u8a)) : _fromUint8Array(u8a);\n// This trick is found broken https://github.com/dankogai/js-base64/issues/130\n// const utob = (src: string) => unescape(encodeURIComponent(src));\n// reverting good old fationed regexp\nconst cb_utob = (c) => {\n    if (c.length < 2) {\n        var cc = c.charCodeAt(0);\n        return cc < 0x80 ? c\n            : cc < 0x800 ? (_fromCC(0xc0 | (cc >>> 6))\n                + _fromCC(0x80 | (cc & 0x3f)))\n                : (_fromCC(0xe0 | ((cc >>> 12) & 0x0f))\n                    + _fromCC(0x80 | ((cc >>> 6) & 0x3f))\n                    + _fromCC(0x80 | (cc & 0x3f)));\n    }\n    else {\n        var cc = 0x10000\n            + (c.charCodeAt(0) - 0xD800) * 0x400\n            + (c.charCodeAt(1) - 0xDC00);\n        return (_fromCC(0xf0 | ((cc >>> 18) & 0x07))\n            + _fromCC(0x80 | ((cc >>> 12) & 0x3f))\n            + _fromCC(0x80 | ((cc >>> 6) & 0x3f))\n            + _fromCC(0x80 | (cc & 0x3f)));\n    }\n};\nconst re_utob = /[\\uD800-\\uDBFF][\\uDC00-\\uDFFFF]|[^\\x00-\\x7F]/g;\n/**\n * @deprecated should have been internal use only.\n * @param {string} src UTF-8 string\n * @returns {string} UTF-16 string\n */\nconst utob = (u) => u.replace(re_utob, cb_utob);\n//\nconst _encode = _hasBuffer\n    ? (s) => Buffer.from(s, 'utf8').toString('base64')\n    : _TE\n        ? (s) => _fromUint8Array(_TE.encode(s))\n        : (s) => _btoa(utob(s));\n/**\n * converts a UTF-8-encoded string to a Base64 string.\n * @param {boolean} [urlsafe] if `true` make the result URL-safe\n * @returns {string} Base64 string\n */\nconst encode = (src, urlsafe = false) => urlsafe\n    ? _mkUriSafe(_encode(src))\n    : _encode(src);\n/**\n * converts a UTF-8-encoded string to URL-safe Base64 RFC4648 §5.\n * @returns {string} Base64 string\n */\nconst encodeURI = (src) => encode(src, true);\n// This trick is found broken https://github.com/dankogai/js-base64/issues/130\n// const btou = (src: string) => decodeURIComponent(escape(src));\n// reverting good old fationed regexp\nconst re_btou = /[\\xC0-\\xDF][\\x80-\\xBF]|[\\xE0-\\xEF][\\x80-\\xBF]{2}|[\\xF0-\\xF7][\\x80-\\xBF]{3}/g;\nconst cb_btou = (cccc) => {\n    switch (cccc.length) {\n        case 4:\n            var cp = ((0x07 & cccc.charCodeAt(0)) << 18)\n                | ((0x3f & cccc.charCodeAt(1)) << 12)\n                | ((0x3f & cccc.charCodeAt(2)) << 6)\n                | (0x3f & cccc.charCodeAt(3)), offset = cp - 0x10000;\n            return (_fromCC((offset >>> 10) + 0xD800)\n                + _fromCC((offset & 0x3FF) + 0xDC00));\n        case 3:\n            return _fromCC(((0x0f & cccc.charCodeAt(0)) << 12)\n                | ((0x3f & cccc.charCodeAt(1)) << 6)\n                | (0x3f & cccc.charCodeAt(2)));\n        default:\n            return _fromCC(((0x1f & cccc.charCodeAt(0)) << 6)\n                | (0x3f & cccc.charCodeAt(1)));\n    }\n};\n/**\n * @deprecated should have been internal use only.\n * @param {string} src UTF-16 string\n * @returns {string} UTF-8 string\n */\nconst btou = (b) => b.replace(re_btou, cb_btou);\n/**\n * polyfill version of `atob`\n */\nconst atobPolyfill = (asc) => {\n    // console.log('polyfilled');\n    asc = asc.replace(/\\s+/g, '');\n    if (!b64re.test(asc))\n        throw new TypeError('malformed base64.');\n    asc += '=='.slice(2 - (asc.length & 3));\n    let u24, bin = '', r1, r2;\n    for (let i = 0; i < asc.length;) {\n        u24 = b64tab[asc.charAt(i++)] << 18\n            | b64tab[asc.charAt(i++)] << 12\n            | (r1 = b64tab[asc.charAt(i++)]) << 6\n            | (r2 = b64tab[asc.charAt(i++)]);\n        bin += r1 === 64 ? _fromCC(u24 >> 16 & 255)\n            : r2 === 64 ? _fromCC(u24 >> 16 & 255, u24 >> 8 & 255)\n                : _fromCC(u24 >> 16 & 255, u24 >> 8 & 255, u24 & 255);\n    }\n    return bin;\n};\n/**\n * does what `window.atob` of web browsers do.\n * @param {String} asc Base64-encoded string\n * @returns {string} binary string\n */\nconst _atob = typeof atob === 'function' ? (asc) => atob(_tidyB64(asc))\n    : _hasBuffer ? (asc) => Buffer.from(asc, 'base64').toString('binary')\n        : atobPolyfill;\n//\nconst _toUint8Array = _hasBuffer\n    ? (a) => _U8Afrom(Buffer.from(a, 'base64'))\n    : (a) => _U8Afrom(_atob(a).split('').map(c => c.charCodeAt(0)));\n/**\n * converts a Base64 string to a Uint8Array.\n */\nconst toUint8Array = (a) => _toUint8Array(_unURI(a));\n//\nconst _decode = _hasBuffer\n    ? (a) => Buffer.from(a, 'base64').toString('utf8')\n    : _TD\n        ? (a) => _TD.decode(_toUint8Array(a))\n        : (a) => btou(_atob(a));\nconst _unURI = (a) => _tidyB64(a.replace(/[-_]/g, (m0) => m0 == '-' ? '+' : '/'));\n/**\n * converts a Base64 string to a UTF-8 string.\n * @param {String} src Base64 string.  Both normal and URL-safe are supported\n * @returns {string} UTF-8 string\n */\nconst decode = (src) => _decode(_unURI(src));\n/**\n * check if a value is a valid Base64 string\n * @param {String} src a value to check\n  */\nconst isValid = (src) => {\n    if (typeof src !== 'string')\n        return false;\n    const s = src.replace(/\\s+/g, '').replace(/={0,2}$/, '');\n    return !/[^\\s0-9a-zA-Z\\+/]/.test(s) || !/[^\\s0-9a-zA-Z\\-_]/.test(s);\n};\n//\nconst _noEnum = (v) => {\n    return {\n        value: v, enumerable: false, writable: true, configurable: true\n    };\n};\n/**\n * extend String.prototype with relevant methods\n */\nconst extendString = function () {\n    const _add = (name, body) => Object.defineProperty(String.prototype, name, _noEnum(body));\n    _add('fromBase64', function () { return decode(this); });\n    _add('toBase64', function (urlsafe) { return encode(this, urlsafe); });\n    _add('toBase64URI', function () { return encode(this, true); });\n    _add('toBase64URL', function () { return encode(this, true); });\n    _add('toUint8Array', function () { return toUint8Array(this); });\n};\n/**\n * extend Uint8Array.prototype with relevant methods\n */\nconst extendUint8Array = function () {\n    const _add = (name, body) => Object.defineProperty(Uint8Array.prototype, name, _noEnum(body));\n    _add('toBase64', function (urlsafe) { return fromUint8Array(this, urlsafe); });\n    _add('toBase64URI', function () { return fromUint8Array(this, true); });\n    _add('toBase64URL', function () { return fromUint8Array(this, true); });\n};\n/**\n * extend Builtin prototypes with relevant methods\n */\nconst extendBuiltins = () => {\n    extendString();\n    extendUint8Array();\n};\nconst gBase64 = {\n    version: version,\n    VERSION: VERSION,\n    atob: _atob,\n    atobPolyfill: atobPolyfill,\n    btoa: _btoa,\n    btoaPolyfill: btoaPolyfill,\n    fromBase64: decode,\n    toBase64: encode,\n    encode: encode,\n    encodeURI: encodeURI,\n    encodeURL: encodeURI,\n    utob: utob,\n    btou: btou,\n    decode: decode,\n    isValid: isValid,\n    fromUint8Array: fromUint8Array,\n    toUint8Array: toUint8Array,\n    extendString: extendString,\n    extendUint8Array: extendUint8Array,\n    extendBuiltins: extendBuiltins\n};\n// makecjs:CUT //\nexport { version };\nexport { VERSION };\nexport { _atob as atob };\nexport { atobPolyfill };\nexport { _btoa as btoa };\nexport { btoaPolyfill };\nexport { decode as fromBase64 };\nexport { encode as toBase64 };\nexport { utob };\nexport { encode };\nexport { encodeURI };\nexport { encodeURI as encodeURL };\nexport { btou };\nexport { decode };\nexport { isValid };\nexport { fromUint8Array };\nexport { toUint8Array };\nexport { extendString };\nexport { extendUint8Array };\nexport { extendBuiltins };\n// and finally,\nexport { gBase64 as Base64 };\n","import { Base64 } from \"js-base64\";\nexport const supportedUrlLink = \"https://github.com/libsql/libsql-client-ts#supported-urls\";\nexport function transactionModeToBegin(mode) {\n    if (mode === \"write\") {\n        return \"BEGIN IMMEDIATE\";\n    }\n    else if (mode === \"read\") {\n        return \"BEGIN TRANSACTION READONLY\";\n    }\n    else if (mode === \"deferred\") {\n        return \"BEGIN DEFERRED\";\n    }\n    else {\n        throw RangeError('Unknown transaction mode, supported values are \"write\", \"read\" and \"deferred\"');\n    }\n}\nexport class ResultSetImpl {\n    columns;\n    columnTypes;\n    rows;\n    rowsAffected;\n    lastInsertRowid;\n    constructor(columns, columnTypes, rows, rowsAffected, lastInsertRowid) {\n        this.columns = columns;\n        this.columnTypes = columnTypes;\n        this.rows = rows;\n        this.rowsAffected = rowsAffected;\n        this.lastInsertRowid = lastInsertRowid;\n    }\n    toJSON() {\n        return {\n            columns: this.columns,\n            columnTypes: this.columnTypes,\n            rows: this.rows.map(rowToJson),\n            rowsAffected: this.rowsAffected,\n            lastInsertRowid: this.lastInsertRowid !== undefined\n                ? \"\" + this.lastInsertRowid\n                : null,\n        };\n    }\n}\nfunction rowToJson(row) {\n    return Array.prototype.map.call(row, valueToJson);\n}\nfunction valueToJson(value) {\n    if (typeof value === \"bigint\") {\n        return \"\" + value;\n    }\n    else if (value instanceof ArrayBuffer) {\n        return Base64.fromUint8Array(new Uint8Array(value));\n    }\n    else {\n        return value;\n    }\n}\n","import { LibsqlError } from \"./api.js\";\nimport { parseUri } from \"./uri.js\";\nimport { supportedUrlLink } from \"./util.js\";\nconst inMemoryMode = \":memory:\";\nexport function isInMemoryConfig(config) {\n    return (config.scheme === \"file\" &&\n        (config.path === \":memory:\" || config.path.startsWith(\":memory:?\")));\n}\nexport function expandConfig(config, preferHttp) {\n    if (typeof config !== \"object\") {\n        // produce a reasonable error message in the common case where users type\n        // `createClient(\"libsql://...\")` instead of `createClient({url: \"libsql://...\"})`\n        throw new TypeError(`Expected client configuration as object, got ${typeof config}`);\n    }\n    let { url, authToken, tls, intMode, concurrency } = config;\n    // fill simple defaults right here\n    concurrency = Math.max(0, concurrency || 20);\n    intMode ??= \"number\";\n    let connectionQueryParams = []; // recognized query parameters which we sanitize through white list of valid key-value pairs\n    // convert plain :memory: url to URI format to make logic more uniform\n    if (url === inMemoryMode) {\n        url = \"file::memory:\";\n    }\n    // parse url parameters first and override config with update values\n    const uri = parseUri(url);\n    const originalUriScheme = uri.scheme.toLowerCase();\n    const isInMemoryMode = originalUriScheme === \"file\" &&\n        uri.path === inMemoryMode &&\n        uri.authority === undefined;\n    let queryParamsDef;\n    if (isInMemoryMode) {\n        queryParamsDef = {\n            cache: {\n                values: [\"shared\", \"private\"],\n                update: (key, value) => connectionQueryParams.push(`${key}=${value}`),\n            },\n        };\n    }\n    else {\n        queryParamsDef = {\n            tls: {\n                values: [\"0\", \"1\"],\n                update: (_, value) => (tls = value === \"1\"),\n            },\n            authToken: {\n                update: (_, value) => (authToken = value),\n            },\n        };\n    }\n    for (const { key, value } of uri.query?.pairs ?? []) {\n        if (!Object.hasOwn(queryParamsDef, key)) {\n            throw new LibsqlError(`Unsupported URL query parameter ${JSON.stringify(key)}`, \"URL_PARAM_NOT_SUPPORTED\");\n        }\n        const queryParamDef = queryParamsDef[key];\n        if (queryParamDef.values !== undefined &&\n            !queryParamDef.values.includes(value)) {\n            throw new LibsqlError(`Unknown value for the \"${key}\" query argument: ${JSON.stringify(value)}. Supported values are: [${queryParamDef.values.map((x) => '\"' + x + '\"').join(\", \")}]`, \"URL_INVALID\");\n        }\n        if (queryParamDef.update !== undefined) {\n            queryParamDef?.update(key, value);\n        }\n    }\n    // fill complex defaults & validate config\n    const connectionQueryParamsString = connectionQueryParams.length === 0\n        ? \"\"\n        : `?${connectionQueryParams.join(\"&\")}`;\n    const path = uri.path + connectionQueryParamsString;\n    let scheme;\n    if (originalUriScheme === \"libsql\") {\n        if (tls === false) {\n            if (uri.authority?.port === undefined) {\n                throw new LibsqlError('A \"libsql:\" URL with ?tls=0 must specify an explicit port', \"URL_INVALID\");\n            }\n            scheme = preferHttp ? \"http\" : \"ws\";\n        }\n        else {\n            scheme = preferHttp ? \"https\" : \"wss\";\n        }\n    }\n    else {\n        scheme = originalUriScheme;\n    }\n    if (scheme === \"http\" || scheme === \"ws\") {\n        tls ??= false;\n    }\n    else {\n        tls ??= true;\n    }\n    if (scheme !== \"http\" &&\n        scheme !== \"ws\" &&\n        scheme !== \"https\" &&\n        scheme !== \"wss\" &&\n        scheme !== \"file\") {\n        throw new LibsqlError('The client supports only \"libsql:\", \"wss:\", \"ws:\", \"https:\", \"http:\" and \"file:\" URLs, ' +\n            `got ${JSON.stringify(uri.scheme + \":\")}. ` +\n            `For more information, please read ${supportedUrlLink}`, \"URL_SCHEME_NOT_SUPPORTED\");\n    }\n    if (intMode !== \"number\" && intMode !== \"bigint\" && intMode !== \"string\") {\n        throw new TypeError(`Invalid value for intMode, expected \"number\", \"bigint\" or \"string\", got ${JSON.stringify(intMode)}`);\n    }\n    if (uri.fragment !== undefined) {\n        throw new LibsqlError(`URL fragments are not supported: ${JSON.stringify(\"#\" + uri.fragment)}`, \"URL_INVALID\");\n    }\n    if (isInMemoryMode) {\n        return {\n            scheme: \"file\",\n            tls: false,\n            path,\n            intMode,\n            concurrency,\n            syncUrl: config.syncUrl,\n            syncInterval: config.syncInterval,\n            fetch: config.fetch,\n            authToken: undefined,\n            encryptionKey: undefined,\n            authority: undefined,\n        };\n    }\n    return {\n        scheme,\n        tls,\n        authority: uri.authority,\n        path,\n        authToken,\n        intMode,\n        concurrency,\n        encryptionKey: config.encryptionKey,\n        syncUrl: config.syncUrl,\n        syncInterval: config.syncInterval,\n        fetch: config.fetch,\n    };\n}\n","import Database from \"libsql\";\nimport { Buffer } from \"node:buffer\";\nimport { LibsqlError } from \"@libsql/core/api\";\nimport { expandConfig, isInMemoryConfig } from \"@libsql/core/config\";\nimport { supportedUrlLink, transactionModeToBegin, ResultSetImpl, } from \"@libsql/core/util\";\nexport * from \"@libsql/core/api\";\nexport function createClient(config) {\n    return _createClient(expandConfig(config, true));\n}\n/** @private */\nexport function _createClient(config) {\n    if (config.scheme !== \"file\") {\n        throw new LibsqlError(`URL scheme ${JSON.stringify(config.scheme + \":\")} is not supported by the local sqlite3 client. ` +\n            `For more information, please read ${supportedUrlLink}`, \"URL_SCHEME_NOT_SUPPORTED\");\n    }\n    const authority = config.authority;\n    if (authority !== undefined) {\n        const host = authority.host.toLowerCase();\n        if (host !== \"\" && host !== \"localhost\") {\n            throw new LibsqlError(`Invalid host in file URL: ${JSON.stringify(authority.host)}. ` +\n                'A \"file:\" URL with an absolute path should start with one slash (\"file:/absolute/path.db\") ' +\n                'or with three slashes (\"file:///absolute/path.db\"). ' +\n                `For more information, please read ${supportedUrlLink}`, \"URL_INVALID\");\n        }\n        if (authority.port !== undefined) {\n            throw new LibsqlError(\"File URL cannot have a port\", \"URL_INVALID\");\n        }\n        if (authority.userinfo !== undefined) {\n            throw new LibsqlError(\"File URL cannot have username and password\", \"URL_INVALID\");\n        }\n    }\n    let isInMemory = isInMemoryConfig(config);\n    if (isInMemory && config.syncUrl) {\n        throw new LibsqlError(`Embedded replica must use file for local db but URI with in-memory mode were provided instead: ${config.path}`, \"URL_INVALID\");\n    }\n    let path = config.path;\n    if (isInMemory) {\n        // note: we should prepend file scheme in order for SQLite3 to recognize :memory: connection query parameters\n        path = `${config.scheme}:${config.path}`;\n    }\n    const options = {\n        authToken: config.authToken,\n        encryptionKey: config.encryptionKey,\n        syncUrl: config.syncUrl,\n        syncPeriod: config.syncInterval,\n    };\n    const db = new Database(path, options);\n    executeStmt(db, \"SELECT 1 AS checkThatTheDatabaseCanBeOpened\", config.intMode);\n    return new Sqlite3Client(path, options, db, config.intMode);\n}\nexport class Sqlite3Client {\n    #path;\n    #options;\n    #db;\n    #intMode;\n    closed;\n    protocol;\n    /** @private */\n    constructor(path, options, db, intMode) {\n        this.#path = path;\n        this.#options = options;\n        this.#db = db;\n        this.#intMode = intMode;\n        this.closed = false;\n        this.protocol = \"file\";\n    }\n    async execute(stmtOrSql, args) {\n        let stmt;\n        if (typeof stmtOrSql === \"string\") {\n            stmt = {\n                sql: stmtOrSql,\n                args: args || [],\n            };\n        }\n        else {\n            stmt = stmtOrSql;\n        }\n        this.#checkNotClosed();\n        return executeStmt(this.#getDb(), stmt, this.#intMode);\n    }\n    async batch(stmts, mode = \"deferred\") {\n        this.#checkNotClosed();\n        const db = this.#getDb();\n        try {\n            executeStmt(db, transactionModeToBegin(mode), this.#intMode);\n            const resultSets = stmts.map((stmt) => {\n                if (!db.inTransaction) {\n                    throw new LibsqlError(\"The transaction has been rolled back\", \"TRANSACTION_CLOSED\");\n                }\n                return executeStmt(db, stmt, this.#intMode);\n            });\n            executeStmt(db, \"COMMIT\", this.#intMode);\n            return resultSets;\n        }\n        finally {\n            if (db.inTransaction) {\n                executeStmt(db, \"ROLLBACK\", this.#intMode);\n            }\n        }\n    }\n    async migrate(stmts) {\n        this.#checkNotClosed();\n        const db = this.#getDb();\n        try {\n            executeStmt(db, \"PRAGMA foreign_keys=off\", this.#intMode);\n            executeStmt(db, transactionModeToBegin(\"deferred\"), this.#intMode);\n            const resultSets = stmts.map((stmt) => {\n                if (!db.inTransaction) {\n                    throw new LibsqlError(\"The transaction has been rolled back\", \"TRANSACTION_CLOSED\");\n                }\n                return executeStmt(db, stmt, this.#intMode);\n            });\n            executeStmt(db, \"COMMIT\", this.#intMode);\n            return resultSets;\n        }\n        finally {\n            if (db.inTransaction) {\n                executeStmt(db, \"ROLLBACK\", this.#intMode);\n            }\n            executeStmt(db, \"PRAGMA foreign_keys=on\", this.#intMode);\n        }\n    }\n    async transaction(mode = \"write\") {\n        const db = this.#getDb();\n        executeStmt(db, transactionModeToBegin(mode), this.#intMode);\n        this.#db = null; // A new connection will be lazily created on next use\n        return new Sqlite3Transaction(db, this.#intMode);\n    }\n    async executeMultiple(sql) {\n        this.#checkNotClosed();\n        const db = this.#getDb();\n        try {\n            return executeMultiple(db, sql);\n        }\n        finally {\n            if (db.inTransaction) {\n                executeStmt(db, \"ROLLBACK\", this.#intMode);\n            }\n        }\n    }\n    async sync() {\n        this.#checkNotClosed();\n        const rep = await this.#getDb().sync();\n        return {\n            frames_synced: rep.frames_synced,\n            frame_no: rep.frame_no,\n        };\n    }\n    close() {\n        this.closed = true;\n        if (this.#db !== null) {\n            this.#db.close();\n        }\n    }\n    #checkNotClosed() {\n        if (this.closed) {\n            throw new LibsqlError(\"The client is closed\", \"CLIENT_CLOSED\");\n        }\n    }\n    // Lazily creates the database connection and returns it\n    #getDb() {\n        if (this.#db === null) {\n            this.#db = new Database(this.#path, this.#options);\n        }\n        return this.#db;\n    }\n}\nexport class Sqlite3Transaction {\n    #database;\n    #intMode;\n    /** @private */\n    constructor(database, intMode) {\n        this.#database = database;\n        this.#intMode = intMode;\n    }\n    async execute(stmtOrSql, args) {\n        let stmt;\n        if (typeof stmtOrSql === \"string\") {\n            stmt = {\n                sql: stmtOrSql,\n                args: args || [],\n            };\n        }\n        else {\n            stmt = stmtOrSql;\n        }\n        this.#checkNotClosed();\n        return executeStmt(this.#database, stmt, this.#intMode);\n    }\n    async batch(stmts) {\n        return stmts.map((stmt) => {\n            this.#checkNotClosed();\n            return executeStmt(this.#database, stmt, this.#intMode);\n        });\n    }\n    async executeMultiple(sql) {\n        this.#checkNotClosed();\n        return executeMultiple(this.#database, sql);\n    }\n    async rollback() {\n        if (!this.#database.open) {\n            return;\n        }\n        this.#checkNotClosed();\n        executeStmt(this.#database, \"ROLLBACK\", this.#intMode);\n    }\n    async commit() {\n        this.#checkNotClosed();\n        executeStmt(this.#database, \"COMMIT\", this.#intMode);\n    }\n    close() {\n        if (this.#database.inTransaction) {\n            executeStmt(this.#database, \"ROLLBACK\", this.#intMode);\n        }\n    }\n    get closed() {\n        return !this.#database.inTransaction;\n    }\n    #checkNotClosed() {\n        if (this.closed) {\n            throw new LibsqlError(\"The transaction is closed\", \"TRANSACTION_CLOSED\");\n        }\n    }\n}\nfunction executeStmt(db, stmt, intMode) {\n    let sql;\n    let args;\n    if (typeof stmt === \"string\") {\n        sql = stmt;\n        args = [];\n    }\n    else {\n        sql = stmt.sql;\n        if (Array.isArray(stmt.args)) {\n            args = stmt.args.map((value) => valueToSql(value, intMode));\n        }\n        else {\n            args = {};\n            for (const name in stmt.args) {\n                const argName = name[0] === \"@\" || name[0] === \"$\" || name[0] === \":\"\n                    ? name.substring(1)\n                    : name;\n                args[argName] = valueToSql(stmt.args[name], intMode);\n            }\n        }\n    }\n    try {\n        const sqlStmt = db.prepare(sql);\n        sqlStmt.safeIntegers(true);\n        let returnsData = true;\n        try {\n            sqlStmt.raw(true);\n        }\n        catch {\n            // raw() throws an exception if the statement does not return data\n            returnsData = false;\n        }\n        if (returnsData) {\n            const columns = Array.from(sqlStmt.columns().map((col) => col.name));\n            const columnTypes = Array.from(sqlStmt.columns().map((col) => col.type ?? \"\"));\n            const rows = sqlStmt.all(args).map((sqlRow) => {\n                return rowFromSql(sqlRow, columns, intMode);\n            });\n            // TODO: can we get this info from better-sqlite3?\n            const rowsAffected = 0;\n            const lastInsertRowid = undefined;\n            return new ResultSetImpl(columns, columnTypes, rows, rowsAffected, lastInsertRowid);\n        }\n        else {\n            const info = sqlStmt.run(args);\n            const rowsAffected = info.changes;\n            const lastInsertRowid = BigInt(info.lastInsertRowid);\n            return new ResultSetImpl([], [], [], rowsAffected, lastInsertRowid);\n        }\n    }\n    catch (e) {\n        throw mapSqliteError(e);\n    }\n}\nfunction rowFromSql(sqlRow, columns, intMode) {\n    const row = {};\n    // make sure that the \"length\" property is not enumerable\n    Object.defineProperty(row, \"length\", { value: sqlRow.length });\n    for (let i = 0; i < sqlRow.length; ++i) {\n        const value = valueFromSql(sqlRow[i], intMode);\n        Object.defineProperty(row, i, { value });\n        const column = columns[i];\n        if (!Object.hasOwn(row, column)) {\n            Object.defineProperty(row, column, {\n                value,\n                enumerable: true,\n                configurable: true,\n                writable: true,\n            });\n        }\n    }\n    return row;\n}\nfunction valueFromSql(sqlValue, intMode) {\n    if (typeof sqlValue === \"bigint\") {\n        if (intMode === \"number\") {\n            if (sqlValue < minSafeBigint || sqlValue > maxSafeBigint) {\n                throw new RangeError(\"Received integer which cannot be safely represented as a JavaScript number\");\n            }\n            return Number(sqlValue);\n        }\n        else if (intMode === \"bigint\") {\n            return sqlValue;\n        }\n        else if (intMode === \"string\") {\n            return \"\" + sqlValue;\n        }\n        else {\n            throw new Error(\"Invalid value for IntMode\");\n        }\n    }\n    else if (sqlValue instanceof Buffer) {\n        return sqlValue.buffer;\n    }\n    return sqlValue;\n}\nconst minSafeBigint = -9007199254740991n;\nconst maxSafeBigint = 9007199254740991n;\nfunction valueToSql(value, intMode) {\n    if (typeof value === \"number\") {\n        if (!Number.isFinite(value)) {\n            throw new RangeError(\"Only finite numbers (not Infinity or NaN) can be passed as arguments\");\n        }\n        return value;\n    }\n    else if (typeof value === \"bigint\") {\n        if (value < minInteger || value > maxInteger) {\n            throw new RangeError(\"bigint is too large to be represented as a 64-bit integer and passed as argument\");\n        }\n        return value;\n    }\n    else if (typeof value === \"boolean\") {\n        switch (intMode) {\n            case \"bigint\":\n                return value ? 1n : 0n;\n            case \"string\":\n                return value ? \"1\" : \"0\";\n            default:\n                return value ? 1 : 0;\n        }\n    }\n    else if (value instanceof ArrayBuffer) {\n        return Buffer.from(value);\n    }\n    else if (value instanceof Date) {\n        return value.valueOf();\n    }\n    else if (value === undefined) {\n        throw new TypeError(\"undefined cannot be passed as argument to the database\");\n    }\n    else {\n        return value;\n    }\n}\nconst minInteger = -9223372036854775808n;\nconst maxInteger = 9223372036854775807n;\nfunction executeMultiple(db, sql) {\n    try {\n        db.exec(sql);\n    }\n    catch (e) {\n        throw mapSqliteError(e);\n    }\n}\nfunction mapSqliteError(e) {\n    if (e instanceof Database.SqliteError) {\n        return new LibsqlError(e.message, e.code, e.rawCode, e);\n    }\n    return e;\n}\n","import createWebSocketStream from './lib/stream.js';\nimport Receiver from './lib/receiver.js';\nimport Sender from './lib/sender.js';\nimport WebSocket from './lib/websocket.js';\nimport WebSocketServer from './lib/websocket-server.js';\n\nexport { createWebSocketStream, Receiver, Sender, WebSocket, WebSocketServer };\nexport default WebSocket;\n","/** A client for the Hrana protocol (a \"database connection pool\"). */\nexport class Client {\n    /** @private */\n    constructor() {\n        this.intMode = \"number\";\n    }\n    /** Representation of integers returned from the database. See {@link IntMode}.\n     *\n     * This value is inherited by {@link Stream} objects created with {@link openStream}, but you can\n     * override the integer mode for every stream by setting {@link Stream.intMode} on the stream.\n     */\n    intMode;\n}\n","/** Generic error produced by the Hrana client. */\nexport class ClientError extends Error {\n    /** @private */\n    constructor(message) {\n        super(message);\n        this.name = \"ClientError\";\n    }\n}\n/** Error thrown when the server violates the protocol. */\nexport class ProtoError extends ClientError {\n    /** @private */\n    constructor(message) {\n        super(message);\n        this.name = \"ProtoError\";\n    }\n}\n/** Error thrown when the server returns an error response. */\nexport class ResponseError extends ClientError {\n    code;\n    /** @internal */\n    proto;\n    /** @private */\n    constructor(message, protoError) {\n        super(message);\n        this.name = \"ResponseError\";\n        this.code = protoError.code;\n        this.proto = protoError;\n        this.stack = undefined;\n    }\n}\n/** Error thrown when the client or stream is closed. */\nexport class ClosedError extends ClientError {\n    /** @private */\n    constructor(message, cause) {\n        if (cause !== undefined) {\n            super(`${message}: ${cause}`);\n            this.cause = cause;\n        }\n        else {\n            super(message);\n        }\n        this.name = \"ClosedError\";\n    }\n}\n/** Error thrown when the environment does not seem to support WebSockets. */\nexport class WebSocketUnsupportedError extends ClientError {\n    /** @private */\n    constructor(message) {\n        super(message);\n        this.name = \"WebSocketUnsupportedError\";\n    }\n}\n/** Error thrown when we encounter a WebSocket error. */\nexport class WebSocketError extends ClientError {\n    /** @private */\n    constructor(message) {\n        super(message);\n        this.name = \"WebSocketError\";\n    }\n}\n/** Error thrown when the HTTP server returns an error response. */\nexport class HttpServerError extends ClientError {\n    status;\n    /** @private */\n    constructor(message, status) {\n        super(message);\n        this.status = status;\n        this.name = \"HttpServerError\";\n    }\n}\n/** Error thrown when a libsql URL is not valid. */\nexport class LibsqlUrlParseError extends ClientError {\n    /** @private */\n    constructor(message) {\n        super(message);\n        this.name = \"LibsqlUrlParseError\";\n    }\n}\n/** Error thrown when the protocol version is too low to support a feature. */\nexport class ProtocolVersionError extends ClientError {\n    /** @private */\n    constructor(message) {\n        super(message);\n        this.name = \"ProtocolVersionError\";\n    }\n}\n/** Error thrown when an internal client error happens. */\nexport class InternalError extends ClientError {\n    /** @private */\n    constructor(message) {\n        super(message);\n        this.name = \"InternalError\";\n    }\n}\n/** Error thrown when the API is misused. */\nexport class MisuseError extends ClientError {\n    /** @private */\n    constructor(message) {\n        super(message);\n        this.name = \"MisuseError\";\n    }\n}\n","import { ProtoError } from \"../../errors.js\";\nexport function string(value) {\n    if (typeof value === \"string\") {\n        return value;\n    }\n    throw typeError(value, \"string\");\n}\nexport function stringOpt(value) {\n    if (value === null || value === undefined) {\n        return undefined;\n    }\n    else if (typeof value === \"string\") {\n        return value;\n    }\n    throw typeError(value, \"string or null\");\n}\nexport function number(value) {\n    if (typeof value === \"number\") {\n        return value;\n    }\n    throw typeError(value, \"number\");\n}\nexport function boolean(value) {\n    if (typeof value === \"boolean\") {\n        return value;\n    }\n    throw typeError(value, \"boolean\");\n}\nexport function array(value) {\n    if (Array.isArray(value)) {\n        return value;\n    }\n    throw typeError(value, \"array\");\n}\nexport function object(value) {\n    if (value !== null && typeof value === \"object\" && !Array.isArray(value)) {\n        return value;\n    }\n    throw typeError(value, \"object\");\n}\nexport function arrayObjectsMap(value, fun) {\n    return array(value).map((elemValue) => fun(object(elemValue)));\n}\nfunction typeError(value, expected) {\n    if (value === undefined) {\n        return new ProtoError(`Expected ${expected}, but the property was missing`);\n    }\n    let received = typeof value;\n    if (value === null) {\n        received = \"null\";\n    }\n    else if (Array.isArray(value)) {\n        received = \"array\";\n    }\n    return new ProtoError(`Expected ${expected}, received ${received}`);\n}\nexport function readJsonObject(value, fun) {\n    return fun(object(value));\n}\n","export class ObjectWriter {\n    #output;\n    #isFirst;\n    constructor(output) {\n        this.#output = output;\n        this.#isFirst = false;\n    }\n    begin() {\n        this.#output.push('{');\n        this.#isFirst = true;\n    }\n    end() {\n        this.#output.push('}');\n        this.#isFirst = false;\n    }\n    #key(name) {\n        if (this.#isFirst) {\n            this.#output.push('\"');\n            this.#isFirst = false;\n        }\n        else {\n            this.#output.push(',\"');\n        }\n        this.#output.push(name);\n        this.#output.push('\":');\n    }\n    string(name, value) {\n        this.#key(name);\n        this.#output.push(JSON.stringify(value));\n    }\n    stringRaw(name, value) {\n        this.#key(name);\n        this.#output.push('\"');\n        this.#output.push(value);\n        this.#output.push('\"');\n    }\n    number(name, value) {\n        this.#key(name);\n        this.#output.push(\"\" + value);\n    }\n    boolean(name, value) {\n        this.#key(name);\n        this.#output.push(value ? \"true\" : \"false\");\n    }\n    object(name, value, valueFun) {\n        this.#key(name);\n        this.begin();\n        valueFun(this, value);\n        this.end();\n    }\n    arrayObjects(name, values, valueFun) {\n        this.#key(name);\n        this.#output.push('[');\n        for (let i = 0; i < values.length; ++i) {\n            if (i !== 0) {\n                this.#output.push(',');\n            }\n            this.begin();\n            valueFun(this, values[i]);\n            this.end();\n        }\n        this.#output.push(']');\n    }\n}\nexport function writeJsonObject(value, fun) {\n    const output = [];\n    const writer = new ObjectWriter(output);\n    writer.begin();\n    fun(writer, value);\n    writer.end();\n    return output.join(\"\");\n}\n","export const VARINT = 0;\nexport const FIXED_64 = 1;\nexport const LENGTH_DELIMITED = 2;\nexport const GROUP_START = 3;\nexport const GROUP_END = 4;\nexport const FIXED_32 = 5;\n","import { ProtoError } from \"../../errors.js\";\nimport { VARINT, FIXED_64, LENGTH_DELIMITED, FIXED_32 } from \"./util.js\";\nclass MessageReader {\n    #array;\n    #view;\n    #pos;\n    constructor(array) {\n        this.#array = array;\n        this.#view = new DataView(array.buffer, array.byteOffset, array.byteLength);\n        this.#pos = 0;\n    }\n    varint() {\n        let value = 0;\n        for (let shift = 0;; shift += 7) {\n            const byte = this.#array[this.#pos++];\n            value |= (byte & 0x7f) << shift;\n            if (!(byte & 0x80)) {\n                break;\n            }\n        }\n        return value;\n    }\n    varintBig() {\n        let value = 0n;\n        for (let shift = 0n;; shift += 7n) {\n            const byte = this.#array[this.#pos++];\n            value |= BigInt(byte & 0x7f) << shift;\n            if (!(byte & 0x80)) {\n                break;\n            }\n        }\n        return value;\n    }\n    bytes(length) {\n        const array = new Uint8Array(this.#array.buffer, this.#array.byteOffset + this.#pos, length);\n        this.#pos += length;\n        return array;\n    }\n    double() {\n        const value = this.#view.getFloat64(this.#pos, true);\n        this.#pos += 8;\n        return value;\n    }\n    skipVarint() {\n        for (;;) {\n            const byte = this.#array[this.#pos++];\n            if (!(byte & 0x80)) {\n                break;\n            }\n        }\n    }\n    skip(count) {\n        this.#pos += count;\n    }\n    eof() {\n        return this.#pos >= this.#array.byteLength;\n    }\n}\nexport class FieldReader {\n    #reader;\n    #wireType;\n    constructor(reader) {\n        this.#reader = reader;\n        this.#wireType = -1;\n    }\n    setup(wireType) {\n        this.#wireType = wireType;\n    }\n    #expect(expectedWireType) {\n        if (this.#wireType !== expectedWireType) {\n            throw new ProtoError(`Expected wire type ${expectedWireType}, got ${this.#wireType}`);\n        }\n        this.#wireType = -1;\n    }\n    bytes() {\n        this.#expect(LENGTH_DELIMITED);\n        const length = this.#reader.varint();\n        return this.#reader.bytes(length);\n    }\n    string() {\n        return new TextDecoder().decode(this.bytes());\n    }\n    message(def) {\n        return readProtobufMessage(this.bytes(), def);\n    }\n    int32() {\n        this.#expect(VARINT);\n        return this.#reader.varint();\n    }\n    uint32() {\n        return this.int32();\n    }\n    bool() {\n        return this.int32() !== 0;\n    }\n    uint64() {\n        this.#expect(VARINT);\n        return this.#reader.varintBig();\n    }\n    sint64() {\n        const value = this.uint64();\n        return (value >> 1n) ^ (-(value & 1n));\n    }\n    double() {\n        this.#expect(FIXED_64);\n        return this.#reader.double();\n    }\n    maybeSkip() {\n        if (this.#wireType < 0) {\n            return;\n        }\n        else if (this.#wireType === VARINT) {\n            this.#reader.skipVarint();\n        }\n        else if (this.#wireType === FIXED_64) {\n            this.#reader.skip(8);\n        }\n        else if (this.#wireType === LENGTH_DELIMITED) {\n            const length = this.#reader.varint();\n            this.#reader.skip(length);\n        }\n        else if (this.#wireType === FIXED_32) {\n            this.#reader.skip(4);\n        }\n        else {\n            throw new ProtoError(`Unexpected wire type ${this.#wireType}`);\n        }\n        this.#wireType = -1;\n    }\n}\nexport function readProtobufMessage(data, def) {\n    const msgReader = new MessageReader(data);\n    const fieldReader = new FieldReader(msgReader);\n    let value = def.default();\n    while (!msgReader.eof()) {\n        const key = msgReader.varint();\n        const tag = key >> 3;\n        const wireType = key & 0x7;\n        fieldReader.setup(wireType);\n        const tagFun = def[tag];\n        if (tagFun !== undefined) {\n            const returnedValue = tagFun(fieldReader, value);\n            if (returnedValue !== undefined) {\n                value = returnedValue;\n            }\n        }\n        fieldReader.maybeSkip();\n    }\n    return value;\n}\n","import { VARINT, FIXED_64, LENGTH_DELIMITED } from \"./util.js\";\nexport class MessageWriter {\n    #buf;\n    #array;\n    #view;\n    #pos;\n    constructor() {\n        this.#buf = new ArrayBuffer(256);\n        this.#array = new Uint8Array(this.#buf);\n        this.#view = new DataView(this.#buf);\n        this.#pos = 0;\n    }\n    #ensure(extra) {\n        if (this.#pos + extra <= this.#buf.byteLength) {\n            return;\n        }\n        let newCap = this.#buf.byteLength;\n        while (newCap < this.#pos + extra) {\n            newCap *= 2;\n        }\n        const newBuf = new ArrayBuffer(newCap);\n        const newArray = new Uint8Array(newBuf);\n        const newView = new DataView(newBuf);\n        newArray.set(new Uint8Array(this.#buf, 0, this.#pos));\n        this.#buf = newBuf;\n        this.#array = newArray;\n        this.#view = newView;\n    }\n    #varint(value) {\n        this.#ensure(5);\n        value = 0 | value;\n        do {\n            let byte = value & 0x7f;\n            value >>>= 7;\n            byte |= (value ? 0x80 : 0);\n            this.#array[this.#pos++] = byte;\n        } while (value);\n    }\n    #varintBig(value) {\n        this.#ensure(10);\n        value = value & 0xffffffffffffffffn;\n        do {\n            let byte = Number(value & 0x7fn);\n            value >>= 7n;\n            byte |= (value ? 0x80 : 0);\n            this.#array[this.#pos++] = byte;\n        } while (value);\n    }\n    #tag(tag, wireType) {\n        this.#varint((tag << 3) | wireType);\n    }\n    bytes(tag, value) {\n        this.#tag(tag, LENGTH_DELIMITED);\n        this.#varint(value.byteLength);\n        this.#ensure(value.byteLength);\n        this.#array.set(value, this.#pos);\n        this.#pos += value.byteLength;\n    }\n    string(tag, value) {\n        this.bytes(tag, new TextEncoder().encode(value));\n    }\n    message(tag, value, fun) {\n        const writer = new MessageWriter();\n        fun(writer, value);\n        this.bytes(tag, writer.data());\n    }\n    int32(tag, value) {\n        this.#tag(tag, VARINT);\n        this.#varint(value);\n    }\n    uint32(tag, value) {\n        this.int32(tag, value);\n    }\n    bool(tag, value) {\n        this.int32(tag, value ? 1 : 0);\n    }\n    sint64(tag, value) {\n        this.#tag(tag, VARINT);\n        this.#varintBig((value << 1n) ^ (value >> 63n));\n    }\n    double(tag, value) {\n        this.#tag(tag, FIXED_64);\n        this.#ensure(8);\n        this.#view.setFloat64(this.#pos, value, true);\n        this.#pos += 8;\n    }\n    data() {\n        return new Uint8Array(this.#buf, 0, this.#pos);\n    }\n}\nexport function writeProtobufMessage(value, fun) {\n    const w = new MessageWriter();\n    fun(w, value);\n    return w.data();\n}\n","import { InternalError } from \"./errors.js\";\n// An allocator of non-negative integer ids.\n//\n// This clever data structure has these \"ideal\" properties:\n// - It consumes memory proportional to the number of used ids (which is optimal).\n// - All operations are O(1) time.\n// - The allocated ids are small (with a slight modification, we could always provide the smallest possible\n// id).\nexport class IdAlloc {\n    // Set of all allocated ids\n    #usedIds;\n    // Set of all free ids lower than `#usedIds.size`\n    #freeIds;\n    constructor() {\n        this.#usedIds = new Set();\n        this.#freeIds = new Set();\n    }\n    // Returns an id that was free, and marks it as used.\n    alloc() {\n        // this \"loop\" is just a way to pick an arbitrary element from the `#freeIds` set\n        for (const freeId of this.#freeIds) {\n            this.#freeIds.delete(freeId);\n            this.#usedIds.add(freeId);\n            // maintain the invariant of `#freeIds`\n            if (!this.#usedIds.has(this.#usedIds.size - 1)) {\n                this.#freeIds.add(this.#usedIds.size - 1);\n            }\n            return freeId;\n        }\n        // the `#freeIds` set is empty, so there are no free ids lower than `#usedIds.size`\n        // this means that `#usedIds` is a set that contains all numbers from 0 to `#usedIds.size - 1`,\n        // so `#usedIds.size` is free\n        const freeId = this.#usedIds.size;\n        this.#usedIds.add(freeId);\n        return freeId;\n    }\n    free(id) {\n        if (!this.#usedIds.delete(id)) {\n            throw new InternalError(\"Freeing an id that is not allocated\");\n        }\n        // maintain the invariant of `#freeIds`\n        this.#freeIds.delete(this.#usedIds.size);\n        if (id < this.#usedIds.size) {\n            this.#freeIds.add(id);\n        }\n    }\n}\n","import { InternalError } from \"./errors.js\";\nexport function impossible(value, message) {\n    throw new InternalError(message);\n}\n","import { ProtoError, MisuseError } from \"./errors.js\";\nimport { impossible } from \"./util.js\";\nexport function valueToProto(value) {\n    if (value === null) {\n        return null;\n    }\n    else if (typeof value === \"string\") {\n        return value;\n    }\n    else if (typeof value === \"number\") {\n        if (!Number.isFinite(value)) {\n            throw new RangeError(\"Only finite numbers (not Infinity or NaN) can be passed as arguments\");\n        }\n        return value;\n    }\n    else if (typeof value === \"bigint\") {\n        if (value < minInteger || value > maxInteger) {\n            throw new RangeError(\"This bigint value is too large to be represented as a 64-bit integer and passed as argument\");\n        }\n        return value;\n    }\n    else if (typeof value === \"boolean\") {\n        return value ? 1n : 0n;\n    }\n    else if (value instanceof ArrayBuffer) {\n        return new Uint8Array(value);\n    }\n    else if (value instanceof Uint8Array) {\n        return value;\n    }\n    else if (value instanceof Date) {\n        return +value.valueOf();\n    }\n    else if (typeof value === \"object\") {\n        return \"\" + value.toString();\n    }\n    else {\n        throw new TypeError(\"Unsupported type of value\");\n    }\n}\nconst minInteger = -9223372036854775808n;\nconst maxInteger = 9223372036854775807n;\nexport function valueFromProto(value, intMode) {\n    if (value === null) {\n        return null;\n    }\n    else if (typeof value === \"number\") {\n        return value;\n    }\n    else if (typeof value === \"string\") {\n        return value;\n    }\n    else if (typeof value === \"bigint\") {\n        if (intMode === \"number\") {\n            const num = Number(value);\n            if (!Number.isSafeInteger(num)) {\n                throw new RangeError(\"Received integer which is too large to be safely represented as a JavaScript number\");\n            }\n            return num;\n        }\n        else if (intMode === \"bigint\") {\n            return value;\n        }\n        else if (intMode === \"string\") {\n            return \"\" + value;\n        }\n        else {\n            throw new MisuseError(\"Invalid value for IntMode\");\n        }\n    }\n    else if (value instanceof Uint8Array) {\n        // TODO: we need to copy data from `Uint8Array` to return an `ArrayBuffer`. Perhaps we should add a\n        // `blobMode` parameter, similar to `intMode`, which would allow the user to choose between receiving\n        // `ArrayBuffer` (default, convenient) and `Uint8Array` (zero copy)?\n        return value.slice().buffer;\n    }\n    else if (value === undefined) {\n        throw new ProtoError(\"Received unrecognized type of Value\");\n    }\n    else {\n        throw impossible(value, \"Impossible type of Value\");\n    }\n}\n","import { ResponseError } from \"./errors.js\";\nimport { valueFromProto } from \"./value.js\";\nexport function stmtResultFromProto(result) {\n    return {\n        affectedRowCount: result.affectedRowCount,\n        lastInsertRowid: result.lastInsertRowid,\n        columnNames: result.cols.map(col => col.name),\n        columnDecltypes: result.cols.map(col => col.decltype),\n    };\n}\nexport function rowsResultFromProto(result, intMode) {\n    const stmtResult = stmtResultFromProto(result);\n    const rows = result.rows.map(row => rowFromProto(stmtResult.columnNames, row, intMode));\n    return { ...stmtResult, rows };\n}\nexport function rowResultFromProto(result, intMode) {\n    const stmtResult = stmtResultFromProto(result);\n    let row;\n    if (result.rows.length > 0) {\n        row = rowFromProto(stmtResult.columnNames, result.rows[0], intMode);\n    }\n    return { ...stmtResult, row };\n}\nexport function valueResultFromProto(result, intMode) {\n    const stmtResult = stmtResultFromProto(result);\n    let value;\n    if (result.rows.length > 0 && stmtResult.columnNames.length > 0) {\n        value = valueFromProto(result.rows[0][0], intMode);\n    }\n    return { ...stmtResult, value };\n}\nfunction rowFromProto(colNames, values, intMode) {\n    const row = {};\n    // make sure that the \"length\" property is not enumerable\n    Object.defineProperty(row, \"length\", { value: values.length });\n    for (let i = 0; i < values.length; ++i) {\n        const value = valueFromProto(values[i], intMode);\n        Object.defineProperty(row, i, { value });\n        const colName = colNames[i];\n        if (colName !== undefined && !Object.hasOwn(row, colName)) {\n            Object.defineProperty(row, colName, { value, enumerable: true, configurable: true, writable: true });\n        }\n    }\n    return row;\n}\nexport function errorFromProto(error) {\n    return new ResponseError(error.message, error);\n}\n","import { ClientError, ClosedError, MisuseError } from \"./errors.js\";\n/** Text of an SQL statement cached on the server. */\nexport class Sql {\n    #owner;\n    #sqlId;\n    #closed;\n    /** @private */\n    constructor(owner, sqlId) {\n        this.#owner = owner;\n        this.#sqlId = sqlId;\n        this.#closed = undefined;\n    }\n    /** @private */\n    _getSqlId(owner) {\n        if (this.#owner !== owner) {\n            throw new MisuseError(\"Attempted to use SQL text opened with other object\");\n        }\n        else if (this.#closed !== undefined) {\n            throw new ClosedError(\"SQL text is closed\", this.#closed);\n        }\n        return this.#sqlId;\n    }\n    /** Remove the SQL text from the server, releasing resouces. */\n    close() {\n        this._setClosed(new ClientError(\"SQL text was manually closed\"));\n    }\n    /** @private */\n    _setClosed(error) {\n        if (this.#closed === undefined) {\n            this.#closed = error;\n            this.#owner._closeSql(this.#sqlId);\n        }\n    }\n    /** True if the SQL text is closed (removed from the server). */\n    get closed() {\n        return this.#closed !== undefined;\n    }\n}\nexport function sqlToProto(owner, sql) {\n    if (sql instanceof Sql) {\n        return { sqlId: sql._getSqlId(owner) };\n    }\n    else {\n        return { sql: \"\" + sql };\n    }\n}\n","export class Queue {\n    #pushStack;\n    #shiftStack;\n    constructor() {\n        this.#pushStack = [];\n        this.#shiftStack = [];\n    }\n    get length() {\n        return this.#pushStack.length + this.#shiftStack.length;\n    }\n    push(elem) {\n        this.#pushStack.push(elem);\n    }\n    shift() {\n        if (this.#shiftStack.length === 0 && this.#pushStack.length > 0) {\n            this.#shiftStack = this.#pushStack.reverse();\n            this.#pushStack = [];\n        }\n        return this.#shiftStack.pop();\n    }\n    first() {\n        return this.#shiftStack.length !== 0\n            ? this.#shiftStack[this.#shiftStack.length - 1]\n            : this.#pushStack[0];\n    }\n}\n","import { sqlToProto } from \"./sql.js\";\nimport { valueToProto } from \"./value.js\";\n/** A statement that can be evaluated by the database. Besides the SQL text, it also contains the positional\n * and named arguments. */\nexport class Stmt {\n    /** The SQL statement text. */\n    sql;\n    /** @private */\n    _args;\n    /** @private */\n    _namedArgs;\n    /** Initialize the statement with given SQL text. */\n    constructor(sql) {\n        this.sql = sql;\n        this._args = [];\n        this._namedArgs = new Map();\n    }\n    /** Binds positional parameters from the given `values`. All previous positional bindings are cleared. */\n    bindIndexes(values) {\n        this._args.length = 0;\n        for (const value of values) {\n            this._args.push(valueToProto(value));\n        }\n        return this;\n    }\n    /** Binds a parameter by a 1-based index. */\n    bindIndex(index, value) {\n        if (index !== (index | 0) || index <= 0) {\n            throw new RangeError(\"Index of a positional argument must be positive integer\");\n        }\n        while (this._args.length < index) {\n            this._args.push(null);\n        }\n        this._args[index - 1] = valueToProto(value);\n        return this;\n    }\n    /** Binds a parameter by name. */\n    bindName(name, value) {\n        this._namedArgs.set(name, valueToProto(value));\n        return this;\n    }\n    /** Clears all bindings. */\n    unbindAll() {\n        this._args.length = 0;\n        this._namedArgs.clear();\n        return this;\n    }\n}\nexport function stmtToProto(sqlOwner, stmt, wantRows) {\n    let inSql;\n    let args = [];\n    let namedArgs = [];\n    if (stmt instanceof Stmt) {\n        inSql = stmt.sql;\n        args = stmt._args;\n        for (const [name, value] of stmt._namedArgs.entries()) {\n            namedArgs.push({ name, value });\n        }\n    }\n    else if (Array.isArray(stmt)) {\n        inSql = stmt[0];\n        if (Array.isArray(stmt[1])) {\n            args = stmt[1].map((arg) => valueToProto(arg));\n        }\n        else {\n            namedArgs = Object.entries(stmt[1]).map(([name, value]) => {\n                return { name, value: valueToProto(value) };\n            });\n        }\n    }\n    else {\n        inSql = stmt;\n    }\n    const { sql, sqlId } = sqlToProto(sqlOwner, inSql);\n    return { sql, sqlId, args, namedArgs, wantRows };\n}\n","import { ProtoError, MisuseError } from \"./errors.js\";\nimport { stmtResultFromProto, rowsResultFromProto, rowResultFromProto, valueResultFromProto, errorFromProto, } from \"./result.js\";\nimport { stmtToProto } from \"./stmt.js\";\nimport { impossible } from \"./util.js\";\n/** A builder for creating a batch and executing it on the server. */\nexport class Batch {\n    /** @private */\n    _stream;\n    #useCursor;\n    /** @private */\n    _steps;\n    #executed;\n    /** @private */\n    constructor(stream, useCursor) {\n        this._stream = stream;\n        this.#useCursor = useCursor;\n        this._steps = [];\n        this.#executed = false;\n    }\n    /** Return a builder for adding a step to the batch. */\n    step() {\n        return new BatchStep(this);\n    }\n    /** Execute the batch. */\n    execute() {\n        if (this.#executed) {\n            throw new MisuseError(\"This batch has already been executed\");\n        }\n        this.#executed = true;\n        const batch = {\n            steps: this._steps.map((step) => step.proto),\n        };\n        if (this.#useCursor) {\n            return executeCursor(this._stream, this._steps, batch);\n        }\n        else {\n            return executeRegular(this._stream, this._steps, batch);\n        }\n    }\n}\nfunction executeRegular(stream, steps, batch) {\n    return stream._batch(batch).then((result) => {\n        for (let step = 0; step < steps.length; ++step) {\n            const stepResult = result.stepResults.get(step);\n            const stepError = result.stepErrors.get(step);\n            steps[step].callback(stepResult, stepError);\n        }\n    });\n}\nasync function executeCursor(stream, steps, batch) {\n    const cursor = await stream._openCursor(batch);\n    try {\n        let nextStep = 0;\n        let beginEntry = undefined;\n        let rows = [];\n        for (;;) {\n            const entry = await cursor.next();\n            if (entry === undefined) {\n                break;\n            }\n            if (entry.type === \"step_begin\") {\n                if (entry.step < nextStep || entry.step >= steps.length) {\n                    throw new ProtoError(\"Server produced StepBeginEntry for unexpected step\");\n                }\n                else if (beginEntry !== undefined) {\n                    throw new ProtoError(\"Server produced StepBeginEntry before terminating previous step\");\n                }\n                for (let step = nextStep; step < entry.step; ++step) {\n                    steps[step].callback(undefined, undefined);\n                }\n                nextStep = entry.step + 1;\n                beginEntry = entry;\n                rows = [];\n            }\n            else if (entry.type === \"step_end\") {\n                if (beginEntry === undefined) {\n                    throw new ProtoError(\"Server produced StepEndEntry but no step is active\");\n                }\n                const stmtResult = {\n                    cols: beginEntry.cols,\n                    rows,\n                    affectedRowCount: entry.affectedRowCount,\n                    lastInsertRowid: entry.lastInsertRowid,\n                };\n                steps[beginEntry.step].callback(stmtResult, undefined);\n                beginEntry = undefined;\n                rows = [];\n            }\n            else if (entry.type === \"step_error\") {\n                if (beginEntry === undefined) {\n                    if (entry.step >= steps.length) {\n                        throw new ProtoError(\"Server produced StepErrorEntry for unexpected step\");\n                    }\n                    for (let step = nextStep; step < entry.step; ++step) {\n                        steps[step].callback(undefined, undefined);\n                    }\n                }\n                else {\n                    if (entry.step !== beginEntry.step) {\n                        throw new ProtoError(\"Server produced StepErrorEntry for unexpected step\");\n                    }\n                    beginEntry = undefined;\n                    rows = [];\n                }\n                steps[entry.step].callback(undefined, entry.error);\n                nextStep = entry.step + 1;\n            }\n            else if (entry.type === \"row\") {\n                if (beginEntry === undefined) {\n                    throw new ProtoError(\"Server produced RowEntry but no step is active\");\n                }\n                rows.push(entry.row);\n            }\n            else if (entry.type === \"error\") {\n                throw errorFromProto(entry.error);\n            }\n            else if (entry.type === \"none\") {\n                throw new ProtoError(\"Server produced unrecognized CursorEntry\");\n            }\n            else {\n                throw impossible(entry, \"Impossible CursorEntry\");\n            }\n        }\n        if (beginEntry !== undefined) {\n            throw new ProtoError(\"Server closed Cursor before terminating active step\");\n        }\n        for (let step = nextStep; step < steps.length; ++step) {\n            steps[step].callback(undefined, undefined);\n        }\n    }\n    finally {\n        cursor.close();\n    }\n}\n/** A builder for adding a step to the batch. */\nexport class BatchStep {\n    /** @private */\n    _batch;\n    #conds;\n    /** @private */\n    _index;\n    /** @private */\n    constructor(batch) {\n        this._batch = batch;\n        this.#conds = [];\n        this._index = undefined;\n    }\n    /** Add the condition that needs to be satisfied to execute the statement. If you use this method multiple\n     * times, we join the conditions with a logical AND. */\n    condition(cond) {\n        this.#conds.push(cond._proto);\n        return this;\n    }\n    /** Add a statement that returns rows. */\n    query(stmt) {\n        return this.#add(stmt, true, rowsResultFromProto);\n    }\n    /** Add a statement that returns at most a single row. */\n    queryRow(stmt) {\n        return this.#add(stmt, true, rowResultFromProto);\n    }\n    /** Add a statement that returns at most a single value. */\n    queryValue(stmt) {\n        return this.#add(stmt, true, valueResultFromProto);\n    }\n    /** Add a statement without returning rows. */\n    run(stmt) {\n        return this.#add(stmt, false, stmtResultFromProto);\n    }\n    #add(inStmt, wantRows, fromProto) {\n        if (this._index !== undefined) {\n            throw new MisuseError(\"This BatchStep has already been added to the batch\");\n        }\n        const stmt = stmtToProto(this._batch._stream._sqlOwner(), inStmt, wantRows);\n        let condition;\n        if (this.#conds.length === 0) {\n            condition = undefined;\n        }\n        else if (this.#conds.length === 1) {\n            condition = this.#conds[0];\n        }\n        else {\n            condition = { type: \"and\", conds: this.#conds.slice() };\n        }\n        const proto = { stmt, condition };\n        return new Promise((outputCallback, errorCallback) => {\n            const callback = (stepResult, stepError) => {\n                if (stepResult !== undefined && stepError !== undefined) {\n                    errorCallback(new ProtoError(\"Server returned both result and error\"));\n                }\n                else if (stepError !== undefined) {\n                    errorCallback(errorFromProto(stepError));\n                }\n                else if (stepResult !== undefined) {\n                    outputCallback(fromProto(stepResult, this._batch._stream.intMode));\n                }\n                else {\n                    outputCallback(undefined);\n                }\n            };\n            this._index = this._batch._steps.length;\n            this._batch._steps.push({ proto, callback });\n        });\n    }\n}\nexport class BatchCond {\n    /** @private */\n    _batch;\n    /** @private */\n    _proto;\n    /** @private */\n    constructor(batch, proto) {\n        this._batch = batch;\n        this._proto = proto;\n    }\n    /** Create a condition that evaluates to true when the given step executes successfully.\n     *\n     * If the given step fails error or is skipped because its condition evaluated to false, this\n     * condition evaluates to false.\n     */\n    static ok(step) {\n        return new BatchCond(step._batch, { type: \"ok\", step: stepIndex(step) });\n    }\n    /** Create a condition that evaluates to true when the given step fails.\n     *\n     * If the given step succeeds or is skipped because its condition evaluated to false, this condition\n     * evaluates to false.\n     */\n    static error(step) {\n        return new BatchCond(step._batch, { type: \"error\", step: stepIndex(step) });\n    }\n    /** Create a condition that is a logical negation of another condition.\n     */\n    static not(cond) {\n        return new BatchCond(cond._batch, { type: \"not\", cond: cond._proto });\n    }\n    /** Create a condition that is a logical AND of other conditions.\n     */\n    static and(batch, conds) {\n        for (const cond of conds) {\n            checkCondBatch(batch, cond);\n        }\n        return new BatchCond(batch, { type: \"and\", conds: conds.map(e => e._proto) });\n    }\n    /** Create a condition that is a logical OR of other conditions.\n     */\n    static or(batch, conds) {\n        for (const cond of conds) {\n            checkCondBatch(batch, cond);\n        }\n        return new BatchCond(batch, { type: \"or\", conds: conds.map(e => e._proto) });\n    }\n    /** Create a condition that evaluates to true when the SQL connection is in autocommit mode (not inside an\n     * explicit transaction). This requires protocol version 3 or higher.\n     */\n    static isAutocommit(batch) {\n        batch._stream.client()._ensureVersion(3, \"BatchCond.isAutocommit()\");\n        return new BatchCond(batch, { type: \"is_autocommit\" });\n    }\n}\nfunction stepIndex(step) {\n    if (step._index === undefined) {\n        throw new MisuseError(\"Cannot add a condition referencing a step that has not been added to the batch\");\n    }\n    return step._index;\n}\nfunction checkCondBatch(expectedBatch, cond) {\n    if (cond._batch !== expectedBatch) {\n        throw new MisuseError(\"Cannot mix BatchCond objects for different Batch objects\");\n    }\n}\n","export function describeResultFromProto(result) {\n    return {\n        paramNames: result.params.map((p) => p.name),\n        columns: result.cols,\n        isExplain: result.isExplain,\n        isReadonly: result.isReadonly,\n    };\n}\n","import { Batch } from \"./batch.js\";\nimport { describeResultFromProto } from \"./describe.js\";\nimport { stmtResultFromProto, rowsResultFromProto, rowResultFromProto, valueResultFromProto, } from \"./result.js\";\nimport { sqlToProto } from \"./sql.js\";\nimport { stmtToProto } from \"./stmt.js\";\n/** A stream for executing SQL statements (a \"database connection\"). */\nexport class Stream {\n    /** @private */\n    constructor(intMode) {\n        this.intMode = intMode;\n    }\n    /** Execute a statement and return rows. */\n    query(stmt) {\n        return this.#execute(stmt, true, rowsResultFromProto);\n    }\n    /** Execute a statement and return at most a single row. */\n    queryRow(stmt) {\n        return this.#execute(stmt, true, rowResultFromProto);\n    }\n    /** Execute a statement and return at most a single value. */\n    queryValue(stmt) {\n        return this.#execute(stmt, true, valueResultFromProto);\n    }\n    /** Execute a statement without returning rows. */\n    run(stmt) {\n        return this.#execute(stmt, false, stmtResultFromProto);\n    }\n    #execute(inStmt, wantRows, fromProto) {\n        const stmt = stmtToProto(this._sqlOwner(), inStmt, wantRows);\n        return this._execute(stmt).then((r) => fromProto(r, this.intMode));\n    }\n    /** Return a builder for creating and executing a batch.\n     *\n     * If `useCursor` is true, the batch will be executed using a Hrana cursor, which will stream results from\n     * the server to the client, which consumes less memory on the server. This requires protocol version 3 or\n     * higher.\n     */\n    batch(useCursor = false) {\n        return new Batch(this, useCursor);\n    }\n    /** Parse and analyze a statement. This requires protocol version 2 or higher. */\n    describe(inSql) {\n        const protoSql = sqlToProto(this._sqlOwner(), inSql);\n        return this._describe(protoSql).then(describeResultFromProto);\n    }\n    /** Execute a sequence of statements separated by semicolons. This requires protocol version 2 or higher.\n     * */\n    sequence(inSql) {\n        const protoSql = sqlToProto(this._sqlOwner(), inSql);\n        return this._sequence(protoSql);\n    }\n    /** Representation of integers returned from the database. See {@link IntMode}.\n     *\n     * This value affects the results of all operations on this stream.\n     */\n    intMode;\n}\n","export class Cursor {\n}\n","import { ClientError, ClosedError } from \"../errors.js\";\nimport { Cursor } from \"../cursor.js\";\nimport { Queue } from \"../queue.js\";\nconst fetchChunkSize = 1000;\nconst fetchQueueSize = 10;\nexport class WsCursor extends Cursor {\n    #client;\n    #stream;\n    #cursorId;\n    #entryQueue;\n    #fetchQueue;\n    #closed;\n    #done;\n    /** @private */\n    constructor(client, stream, cursorId) {\n        super();\n        this.#client = client;\n        this.#stream = stream;\n        this.#cursorId = cursorId;\n        this.#entryQueue = new Queue();\n        this.#fetchQueue = new Queue();\n        this.#closed = undefined;\n        this.#done = false;\n    }\n    /** Fetch the next entry from the cursor. */\n    async next() {\n        for (;;) {\n            if (this.#closed !== undefined) {\n                throw new ClosedError(\"Cursor is closed\", this.#closed);\n            }\n            while (!this.#done && this.#fetchQueue.length < fetchQueueSize) {\n                this.#fetchQueue.push(this.#fetch());\n            }\n            const entry = this.#entryQueue.shift();\n            if (this.#done || entry !== undefined) {\n                return entry;\n            }\n            // we assume that `Cursor.next()` is never called concurrently\n            await this.#fetchQueue.shift().then((response) => {\n                if (response === undefined) {\n                    return;\n                }\n                for (const entry of response.entries) {\n                    this.#entryQueue.push(entry);\n                }\n                this.#done ||= response.done;\n            });\n        }\n    }\n    #fetch() {\n        return this.#stream._sendCursorRequest(this, {\n            type: \"fetch_cursor\",\n            cursorId: this.#cursorId,\n            maxCount: fetchChunkSize,\n        }).then((resp) => resp, (error) => {\n            this._setClosed(error);\n            return undefined;\n        });\n    }\n    /** @private */\n    _setClosed(error) {\n        if (this.#closed !== undefined) {\n            return;\n        }\n        this.#closed = error;\n        this.#stream._sendCursorRequest(this, {\n            type: \"close_cursor\",\n            cursorId: this.#cursorId,\n        }).catch(() => undefined);\n        this.#stream._cursorClosed(this);\n    }\n    /** Close the cursor. */\n    close() {\n        this._setClosed(new ClientError(\"Cursor was manually closed\"));\n    }\n    /** True if the cursor is closed. */\n    get closed() {\n        return this.#closed !== undefined;\n    }\n}\n","import { ClientError, ClosedError, InternalError } from \"../errors.js\";\nimport { Queue } from \"../queue.js\";\nimport { Stream } from \"../stream.js\";\nimport { WsCursor } from \"./cursor.js\";\nexport class WsStream extends Stream {\n    #client;\n    #streamId;\n    #queue;\n    #cursor;\n    #closing;\n    #closed;\n    /** @private */\n    static open(client) {\n        const streamId = client._streamIdAlloc.alloc();\n        const stream = new WsStream(client, streamId);\n        const responseCallback = () => undefined;\n        const errorCallback = (e) => stream.#setClosed(e);\n        const request = { type: \"open_stream\", streamId };\n        client._sendRequest(request, { responseCallback, errorCallback });\n        return stream;\n    }\n    /** @private */\n    constructor(client, streamId) {\n        super(client.intMode);\n        this.#client = client;\n        this.#streamId = streamId;\n        this.#queue = new Queue();\n        this.#cursor = undefined;\n        this.#closing = false;\n        this.#closed = undefined;\n    }\n    /** Get the {@link WsClient} object that this stream belongs to. */\n    client() {\n        return this.#client;\n    }\n    /** @private */\n    _sqlOwner() {\n        return this.#client;\n    }\n    /** @private */\n    _execute(stmt) {\n        return this.#sendStreamRequest({\n            type: \"execute\",\n            streamId: this.#streamId,\n            stmt,\n        }).then((response) => {\n            return response.result;\n        });\n    }\n    /** @private */\n    _batch(batch) {\n        return this.#sendStreamRequest({\n            type: \"batch\",\n            streamId: this.#streamId,\n            batch,\n        }).then((response) => {\n            return response.result;\n        });\n    }\n    /** @private */\n    _describe(protoSql) {\n        this.#client._ensureVersion(2, \"describe()\");\n        return this.#sendStreamRequest({\n            type: \"describe\",\n            streamId: this.#streamId,\n            sql: protoSql.sql,\n            sqlId: protoSql.sqlId,\n        }).then((response) => {\n            return response.result;\n        });\n    }\n    /** @private */\n    _sequence(protoSql) {\n        this.#client._ensureVersion(2, \"sequence()\");\n        return this.#sendStreamRequest({\n            type: \"sequence\",\n            streamId: this.#streamId,\n            sql: protoSql.sql,\n            sqlId: protoSql.sqlId,\n        }).then((_response) => {\n            return undefined;\n        });\n    }\n    /** Check whether the SQL connection underlying this stream is in autocommit state (i.e., outside of an\n     * explicit transaction). This requires protocol version 3 or higher.\n     */\n    getAutocommit() {\n        this.#client._ensureVersion(3, \"getAutocommit()\");\n        return this.#sendStreamRequest({\n            type: \"get_autocommit\",\n            streamId: this.#streamId,\n        }).then((response) => {\n            return response.isAutocommit;\n        });\n    }\n    #sendStreamRequest(request) {\n        return new Promise((responseCallback, errorCallback) => {\n            this.#pushToQueue({ type: \"request\", request, responseCallback, errorCallback });\n        });\n    }\n    /** @private */\n    _openCursor(batch) {\n        this.#client._ensureVersion(3, \"cursor\");\n        return new Promise((cursorCallback, errorCallback) => {\n            this.#pushToQueue({ type: \"cursor\", batch, cursorCallback, errorCallback });\n        });\n    }\n    /** @private */\n    _sendCursorRequest(cursor, request) {\n        if (cursor !== this.#cursor) {\n            throw new InternalError(\"Cursor not associated with the stream attempted to execute a request\");\n        }\n        return new Promise((responseCallback, errorCallback) => {\n            if (this.#closed !== undefined) {\n                errorCallback(new ClosedError(\"Stream is closed\", this.#closed));\n            }\n            else {\n                this.#client._sendRequest(request, { responseCallback, errorCallback });\n            }\n        });\n    }\n    /** @private */\n    _cursorClosed(cursor) {\n        if (cursor !== this.#cursor) {\n            throw new InternalError(\"Cursor was closed, but it was not associated with the stream\");\n        }\n        this.#cursor = undefined;\n        this.#flushQueue();\n    }\n    #pushToQueue(entry) {\n        if (this.#closed !== undefined) {\n            entry.errorCallback(new ClosedError(\"Stream is closed\", this.#closed));\n        }\n        else if (this.#closing) {\n            entry.errorCallback(new ClosedError(\"Stream is closing\", undefined));\n        }\n        else {\n            this.#queue.push(entry);\n            this.#flushQueue();\n        }\n    }\n    #flushQueue() {\n        for (;;) {\n            const entry = this.#queue.first();\n            if (entry === undefined && this.#cursor === undefined && this.#closing) {\n                this.#setClosed(new ClientError(\"Stream was gracefully closed\"));\n                break;\n            }\n            else if (entry?.type === \"request\" && this.#cursor === undefined) {\n                const { request, responseCallback, errorCallback } = entry;\n                this.#queue.shift();\n                this.#client._sendRequest(request, { responseCallback, errorCallback });\n            }\n            else if (entry?.type === \"cursor\" && this.#cursor === undefined) {\n                const { batch, cursorCallback } = entry;\n                this.#queue.shift();\n                const cursorId = this.#client._cursorIdAlloc.alloc();\n                const cursor = new WsCursor(this.#client, this, cursorId);\n                const request = {\n                    type: \"open_cursor\",\n                    streamId: this.#streamId,\n                    cursorId,\n                    batch,\n                };\n                const responseCallback = () => undefined;\n                const errorCallback = (e) => cursor._setClosed(e);\n                this.#client._sendRequest(request, { responseCallback, errorCallback });\n                this.#cursor = cursor;\n                cursorCallback(cursor);\n            }\n            else {\n                break;\n            }\n        }\n    }\n    #setClosed(error) {\n        if (this.#closed !== undefined) {\n            return;\n        }\n        this.#closed = error;\n        if (this.#cursor !== undefined) {\n            this.#cursor._setClosed(error);\n        }\n        for (;;) {\n            const entry = this.#queue.shift();\n            if (entry !== undefined) {\n                entry.errorCallback(error);\n            }\n            else {\n                break;\n            }\n        }\n        const request = { type: \"close_stream\", streamId: this.#streamId };\n        const responseCallback = () => this.#client._streamIdAlloc.free(this.#streamId);\n        const errorCallback = () => undefined;\n        this.#client._sendRequest(request, { responseCallback, errorCallback });\n    }\n    /** Immediately close the stream. */\n    close() {\n        this.#setClosed(new ClientError(\"Stream was manually closed\"));\n    }\n    /** Gracefully close the stream. */\n    closeGracefully() {\n        this.#closing = true;\n        this.#flushQueue();\n    }\n    /** True if the stream is closed or closing. */\n    get closed() {\n        return this.#closed !== undefined || this.#closing;\n    }\n}\n","import { Base64 } from \"js-base64\";\nimport { impossible } from \"../util.js\";\nexport function Stmt(w, msg) {\n    if (msg.sql !== undefined) {\n        w.string(\"sql\", msg.sql);\n    }\n    if (msg.sqlId !== undefined) {\n        w.number(\"sql_id\", msg.sqlId);\n    }\n    w.arrayObjects(\"args\", msg.args, Value);\n    w.arrayObjects(\"named_args\", msg.namedArgs, NamedArg);\n    w.boolean(\"want_rows\", msg.wantRows);\n}\nfunction NamedArg(w, msg) {\n    w.string(\"name\", msg.name);\n    w.object(\"value\", msg.value, Value);\n}\nexport function Batch(w, msg) {\n    w.arrayObjects(\"steps\", msg.steps, BatchStep);\n}\nfunction BatchStep(w, msg) {\n    if (msg.condition !== undefined) {\n        w.object(\"condition\", msg.condition, BatchCond);\n    }\n    w.object(\"stmt\", msg.stmt, Stmt);\n}\nfunction BatchCond(w, msg) {\n    w.stringRaw(\"type\", msg.type);\n    if (msg.type === \"ok\" || msg.type === \"error\") {\n        w.number(\"step\", msg.step);\n    }\n    else if (msg.type === \"not\") {\n        w.object(\"cond\", msg.cond, BatchCond);\n    }\n    else if (msg.type === \"and\" || msg.type === \"or\") {\n        w.arrayObjects(\"conds\", msg.conds, BatchCond);\n    }\n    else if (msg.type === \"is_autocommit\") {\n        // do nothing\n    }\n    else {\n        throw impossible(msg, \"Impossible type of BatchCond\");\n    }\n}\nfunction Value(w, msg) {\n    if (msg === null) {\n        w.stringRaw(\"type\", \"null\");\n    }\n    else if (typeof msg === \"bigint\") {\n        w.stringRaw(\"type\", \"integer\");\n        w.stringRaw(\"value\", \"\" + msg);\n    }\n    else if (typeof msg === \"number\") {\n        w.stringRaw(\"type\", \"float\");\n        w.number(\"value\", msg);\n    }\n    else if (typeof msg === \"string\") {\n        w.stringRaw(\"type\", \"text\");\n        w.string(\"value\", msg);\n    }\n    else if (msg instanceof Uint8Array) {\n        w.stringRaw(\"type\", \"blob\");\n        w.stringRaw(\"base64\", Base64.fromUint8Array(msg));\n    }\n    else if (msg === undefined) {\n        // do nothing\n    }\n    else {\n        throw impossible(msg, \"Impossible type of Value\");\n    }\n}\n","import { Stmt, Batch } from \"../shared/json_encode.js\";\nimport { impossible } from \"../util.js\";\nexport function ClientMsg(w, msg) {\n    w.stringRaw(\"type\", msg.type);\n    if (msg.type === \"hello\") {\n        if (msg.jwt !== undefined) {\n            w.string(\"jwt\", msg.jwt);\n        }\n    }\n    else if (msg.type === \"request\") {\n        w.number(\"request_id\", msg.requestId);\n        w.object(\"request\", msg.request, Request);\n    }\n    else {\n        throw impossible(msg, \"Impossible type of ClientMsg\");\n    }\n}\nfunction Request(w, msg) {\n    w.stringRaw(\"type\", msg.type);\n    if (msg.type === \"open_stream\") {\n        w.number(\"stream_id\", msg.streamId);\n    }\n    else if (msg.type === \"close_stream\") {\n        w.number(\"stream_id\", msg.streamId);\n    }\n    else if (msg.type === \"execute\") {\n        w.number(\"stream_id\", msg.streamId);\n        w.object(\"stmt\", msg.stmt, Stmt);\n    }\n    else if (msg.type === \"batch\") {\n        w.number(\"stream_id\", msg.streamId);\n        w.object(\"batch\", msg.batch, Batch);\n    }\n    else if (msg.type === \"open_cursor\") {\n        w.number(\"stream_id\", msg.streamId);\n        w.number(\"cursor_id\", msg.cursorId);\n        w.object(\"batch\", msg.batch, Batch);\n    }\n    else if (msg.type === \"close_cursor\") {\n        w.number(\"cursor_id\", msg.cursorId);\n    }\n    else if (msg.type === \"fetch_cursor\") {\n        w.number(\"cursor_id\", msg.cursorId);\n        w.number(\"max_count\", msg.maxCount);\n    }\n    else if (msg.type === \"sequence\") {\n        w.number(\"stream_id\", msg.streamId);\n        if (msg.sql !== undefined) {\n            w.string(\"sql\", msg.sql);\n        }\n        if (msg.sqlId !== undefined) {\n            w.number(\"sql_id\", msg.sqlId);\n        }\n    }\n    else if (msg.type === \"describe\") {\n        w.number(\"stream_id\", msg.streamId);\n        if (msg.sql !== undefined) {\n            w.string(\"sql\", msg.sql);\n        }\n        if (msg.sqlId !== undefined) {\n            w.number(\"sql_id\", msg.sqlId);\n        }\n    }\n    else if (msg.type === \"store_sql\") {\n        w.number(\"sql_id\", msg.sqlId);\n        w.string(\"sql\", msg.sql);\n    }\n    else if (msg.type === \"close_sql\") {\n        w.number(\"sql_id\", msg.sqlId);\n    }\n    else if (msg.type === \"get_autocommit\") {\n        w.number(\"stream_id\", msg.streamId);\n    }\n    else {\n        throw impossible(msg, \"Impossible type of Request\");\n    }\n}\n","import { impossible } from \"../util.js\";\nexport function Stmt(w, msg) {\n    if (msg.sql !== undefined) {\n        w.string(1, msg.sql);\n    }\n    if (msg.sqlId !== undefined) {\n        w.int32(2, msg.sqlId);\n    }\n    for (const arg of msg.args) {\n        w.message(3, arg, Value);\n    }\n    for (const arg of msg.namedArgs) {\n        w.message(4, arg, NamedArg);\n    }\n    w.bool(5, msg.wantRows);\n}\nfunction NamedArg(w, msg) {\n    w.string(1, msg.name);\n    w.message(2, msg.value, Value);\n}\nexport function Batch(w, msg) {\n    for (const step of msg.steps) {\n        w.message(1, step, BatchStep);\n    }\n}\nfunction BatchStep(w, msg) {\n    if (msg.condition !== undefined) {\n        w.message(1, msg.condition, BatchCond);\n    }\n    w.message(2, msg.stmt, Stmt);\n}\nfunction BatchCond(w, msg) {\n    if (msg.type === \"ok\") {\n        w.uint32(1, msg.step);\n    }\n    else if (msg.type === \"error\") {\n        w.uint32(2, msg.step);\n    }\n    else if (msg.type === \"not\") {\n        w.message(3, msg.cond, BatchCond);\n    }\n    else if (msg.type === \"and\") {\n        w.message(4, msg.conds, BatchCondList);\n    }\n    else if (msg.type === \"or\") {\n        w.message(5, msg.conds, BatchCondList);\n    }\n    else if (msg.type === \"is_autocommit\") {\n        w.message(6, undefined, Empty);\n    }\n    else {\n        throw impossible(msg, \"Impossible type of BatchCond\");\n    }\n}\nfunction BatchCondList(w, msg) {\n    for (const cond of msg) {\n        w.message(1, cond, BatchCond);\n    }\n}\nfunction Value(w, msg) {\n    if (msg === null) {\n        w.message(1, undefined, Empty);\n    }\n    else if (typeof msg === \"bigint\") {\n        w.sint64(2, msg);\n    }\n    else if (typeof msg === \"number\") {\n        w.double(3, msg);\n    }\n    else if (typeof msg === \"string\") {\n        w.string(4, msg);\n    }\n    else if (msg instanceof Uint8Array) {\n        w.bytes(5, msg);\n    }\n    else if (msg === undefined) {\n        // do nothing\n    }\n    else {\n        throw impossible(msg, \"Impossible type of Value\");\n    }\n}\nfunction Empty(_w, _msg) {\n    // do nothing\n}\n","import { Stmt, Batch } from \"../shared/protobuf_encode.js\";\nimport { impossible } from \"../util.js\";\nexport function ClientMsg(w, msg) {\n    if (msg.type === \"hello\") {\n        w.message(1, msg, HelloMsg);\n    }\n    else if (msg.type === \"request\") {\n        w.message(2, msg, RequestMsg);\n    }\n    else {\n        throw impossible(msg, \"Impossible type of ClientMsg\");\n    }\n}\nfunction HelloMsg(w, msg) {\n    if (msg.jwt !== undefined) {\n        w.string(1, msg.jwt);\n    }\n}\nfunction RequestMsg(w, msg) {\n    w.int32(1, msg.requestId);\n    const request = msg.request;\n    if (request.type === \"open_stream\") {\n        w.message(2, request, OpenStreamReq);\n    }\n    else if (request.type === \"close_stream\") {\n        w.message(3, request, CloseStreamReq);\n    }\n    else if (request.type === \"execute\") {\n        w.message(4, request, ExecuteReq);\n    }\n    else if (request.type === \"batch\") {\n        w.message(5, request, BatchReq);\n    }\n    else if (request.type === \"open_cursor\") {\n        w.message(6, request, OpenCursorReq);\n    }\n    else if (request.type === \"close_cursor\") {\n        w.message(7, request, CloseCursorReq);\n    }\n    else if (request.type === \"fetch_cursor\") {\n        w.message(8, request, FetchCursorReq);\n    }\n    else if (request.type === \"sequence\") {\n        w.message(9, request, SequenceReq);\n    }\n    else if (request.type === \"describe\") {\n        w.message(10, request, DescribeReq);\n    }\n    else if (request.type === \"store_sql\") {\n        w.message(11, request, StoreSqlReq);\n    }\n    else if (request.type === \"close_sql\") {\n        w.message(12, request, CloseSqlReq);\n    }\n    else if (request.type === \"get_autocommit\") {\n        w.message(13, request, GetAutocommitReq);\n    }\n    else {\n        throw impossible(request, \"Impossible type of Request\");\n    }\n}\nfunction OpenStreamReq(w, msg) {\n    w.int32(1, msg.streamId);\n}\nfunction CloseStreamReq(w, msg) {\n    w.int32(1, msg.streamId);\n}\nfunction ExecuteReq(w, msg) {\n    w.int32(1, msg.streamId);\n    w.message(2, msg.stmt, Stmt);\n}\nfunction BatchReq(w, msg) {\n    w.int32(1, msg.streamId);\n    w.message(2, msg.batch, Batch);\n}\nfunction OpenCursorReq(w, msg) {\n    w.int32(1, msg.streamId);\n    w.int32(2, msg.cursorId);\n    w.message(3, msg.batch, Batch);\n}\nfunction CloseCursorReq(w, msg) {\n    w.int32(1, msg.cursorId);\n}\nfunction FetchCursorReq(w, msg) {\n    w.int32(1, msg.cursorId);\n    w.uint32(2, msg.maxCount);\n}\nfunction SequenceReq(w, msg) {\n    w.int32(1, msg.streamId);\n    if (msg.sql !== undefined) {\n        w.string(2, msg.sql);\n    }\n    if (msg.sqlId !== undefined) {\n        w.int32(3, msg.sqlId);\n    }\n}\nfunction DescribeReq(w, msg) {\n    w.int32(1, msg.streamId);\n    if (msg.sql !== undefined) {\n        w.string(2, msg.sql);\n    }\n    if (msg.sqlId !== undefined) {\n        w.int32(3, msg.sqlId);\n    }\n}\nfunction StoreSqlReq(w, msg) {\n    w.int32(1, msg.sqlId);\n    w.string(2, msg.sql);\n}\nfunction CloseSqlReq(w, msg) {\n    w.int32(1, msg.sqlId);\n}\nfunction GetAutocommitReq(w, msg) {\n    w.int32(1, msg.streamId);\n}\n","import { Base64 } from \"js-base64\";\nimport { ProtoError } from \"../errors.js\";\nimport * as d from \"../encoding/json/decode.js\";\nexport function Error(obj) {\n    const message = d.string(obj[\"message\"]);\n    const code = d.stringOpt(obj[\"code\"]);\n    return { message, code };\n}\nexport function StmtResult(obj) {\n    const cols = d.arrayObjectsMap(obj[\"cols\"], Col);\n    const rows = d.array(obj[\"rows\"]).map((rowObj) => d.arrayObjectsMap(rowObj, Value));\n    const affectedRowCount = d.number(obj[\"affected_row_count\"]);\n    const lastInsertRowidStr = d.stringOpt(obj[\"last_insert_rowid\"]);\n    const lastInsertRowid = lastInsertRowidStr !== undefined\n        ? BigInt(lastInsertRowidStr) : undefined;\n    return { cols, rows, affectedRowCount, lastInsertRowid };\n}\nfunction Col(obj) {\n    const name = d.stringOpt(obj[\"name\"]);\n    const decltype = d.stringOpt(obj[\"decltype\"]);\n    return { name, decltype };\n}\nexport function BatchResult(obj) {\n    const stepResults = new Map();\n    d.array(obj[\"step_results\"]).forEach((value, i) => {\n        if (value !== null) {\n            stepResults.set(i, StmtResult(d.object(value)));\n        }\n    });\n    const stepErrors = new Map();\n    d.array(obj[\"step_errors\"]).forEach((value, i) => {\n        if (value !== null) {\n            stepErrors.set(i, Error(d.object(value)));\n        }\n    });\n    return { stepResults, stepErrors };\n}\nexport function CursorEntry(obj) {\n    const type = d.string(obj[\"type\"]);\n    if (type === \"step_begin\") {\n        const step = d.number(obj[\"step\"]);\n        const cols = d.arrayObjectsMap(obj[\"cols\"], Col);\n        return { type: \"step_begin\", step, cols };\n    }\n    else if (type === \"step_end\") {\n        const affectedRowCount = d.number(obj[\"affected_row_count\"]);\n        const lastInsertRowidStr = d.stringOpt(obj[\"last_insert_rowid\"]);\n        const lastInsertRowid = lastInsertRowidStr !== undefined\n            ? BigInt(lastInsertRowidStr) : undefined;\n        return { type: \"step_end\", affectedRowCount, lastInsertRowid };\n    }\n    else if (type === \"step_error\") {\n        const step = d.number(obj[\"step\"]);\n        const error = Error(d.object(obj[\"error\"]));\n        return { type: \"step_error\", step, error };\n    }\n    else if (type === \"row\") {\n        const row = d.arrayObjectsMap(obj[\"row\"], Value);\n        return { type: \"row\", row };\n    }\n    else if (type === \"error\") {\n        const error = Error(d.object(obj[\"error\"]));\n        return { type: \"error\", error };\n    }\n    else {\n        throw new ProtoError(\"Unexpected type of CursorEntry\");\n    }\n}\nexport function DescribeResult(obj) {\n    const params = d.arrayObjectsMap(obj[\"params\"], DescribeParam);\n    const cols = d.arrayObjectsMap(obj[\"cols\"], DescribeCol);\n    const isExplain = d.boolean(obj[\"is_explain\"]);\n    const isReadonly = d.boolean(obj[\"is_readonly\"]);\n    return { params, cols, isExplain, isReadonly };\n}\nfunction DescribeParam(obj) {\n    const name = d.stringOpt(obj[\"name\"]);\n    return { name };\n}\nfunction DescribeCol(obj) {\n    const name = d.string(obj[\"name\"]);\n    const decltype = d.stringOpt(obj[\"decltype\"]);\n    return { name, decltype };\n}\nexport function Value(obj) {\n    const type = d.string(obj[\"type\"]);\n    if (type === \"null\") {\n        return null;\n    }\n    else if (type === \"integer\") {\n        const value = d.string(obj[\"value\"]);\n        return BigInt(value);\n    }\n    else if (type === \"float\") {\n        return d.number(obj[\"value\"]);\n    }\n    else if (type === \"text\") {\n        return d.string(obj[\"value\"]);\n    }\n    else if (type === \"blob\") {\n        return Base64.toUint8Array(d.string(obj[\"base64\"]));\n    }\n    else {\n        throw new ProtoError(\"Unexpected type of Value\");\n    }\n}\n","import { ProtoError } from \"../errors.js\";\nimport * as d from \"../encoding/json/decode.js\";\nimport { Error, StmtResult, BatchResult, CursorEntry, DescribeResult } from \"../shared/json_decode.js\";\nexport function ServerMsg(obj) {\n    const type = d.string(obj[\"type\"]);\n    if (type === \"hello_ok\") {\n        return { type: \"hello_ok\" };\n    }\n    else if (type === \"hello_error\") {\n        const error = Error(d.object(obj[\"error\"]));\n        return { type: \"hello_error\", error };\n    }\n    else if (type === \"response_ok\") {\n        const requestId = d.number(obj[\"request_id\"]);\n        const response = Response(d.object(obj[\"response\"]));\n        return { type: \"response_ok\", requestId, response };\n    }\n    else if (type === \"response_error\") {\n        const requestId = d.number(obj[\"request_id\"]);\n        const error = Error(d.object(obj[\"error\"]));\n        return { type: \"response_error\", requestId, error };\n    }\n    else {\n        throw new ProtoError(\"Unexpected type of ServerMsg\");\n    }\n}\nfunction Response(obj) {\n    const type = d.string(obj[\"type\"]);\n    if (type === \"open_stream\") {\n        return { type: \"open_stream\" };\n    }\n    else if (type === \"close_stream\") {\n        return { type: \"close_stream\" };\n    }\n    else if (type === \"execute\") {\n        const result = StmtResult(d.object(obj[\"result\"]));\n        return { type: \"execute\", result };\n    }\n    else if (type === \"batch\") {\n        const result = BatchResult(d.object(obj[\"result\"]));\n        return { type: \"batch\", result };\n    }\n    else if (type === \"open_cursor\") {\n        return { type: \"open_cursor\" };\n    }\n    else if (type === \"close_cursor\") {\n        return { type: \"close_cursor\" };\n    }\n    else if (type === \"fetch_cursor\") {\n        const entries = d.arrayObjectsMap(obj[\"entries\"], CursorEntry);\n        const done = d.boolean(obj[\"done\"]);\n        return { type: \"fetch_cursor\", entries, done };\n    }\n    else if (type === \"sequence\") {\n        return { type: \"sequence\" };\n    }\n    else if (type === \"describe\") {\n        const result = DescribeResult(d.object(obj[\"result\"]));\n        return { type: \"describe\", result };\n    }\n    else if (type === \"store_sql\") {\n        return { type: \"store_sql\" };\n    }\n    else if (type === \"close_sql\") {\n        return { type: \"close_sql\" };\n    }\n    else if (type === \"get_autocommit\") {\n        const isAutocommit = d.boolean(obj[\"is_autocommit\"]);\n        return { type: \"get_autocommit\", isAutocommit };\n    }\n    else {\n        throw new ProtoError(\"Unexpected type of Response\");\n    }\n}\n","export const Error = {\n    default() { return { message: \"\", code: undefined }; },\n    1(r, msg) { msg.message = r.string(); },\n    2(r, msg) { msg.code = r.string(); },\n};\nexport const StmtResult = {\n    default() {\n        return {\n            cols: [],\n            rows: [],\n            affectedRowCount: 0,\n            lastInsertRowid: undefined,\n        };\n    },\n    1(r, msg) { msg.cols.push(r.message(Col)); },\n    2(r, msg) { msg.rows.push(r.message(Row)); },\n    3(r, msg) { msg.affectedRowCount = Number(r.uint64()); },\n    4(r, msg) { msg.lastInsertRowid = r.sint64(); },\n};\nconst Col = {\n    default() { return { name: undefined, decltype: undefined }; },\n    1(r, msg) { msg.name = r.string(); },\n    2(r, msg) { msg.decltype = r.string(); },\n};\nconst Row = {\n    default() { return []; },\n    1(r, msg) { msg.push(r.message(Value)); },\n};\nexport const BatchResult = {\n    default() { return { stepResults: new Map(), stepErrors: new Map() }; },\n    1(r, msg) {\n        const [key, value] = r.message(BatchResultStepResult);\n        msg.stepResults.set(key, value);\n    },\n    2(r, msg) {\n        const [key, value] = r.message(BatchResultStepError);\n        msg.stepErrors.set(key, value);\n    },\n};\nconst BatchResultStepResult = {\n    default() { return [0, StmtResult.default()]; },\n    1(r, msg) { msg[0] = r.uint32(); },\n    2(r, msg) { msg[1] = r.message(StmtResult); },\n};\nconst BatchResultStepError = {\n    default() { return [0, Error.default()]; },\n    1(r, msg) { msg[0] = r.uint32(); },\n    2(r, msg) { msg[1] = r.message(Error); },\n};\nexport const CursorEntry = {\n    default() { return { type: \"none\" }; },\n    1(r) { return r.message(StepBeginEntry); },\n    2(r) { return r.message(StepEndEntry); },\n    3(r) { return r.message(StepErrorEntry); },\n    4(r) { return { type: \"row\", row: r.message(Row) }; },\n    5(r) { return { type: \"error\", error: r.message(Error) }; },\n};\nconst StepBeginEntry = {\n    default() { return { type: \"step_begin\", step: 0, cols: [] }; },\n    1(r, msg) { msg.step = r.uint32(); },\n    2(r, msg) { msg.cols.push(r.message(Col)); },\n};\nconst StepEndEntry = {\n    default() {\n        return {\n            type: \"step_end\",\n            affectedRowCount: 0,\n            lastInsertRowid: undefined,\n        };\n    },\n    1(r, msg) { msg.affectedRowCount = r.uint32(); },\n    2(r, msg) { msg.lastInsertRowid = r.uint64(); },\n};\nconst StepErrorEntry = {\n    default() {\n        return {\n            type: \"step_error\",\n            step: 0,\n            error: Error.default(),\n        };\n    },\n    1(r, msg) { msg.step = r.uint32(); },\n    2(r, msg) { msg.error = r.message(Error); },\n};\nexport const DescribeResult = {\n    default() {\n        return {\n            params: [],\n            cols: [],\n            isExplain: false,\n            isReadonly: false,\n        };\n    },\n    1(r, msg) { msg.params.push(r.message(DescribeParam)); },\n    2(r, msg) { msg.cols.push(r.message(DescribeCol)); },\n    3(r, msg) { msg.isExplain = r.bool(); },\n    4(r, msg) { msg.isReadonly = r.bool(); },\n};\nconst DescribeParam = {\n    default() { return { name: undefined }; },\n    1(r, msg) { msg.name = r.string(); },\n};\nconst DescribeCol = {\n    default() { return { name: \"\", decltype: undefined }; },\n    1(r, msg) { msg.name = r.string(); },\n    2(r, msg) { msg.decltype = r.string(); },\n};\nconst Value = {\n    default() { return undefined; },\n    1(r) { return null; },\n    2(r) { return r.sint64(); },\n    3(r) { return r.double(); },\n    4(r) { return r.string(); },\n    5(r) { return r.bytes(); },\n};\n","import { Error, StmtResult, BatchResult, CursorEntry, DescribeResult } from \"../shared/protobuf_decode.js\";\nexport const ServerMsg = {\n    default() { return { type: \"none\" }; },\n    1(r) { return { type: \"hello_ok\" }; },\n    2(r) { return r.message(HelloErrorMsg); },\n    3(r) { return r.message(ResponseOkMsg); },\n    4(r) { return r.message(ResponseErrorMsg); },\n};\nconst HelloErrorMsg = {\n    default() { return { type: \"hello_error\", error: Error.default() }; },\n    1(r, msg) { msg.error = r.message(Error); },\n};\nconst ResponseErrorMsg = {\n    default() { return { type: \"response_error\", requestId: 0, error: Error.default() }; },\n    1(r, msg) { msg.requestId = r.int32(); },\n    2(r, msg) { msg.error = r.message(Error); },\n};\nconst ResponseOkMsg = {\n    default() {\n        return {\n            type: \"response_ok\",\n            requestId: 0,\n            response: { type: \"none\" },\n        };\n    },\n    1(r, msg) { msg.requestId = r.int32(); },\n    2(r, msg) { msg.response = { type: \"open_stream\" }; },\n    3(r, msg) { msg.response = { type: \"close_stream\" }; },\n    4(r, msg) { msg.response = r.message(ExecuteResp); },\n    5(r, msg) { msg.response = r.message(BatchResp); },\n    6(r, msg) { msg.response = { type: \"open_cursor\" }; },\n    7(r, msg) { msg.response = { type: \"close_cursor\" }; },\n    8(r, msg) { msg.response = r.message(FetchCursorResp); },\n    9(r, msg) { msg.response = { type: \"sequence\" }; },\n    10(r, msg) { msg.response = r.message(DescribeResp); },\n    11(r, msg) { msg.response = { type: \"store_sql\" }; },\n    12(r, msg) { msg.response = { type: \"close_sql\" }; },\n    13(r, msg) { msg.response = r.message(GetAutocommitResp); },\n};\nconst ExecuteResp = {\n    default() { return { type: \"execute\", result: StmtResult.default() }; },\n    1(r, msg) { msg.result = r.message(StmtResult); },\n};\nconst BatchResp = {\n    default() { return { type: \"batch\", result: BatchResult.default() }; },\n    1(r, msg) { msg.result = r.message(BatchResult); },\n};\nconst FetchCursorResp = {\n    default() { return { type: \"fetch_cursor\", entries: [], done: false }; },\n    1(r, msg) { msg.entries.push(r.message(CursorEntry)); },\n    2(r, msg) { msg.done = r.bool(); },\n};\nconst DescribeResp = {\n    default() { return { type: \"describe\", result: DescribeResult.default() }; },\n    1(r, msg) { msg.result = r.message(DescribeResult); },\n};\nconst GetAutocommitResp = {\n    default() { return { type: \"get_autocommit\", isAutocommit: false }; },\n    1(r, msg) { msg.isAutocommit = r.bool(); },\n};\n","import { Client } from \"../client.js\";\nimport { readJsonObject, writeJsonObject, readProtobufMessage, writeProtobufMessage, } from \"../encoding/index.js\";\nimport { ClientError, ProtoError, ClosedError, WebSocketError, ProtocolVersionError, InternalError, } from \"../errors.js\";\nimport { IdAlloc } from \"../id_alloc.js\";\nimport { errorFromProto } from \"../result.js\";\nimport { Sql } from \"../sql.js\";\nimport { impossible } from \"../util.js\";\nimport { WsStream } from \"./stream.js\";\nimport { ClientMsg as json_ClientMsg } from \"./json_encode.js\";\nimport { ClientMsg as protobuf_ClientMsg } from \"./protobuf_encode.js\";\nimport { ServerMsg as json_ServerMsg } from \"./json_decode.js\";\nimport { ServerMsg as protobuf_ServerMsg } from \"./protobuf_decode.js\";\nexport const subprotocolsV2 = new Map([\n    [\"hrana2\", { version: 2, encoding: \"json\" }],\n    [\"hrana1\", { version: 1, encoding: \"json\" }],\n]);\nexport const subprotocolsV3 = new Map([\n    [\"hrana3-protobuf\", { version: 3, encoding: \"protobuf\" }],\n    [\"hrana3\", { version: 3, encoding: \"json\" }],\n    [\"hrana2\", { version: 2, encoding: \"json\" }],\n    [\"hrana1\", { version: 1, encoding: \"json\" }],\n]);\n/** A client for the Hrana protocol over a WebSocket. */\nexport class WsClient extends Client {\n    #socket;\n    // List of callbacks that we queue until the socket transitions from the CONNECTING to the OPEN state.\n    #openCallbacks;\n    // Have we already transitioned from CONNECTING to OPEN and fired the callbacks in #openCallbacks?\n    #opened;\n    // Stores the error that caused us to close the client (and the socket). If we are not closed, this is\n    // `undefined`.\n    #closed;\n    // Have we received a response to our \"hello\" from the server?\n    #recvdHello;\n    // Subprotocol negotiated with the server. It is only available after the socket transitions to the OPEN\n    // state.\n    #subprotocol;\n    // Has the `getVersion()` function been called? This is only used to validate that the API is used\n    // correctly.\n    #getVersionCalled;\n    // A map from request id to the responses that we expect to receive from the server.\n    #responseMap;\n    // An allocator of request ids.\n    #requestIdAlloc;\n    // An allocator of stream ids.\n    /** @private */\n    _streamIdAlloc;\n    // An allocator of cursor ids.\n    /** @private */\n    _cursorIdAlloc;\n    // An allocator of SQL text ids.\n    #sqlIdAlloc;\n    /** @private */\n    constructor(socket, jwt) {\n        super();\n        this.#socket = socket;\n        this.#openCallbacks = [];\n        this.#opened = false;\n        this.#closed = undefined;\n        this.#recvdHello = false;\n        this.#subprotocol = undefined;\n        this.#getVersionCalled = false;\n        this.#responseMap = new Map();\n        this.#requestIdAlloc = new IdAlloc();\n        this._streamIdAlloc = new IdAlloc();\n        this._cursorIdAlloc = new IdAlloc();\n        this.#sqlIdAlloc = new IdAlloc();\n        this.#socket.binaryType = \"arraybuffer\";\n        this.#socket.addEventListener(\"open\", () => this.#onSocketOpen());\n        this.#socket.addEventListener(\"close\", (event) => this.#onSocketClose(event));\n        this.#socket.addEventListener(\"error\", (event) => this.#onSocketError(event));\n        this.#socket.addEventListener(\"message\", (event) => this.#onSocketMessage(event));\n        this.#send({ type: \"hello\", jwt });\n    }\n    // Send (or enqueue to send) a message to the server.\n    #send(msg) {\n        if (this.#closed !== undefined) {\n            throw new InternalError(\"Trying to send a message on a closed client\");\n        }\n        if (this.#opened) {\n            this.#sendToSocket(msg);\n        }\n        else {\n            const openCallback = () => this.#sendToSocket(msg);\n            const errorCallback = () => undefined;\n            this.#openCallbacks.push({ openCallback, errorCallback });\n        }\n    }\n    // The socket transitioned from CONNECTING to OPEN\n    #onSocketOpen() {\n        const protocol = this.#socket.protocol;\n        if (protocol === undefined) {\n            this.#setClosed(new ClientError(\"The `WebSocket.protocol` property is undefined. This most likely means that the WebSocket \" +\n                \"implementation provided by the environment is broken. If you are using Miniflare 2, \" +\n                \"please update to Miniflare 3, which fixes this problem.\"));\n            return;\n        }\n        else if (protocol === \"\") {\n            this.#subprotocol = { version: 1, encoding: \"json\" };\n        }\n        else {\n            this.#subprotocol = subprotocolsV3.get(protocol);\n            if (this.#subprotocol === undefined) {\n                this.#setClosed(new ProtoError(`Unrecognized WebSocket subprotocol: ${JSON.stringify(protocol)}`));\n                return;\n            }\n        }\n        for (const callbacks of this.#openCallbacks) {\n            callbacks.openCallback();\n        }\n        this.#openCallbacks.length = 0;\n        this.#opened = true;\n    }\n    #sendToSocket(msg) {\n        const encoding = this.#subprotocol.encoding;\n        if (encoding === \"json\") {\n            const jsonMsg = writeJsonObject(msg, json_ClientMsg);\n            this.#socket.send(jsonMsg);\n        }\n        else if (encoding === \"protobuf\") {\n            const protobufMsg = writeProtobufMessage(msg, protobuf_ClientMsg);\n            this.#socket.send(protobufMsg);\n        }\n        else {\n            throw impossible(encoding, \"Impossible encoding\");\n        }\n    }\n    /** Get the protocol version negotiated with the server, possibly waiting until the socket is open. */\n    getVersion() {\n        return new Promise((versionCallback, errorCallback) => {\n            this.#getVersionCalled = true;\n            if (this.#closed !== undefined) {\n                errorCallback(this.#closed);\n            }\n            else if (!this.#opened) {\n                const openCallback = () => versionCallback(this.#subprotocol.version);\n                this.#openCallbacks.push({ openCallback, errorCallback });\n            }\n            else {\n                versionCallback(this.#subprotocol.version);\n            }\n        });\n    }\n    // Make sure that the negotiated version is at least `minVersion`.\n    /** @private */\n    _ensureVersion(minVersion, feature) {\n        if (this.#subprotocol === undefined || !this.#getVersionCalled) {\n            throw new ProtocolVersionError(`${feature} is supported only on protocol version ${minVersion} and higher, ` +\n                \"but the version supported by the WebSocket server is not yet known. \" +\n                \"Use Client.getVersion() to wait until the version is available.\");\n        }\n        else if (this.#subprotocol.version < minVersion) {\n            throw new ProtocolVersionError(`${feature} is supported on protocol version ${minVersion} and higher, ` +\n                `but the WebSocket server only supports version ${this.#subprotocol.version}`);\n        }\n    }\n    // Send a request to the server and invoke a callback when we get the response.\n    /** @private */\n    _sendRequest(request, callbacks) {\n        if (this.#closed !== undefined) {\n            callbacks.errorCallback(new ClosedError(\"Client is closed\", this.#closed));\n            return;\n        }\n        const requestId = this.#requestIdAlloc.alloc();\n        this.#responseMap.set(requestId, { ...callbacks, type: request.type });\n        this.#send({ type: \"request\", requestId, request });\n    }\n    // The socket encountered an error.\n    #onSocketError(event) {\n        const eventMessage = event.message;\n        const message = eventMessage ?? \"WebSocket was closed due to an error\";\n        this.#setClosed(new WebSocketError(message));\n    }\n    // The socket was closed.\n    #onSocketClose(event) {\n        let message = `WebSocket was closed with code ${event.code}`;\n        if (event.reason) {\n            message += `: ${event.reason}`;\n        }\n        this.#setClosed(new WebSocketError(message));\n    }\n    // Close the client with the given error.\n    #setClosed(error) {\n        if (this.#closed !== undefined) {\n            return;\n        }\n        this.#closed = error;\n        for (const callbacks of this.#openCallbacks) {\n            callbacks.errorCallback(error);\n        }\n        this.#openCallbacks.length = 0;\n        for (const [requestId, responseState] of this.#responseMap.entries()) {\n            responseState.errorCallback(error);\n            this.#requestIdAlloc.free(requestId);\n        }\n        this.#responseMap.clear();\n        this.#socket.close();\n    }\n    // We received a message from the socket.\n    #onSocketMessage(event) {\n        if (this.#closed !== undefined) {\n            return;\n        }\n        try {\n            let msg;\n            const encoding = this.#subprotocol.encoding;\n            if (encoding === \"json\") {\n                if (typeof event.data !== \"string\") {\n                    this.#socket.close(3003, \"Only text messages are accepted with JSON encoding\");\n                    this.#setClosed(new ProtoError(\"Received non-text message from server with JSON encoding\"));\n                    return;\n                }\n                msg = readJsonObject(JSON.parse(event.data), json_ServerMsg);\n            }\n            else if (encoding === \"protobuf\") {\n                if (!(event.data instanceof ArrayBuffer)) {\n                    this.#socket.close(3003, \"Only binary messages are accepted with Protobuf encoding\");\n                    this.#setClosed(new ProtoError(\"Received non-binary message from server with Protobuf encoding\"));\n                    return;\n                }\n                msg = readProtobufMessage(new Uint8Array(event.data), protobuf_ServerMsg);\n            }\n            else {\n                throw impossible(encoding, \"Impossible encoding\");\n            }\n            this.#handleMsg(msg);\n        }\n        catch (e) {\n            this.#socket.close(3007, \"Could not handle message\");\n            this.#setClosed(e);\n        }\n    }\n    // Handle a message from the server.\n    #handleMsg(msg) {\n        if (msg.type === \"none\") {\n            throw new ProtoError(\"Received an unrecognized ServerMsg\");\n        }\n        else if (msg.type === \"hello_ok\" || msg.type === \"hello_error\") {\n            if (this.#recvdHello) {\n                throw new ProtoError(\"Received a duplicated hello response\");\n            }\n            this.#recvdHello = true;\n            if (msg.type === \"hello_error\") {\n                throw errorFromProto(msg.error);\n            }\n            return;\n        }\n        else if (!this.#recvdHello) {\n            throw new ProtoError(\"Received a non-hello message before a hello response\");\n        }\n        if (msg.type === \"response_ok\") {\n            const requestId = msg.requestId;\n            const responseState = this.#responseMap.get(requestId);\n            this.#responseMap.delete(requestId);\n            if (responseState === undefined) {\n                throw new ProtoError(\"Received unexpected OK response\");\n            }\n            this.#requestIdAlloc.free(requestId);\n            try {\n                if (responseState.type !== msg.response.type) {\n                    console.dir({ responseState, msg });\n                    throw new ProtoError(\"Received unexpected type of response\");\n                }\n                responseState.responseCallback(msg.response);\n            }\n            catch (e) {\n                responseState.errorCallback(e);\n                throw e;\n            }\n        }\n        else if (msg.type === \"response_error\") {\n            const requestId = msg.requestId;\n            const responseState = this.#responseMap.get(requestId);\n            this.#responseMap.delete(requestId);\n            if (responseState === undefined) {\n                throw new ProtoError(\"Received unexpected error response\");\n            }\n            this.#requestIdAlloc.free(requestId);\n            responseState.errorCallback(errorFromProto(msg.error));\n        }\n        else {\n            throw impossible(msg, \"Impossible ServerMsg type\");\n        }\n    }\n    /** Open a {@link WsStream}, a stream for executing SQL statements. */\n    openStream() {\n        return WsStream.open(this);\n    }\n    /** Cache a SQL text on the server. This requires protocol version 2 or higher. */\n    storeSql(sql) {\n        this._ensureVersion(2, \"storeSql()\");\n        const sqlId = this.#sqlIdAlloc.alloc();\n        const sqlObj = new Sql(this, sqlId);\n        const responseCallback = () => undefined;\n        const errorCallback = (e) => sqlObj._setClosed(e);\n        const request = { type: \"store_sql\", sqlId, sql };\n        this._sendRequest(request, { responseCallback, errorCallback });\n        return sqlObj;\n    }\n    /** @private */\n    _closeSql(sqlId) {\n        if (this.#closed !== undefined) {\n            return;\n        }\n        const responseCallback = () => this.#sqlIdAlloc.free(sqlId);\n        const errorCallback = (e) => this.#setClosed(e);\n        const request = { type: \"close_sql\", sqlId };\n        this._sendRequest(request, { responseCallback, errorCallback });\n    }\n    /** Close the client and the WebSocket. */\n    close() {\n        this.#setClosed(new ClientError(\"Client was manually closed\"));\n    }\n    /** True if the client is closed. */\n    get closed() {\n        return this.#closed !== undefined;\n    }\n}\n","const _Request = Request;\nconst _Headers = Headers;\n\nconst _fetch = fetch;\n\nexport { _fetch as fetch, _Request as Request, _Headers as Headers};\n","// queueMicrotask() ponyfill\n// https://github.com/libsql/libsql-client-ts/issues/47\nlet _queueMicrotask;\nif (typeof queueMicrotask !== \"undefined\") {\n    _queueMicrotask = queueMicrotask;\n}\nelse {\n    const resolved = Promise.resolve();\n    _queueMicrotask = (callback) => {\n        resolved.then(callback);\n    };\n}\nexport { _queueMicrotask as queueMicrotask };\n","export class ByteQueue {\n    #array;\n    #shiftPos;\n    #pushPos;\n    constructor(initialCap) {\n        this.#array = new Uint8Array(new ArrayBuffer(initialCap));\n        this.#shiftPos = 0;\n        this.#pushPos = 0;\n    }\n    get length() {\n        return this.#pushPos - this.#shiftPos;\n    }\n    data() {\n        return this.#array.slice(this.#shiftPos, this.#pushPos);\n    }\n    push(chunk) {\n        this.#ensurePush(chunk.byteLength);\n        this.#array.set(chunk, this.#pushPos);\n        this.#pushPos += chunk.byteLength;\n    }\n    #ensurePush(pushLength) {\n        if (this.#pushPos + pushLength <= this.#array.byteLength) {\n            return;\n        }\n        const filledLength = this.#pushPos - this.#shiftPos;\n        if (filledLength + pushLength <= this.#array.byteLength &&\n            2 * this.#pushPos >= this.#array.byteLength) {\n            this.#array.copyWithin(0, this.#shiftPos, this.#pushPos);\n        }\n        else {\n            let newCap = this.#array.byteLength;\n            do {\n                newCap *= 2;\n            } while (filledLength + pushLength > newCap);\n            const newArray = new Uint8Array(new ArrayBuffer(newCap));\n            newArray.set(this.#array.slice(this.#shiftPos, this.#pushPos), 0);\n            this.#array = newArray;\n        }\n        this.#pushPos = filledLength;\n        this.#shiftPos = 0;\n    }\n    shift(length) {\n        this.#shiftPos += length;\n    }\n}\n","import { ProtoError } from \"../errors.js\";\nimport * as d from \"../encoding/json/decode.js\";\nimport { Error, StmtResult, BatchResult, DescribeResult } from \"../shared/json_decode.js\";\nexport function PipelineRespBody(obj) {\n    const baton = d.stringOpt(obj[\"baton\"]);\n    const baseUrl = d.stringOpt(obj[\"base_url\"]);\n    const results = d.arrayObjectsMap(obj[\"results\"], StreamResult);\n    return { baton, baseUrl, results };\n}\nfunction StreamResult(obj) {\n    const type = d.string(obj[\"type\"]);\n    if (type === \"ok\") {\n        const response = StreamResponse(d.object(obj[\"response\"]));\n        return { type: \"ok\", response };\n    }\n    else if (type === \"error\") {\n        const error = Error(d.object(obj[\"error\"]));\n        return { type: \"error\", error };\n    }\n    else {\n        throw new ProtoError(\"Unexpected type of StreamResult\");\n    }\n}\nfunction StreamResponse(obj) {\n    const type = d.string(obj[\"type\"]);\n    if (type === \"close\") {\n        return { type: \"close\" };\n    }\n    else if (type === \"execute\") {\n        const result = StmtResult(d.object(obj[\"result\"]));\n        return { type: \"execute\", result };\n    }\n    else if (type === \"batch\") {\n        const result = BatchResult(d.object(obj[\"result\"]));\n        return { type: \"batch\", result };\n    }\n    else if (type === \"sequence\") {\n        return { type: \"sequence\" };\n    }\n    else if (type === \"describe\") {\n        const result = DescribeResult(d.object(obj[\"result\"]));\n        return { type: \"describe\", result };\n    }\n    else if (type === \"store_sql\") {\n        return { type: \"store_sql\" };\n    }\n    else if (type === \"close_sql\") {\n        return { type: \"close_sql\" };\n    }\n    else if (type === \"get_autocommit\") {\n        const isAutocommit = d.boolean(obj[\"is_autocommit\"]);\n        return { type: \"get_autocommit\", isAutocommit };\n    }\n    else {\n        throw new ProtoError(\"Unexpected type of StreamResponse\");\n    }\n}\nexport function CursorRespBody(obj) {\n    const baton = d.stringOpt(obj[\"baton\"]);\n    const baseUrl = d.stringOpt(obj[\"base_url\"]);\n    return { baton, baseUrl };\n}\n","import { Error, StmtResult, BatchResult, DescribeResult } from \"../shared/protobuf_decode.js\";\nexport const PipelineRespBody = {\n    default() { return { baton: undefined, baseUrl: undefined, results: [] }; },\n    1(r, msg) { msg.baton = r.string(); },\n    2(r, msg) { msg.baseUrl = r.string(); },\n    3(r, msg) { msg.results.push(r.message(StreamResult)); },\n};\nconst StreamResult = {\n    default() { return { type: \"none\" }; },\n    1(r) { return { type: \"ok\", response: r.message(StreamResponse) }; },\n    2(r) { return { type: \"error\", error: r.message(Error) }; },\n};\nconst StreamResponse = {\n    default() { return { type: \"none\" }; },\n    1(r) { return { type: \"close\" }; },\n    2(r) { return r.message(ExecuteStreamResp); },\n    3(r) { return r.message(BatchStreamResp); },\n    4(r) { return { type: \"sequence\" }; },\n    5(r) { return r.message(DescribeStreamResp); },\n    6(r) { return { type: \"store_sql\" }; },\n    7(r) { return { type: \"close_sql\" }; },\n    8(r) { return r.message(GetAutocommitStreamResp); },\n};\nconst ExecuteStreamResp = {\n    default() { return { type: \"execute\", result: StmtResult.default() }; },\n    1(r, msg) { msg.result = r.message(StmtResult); },\n};\nconst BatchStreamResp = {\n    default() { return { type: \"batch\", result: BatchResult.default() }; },\n    1(r, msg) { msg.result = r.message(BatchResult); },\n};\nconst DescribeStreamResp = {\n    default() { return { type: \"describe\", result: DescribeResult.default() }; },\n    1(r, msg) { msg.result = r.message(DescribeResult); },\n};\nconst GetAutocommitStreamResp = {\n    default() { return { type: \"get_autocommit\", isAutocommit: false }; },\n    1(r, msg) { msg.isAutocommit = r.bool(); },\n};\nexport const CursorRespBody = {\n    default() { return { baton: undefined, baseUrl: undefined }; },\n    1(r, msg) { msg.baton = r.string(); },\n    2(r, msg) { msg.baseUrl = r.string(); },\n};\n","import { ByteQueue } from \"../byte_queue.js\";\nimport { Cursor } from \"../cursor.js\";\nimport * as jsond from \"../encoding/json/decode.js\";\nimport * as protobufd from \"../encoding/protobuf/decode.js\";\nimport { ClientError, ClosedError, ProtoError, InternalError } from \"../errors.js\";\nimport { impossible } from \"../util.js\";\nimport { CursorRespBody as json_CursorRespBody } from \"./json_decode.js\";\nimport { CursorRespBody as protobuf_CursorRespBody } from \"./protobuf_decode.js\";\nimport { CursorEntry as json_CursorEntry } from \"../shared/json_decode.js\";\nimport { CursorEntry as protobuf_CursorEntry } from \"../shared/protobuf_decode.js\";\nexport class HttpCursor extends Cursor {\n    #stream;\n    #encoding;\n    #reader;\n    #queue;\n    #closed;\n    #done;\n    /** @private */\n    constructor(stream, encoding) {\n        super();\n        this.#stream = stream;\n        this.#encoding = encoding;\n        this.#reader = undefined;\n        this.#queue = new ByteQueue(16 * 1024);\n        this.#closed = undefined;\n        this.#done = false;\n    }\n    async open(response) {\n        if (response.body === null) {\n            throw new ProtoError(\"No response body for cursor request\");\n        }\n        this.#reader = response.body.getReader();\n        const respBody = await this.#nextItem(json_CursorRespBody, protobuf_CursorRespBody);\n        if (respBody === undefined) {\n            throw new ProtoError(\"Empty response to cursor request\");\n        }\n        return respBody;\n    }\n    /** Fetch the next entry from the cursor. */\n    next() {\n        return this.#nextItem(json_CursorEntry, protobuf_CursorEntry);\n    }\n    /** Close the cursor. */\n    close() {\n        this._setClosed(new ClientError(\"Cursor was manually closed\"));\n    }\n    /** @private */\n    _setClosed(error) {\n        if (this.#closed !== undefined) {\n            return;\n        }\n        this.#closed = error;\n        this.#stream._cursorClosed(this);\n        if (this.#reader !== undefined) {\n            this.#reader.cancel();\n        }\n    }\n    /** True if the cursor is closed. */\n    get closed() {\n        return this.#closed !== undefined;\n    }\n    async #nextItem(jsonFun, protobufDef) {\n        for (;;) {\n            if (this.#done) {\n                return undefined;\n            }\n            else if (this.#closed !== undefined) {\n                throw new ClosedError(\"Cursor is closed\", this.#closed);\n            }\n            if (this.#encoding === \"json\") {\n                const jsonData = this.#parseItemJson();\n                if (jsonData !== undefined) {\n                    const jsonText = new TextDecoder().decode(jsonData);\n                    const jsonValue = JSON.parse(jsonText);\n                    return jsond.readJsonObject(jsonValue, jsonFun);\n                }\n            }\n            else if (this.#encoding === \"protobuf\") {\n                const protobufData = this.#parseItemProtobuf();\n                if (protobufData !== undefined) {\n                    return protobufd.readProtobufMessage(protobufData, protobufDef);\n                }\n            }\n            else {\n                throw impossible(this.#encoding, \"Impossible encoding\");\n            }\n            if (this.#reader === undefined) {\n                throw new InternalError(\"Attempted to read from HTTP cursor before it was opened\");\n            }\n            const { value, done } = await this.#reader.read();\n            if (done && this.#queue.length === 0) {\n                this.#done = true;\n            }\n            else if (done) {\n                throw new ProtoError(\"Unexpected end of cursor stream\");\n            }\n            else {\n                this.#queue.push(value);\n            }\n        }\n    }\n    #parseItemJson() {\n        const data = this.#queue.data();\n        const newlineByte = 10;\n        const newlinePos = data.indexOf(newlineByte);\n        if (newlinePos < 0) {\n            return undefined;\n        }\n        const jsonData = data.slice(0, newlinePos);\n        this.#queue.shift(newlinePos + 1);\n        return jsonData;\n    }\n    #parseItemProtobuf() {\n        const data = this.#queue.data();\n        let varintValue = 0;\n        let varintLength = 0;\n        for (;;) {\n            if (varintLength >= data.byteLength) {\n                return undefined;\n            }\n            const byte = data[varintLength];\n            varintValue |= (byte & 0x7f) << (7 * varintLength);\n            varintLength += 1;\n            if (!(byte & 0x80)) {\n                break;\n            }\n        }\n        if (data.byteLength < varintLength + varintValue) {\n            return undefined;\n        }\n        const protobufData = data.slice(varintLength, varintLength + varintValue);\n        this.#queue.shift(varintLength + varintValue);\n        return protobufData;\n    }\n}\n","import { Stmt, Batch } from \"../shared/json_encode.js\";\nimport { impossible } from \"../util.js\";\nexport function PipelineReqBody(w, msg) {\n    if (msg.baton !== undefined) {\n        w.string(\"baton\", msg.baton);\n    }\n    w.arrayObjects(\"requests\", msg.requests, StreamRequest);\n}\nfunction StreamRequest(w, msg) {\n    w.stringRaw(\"type\", msg.type);\n    if (msg.type === \"close\") {\n        // do nothing\n    }\n    else if (msg.type === \"execute\") {\n        w.object(\"stmt\", msg.stmt, Stmt);\n    }\n    else if (msg.type === \"batch\") {\n        w.object(\"batch\", msg.batch, Batch);\n    }\n    else if (msg.type === \"sequence\") {\n        if (msg.sql !== undefined) {\n            w.string(\"sql\", msg.sql);\n        }\n        if (msg.sqlId !== undefined) {\n            w.number(\"sql_id\", msg.sqlId);\n        }\n    }\n    else if (msg.type === \"describe\") {\n        if (msg.sql !== undefined) {\n            w.string(\"sql\", msg.sql);\n        }\n        if (msg.sqlId !== undefined) {\n            w.number(\"sql_id\", msg.sqlId);\n        }\n    }\n    else if (msg.type === \"store_sql\") {\n        w.number(\"sql_id\", msg.sqlId);\n        w.string(\"sql\", msg.sql);\n    }\n    else if (msg.type === \"close_sql\") {\n        w.number(\"sql_id\", msg.sqlId);\n    }\n    else if (msg.type === \"get_autocommit\") {\n        // do nothing\n    }\n    else {\n        throw impossible(msg, \"Impossible type of StreamRequest\");\n    }\n}\nexport function CursorReqBody(w, msg) {\n    if (msg.baton !== undefined) {\n        w.string(\"baton\", msg.baton);\n    }\n    w.object(\"batch\", msg.batch, Batch);\n}\n","import { Stmt, Batch } from \"../shared/protobuf_encode.js\";\nimport { impossible } from \"../util.js\";\nexport function PipelineReqBody(w, msg) {\n    if (msg.baton !== undefined) {\n        w.string(1, msg.baton);\n    }\n    for (const req of msg.requests) {\n        w.message(2, req, StreamRequest);\n    }\n}\nfunction StreamRequest(w, msg) {\n    if (msg.type === \"close\") {\n        w.message(1, msg, CloseStreamReq);\n    }\n    else if (msg.type === \"execute\") {\n        w.message(2, msg, ExecuteStreamReq);\n    }\n    else if (msg.type === \"batch\") {\n        w.message(3, msg, BatchStreamReq);\n    }\n    else if (msg.type === \"sequence\") {\n        w.message(4, msg, SequenceStreamReq);\n    }\n    else if (msg.type === \"describe\") {\n        w.message(5, msg, DescribeStreamReq);\n    }\n    else if (msg.type === \"store_sql\") {\n        w.message(6, msg, StoreSqlStreamReq);\n    }\n    else if (msg.type === \"close_sql\") {\n        w.message(7, msg, CloseSqlStreamReq);\n    }\n    else if (msg.type === \"get_autocommit\") {\n        w.message(8, msg, GetAutocommitStreamReq);\n    }\n    else {\n        throw impossible(msg, \"Impossible type of StreamRequest\");\n    }\n}\nfunction CloseStreamReq(_w, _msg) {\n}\nfunction ExecuteStreamReq(w, msg) {\n    w.message(1, msg.stmt, Stmt);\n}\nfunction BatchStreamReq(w, msg) {\n    w.message(1, msg.batch, Batch);\n}\nfunction SequenceStreamReq(w, msg) {\n    if (msg.sql !== undefined) {\n        w.string(1, msg.sql);\n    }\n    if (msg.sqlId !== undefined) {\n        w.int32(2, msg.sqlId);\n    }\n}\nfunction DescribeStreamReq(w, msg) {\n    if (msg.sql !== undefined) {\n        w.string(1, msg.sql);\n    }\n    if (msg.sqlId !== undefined) {\n        w.int32(2, msg.sqlId);\n    }\n}\nfunction StoreSqlStreamReq(w, msg) {\n    w.int32(1, msg.sqlId);\n    w.string(2, msg.sql);\n}\nfunction CloseSqlStreamReq(w, msg) {\n    w.int32(1, msg.sqlId);\n}\nfunction GetAutocommitStreamReq(_w, _msg) {\n}\nexport function CursorReqBody(w, msg) {\n    if (msg.baton !== undefined) {\n        w.string(1, msg.baton);\n    }\n    w.message(2, msg.batch, Batch);\n}\n","import { Request, Headers } from \"@libsql/isomorphic-fetch\";\nimport { ClientError, HttpServerError, ProtocolVersionError, ProtoError, ClosedError, InternalError, } from \"../errors.js\";\nimport { readJsonObject, writeJsonObject, readProtobufMessage, writeProtobufMessage, } from \"../encoding/index.js\";\nimport { IdAlloc } from \"../id_alloc.js\";\nimport { Queue } from \"../queue.js\";\nimport { queueMicrotask } from \"../queue_microtask.js\";\nimport { errorFromProto } from \"../result.js\";\nimport { Sql } from \"../sql.js\";\nimport { Stream } from \"../stream.js\";\nimport { impossible } from \"../util.js\";\nimport { HttpCursor } from \"./cursor.js\";\nimport { PipelineReqBody as json_PipelineReqBody } from \"./json_encode.js\";\nimport { PipelineReqBody as protobuf_PipelineReqBody } from \"./protobuf_encode.js\";\nimport { CursorReqBody as json_CursorReqBody } from \"./json_encode.js\";\nimport { CursorReqBody as protobuf_CursorReqBody } from \"./protobuf_encode.js\";\nimport { PipelineRespBody as json_PipelineRespBody } from \"./json_decode.js\";\nimport { PipelineRespBody as protobuf_PipelineRespBody } from \"./protobuf_decode.js\";\nexport class HttpStream extends Stream {\n    #client;\n    #baseUrl;\n    #jwt;\n    #fetch;\n    #baton;\n    #queue;\n    #flushing;\n    #cursor;\n    #closing;\n    #closeQueued;\n    #closed;\n    #sqlIdAlloc;\n    /** @private */\n    constructor(client, baseUrl, jwt, customFetch) {\n        super(client.intMode);\n        this.#client = client;\n        this.#baseUrl = baseUrl.toString();\n        this.#jwt = jwt;\n        this.#fetch = customFetch;\n        this.#baton = undefined;\n        this.#queue = new Queue();\n        this.#flushing = false;\n        this.#closing = false;\n        this.#closeQueued = false;\n        this.#closed = undefined;\n        this.#sqlIdAlloc = new IdAlloc();\n    }\n    /** Get the {@link HttpClient} object that this stream belongs to. */\n    client() {\n        return this.#client;\n    }\n    /** @private */\n    _sqlOwner() {\n        return this;\n    }\n    /** Cache a SQL text on the server. */\n    storeSql(sql) {\n        const sqlId = this.#sqlIdAlloc.alloc();\n        this.#sendStreamRequest({ type: \"store_sql\", sqlId, sql }).then(() => undefined, (error) => this._setClosed(error));\n        return new Sql(this, sqlId);\n    }\n    /** @private */\n    _closeSql(sqlId) {\n        if (this.#closed !== undefined) {\n            return;\n        }\n        this.#sendStreamRequest({ type: \"close_sql\", sqlId }).then(() => this.#sqlIdAlloc.free(sqlId), (error) => this._setClosed(error));\n    }\n    /** @private */\n    _execute(stmt) {\n        return this.#sendStreamRequest({ type: \"execute\", stmt }).then((response) => {\n            return response.result;\n        });\n    }\n    /** @private */\n    _batch(batch) {\n        return this.#sendStreamRequest({ type: \"batch\", batch }).then((response) => {\n            return response.result;\n        });\n    }\n    /** @private */\n    _describe(protoSql) {\n        return this.#sendStreamRequest({\n            type: \"describe\",\n            sql: protoSql.sql,\n            sqlId: protoSql.sqlId\n        }).then((response) => {\n            return response.result;\n        });\n    }\n    /** @private */\n    _sequence(protoSql) {\n        return this.#sendStreamRequest({\n            type: \"sequence\",\n            sql: protoSql.sql,\n            sqlId: protoSql.sqlId,\n        }).then((_response) => {\n            return undefined;\n        });\n    }\n    /** Check whether the SQL connection underlying this stream is in autocommit state (i.e., outside of an\n     * explicit transaction). This requires protocol version 3 or higher.\n     */\n    getAutocommit() {\n        this.#client._ensureVersion(3, \"getAutocommit()\");\n        return this.#sendStreamRequest({\n            type: \"get_autocommit\",\n        }).then((response) => {\n            return response.isAutocommit;\n        });\n    }\n    #sendStreamRequest(request) {\n        return new Promise((responseCallback, errorCallback) => {\n            this.#pushToQueue({ type: \"pipeline\", request, responseCallback, errorCallback });\n        });\n    }\n    /** @private */\n    _openCursor(batch) {\n        return new Promise((cursorCallback, errorCallback) => {\n            this.#pushToQueue({ type: \"cursor\", batch, cursorCallback, errorCallback });\n        });\n    }\n    /** @private */\n    _cursorClosed(cursor) {\n        if (cursor !== this.#cursor) {\n            throw new InternalError(\"Cursor was closed, but it was not associated with the stream\");\n        }\n        this.#cursor = undefined;\n        queueMicrotask(() => this.#flushQueue());\n    }\n    /** Immediately close the stream. */\n    close() {\n        this._setClosed(new ClientError(\"Stream was manually closed\"));\n    }\n    /** Gracefully close the stream. */\n    closeGracefully() {\n        this.#closing = true;\n        queueMicrotask(() => this.#flushQueue());\n    }\n    /** True if the stream is closed. */\n    get closed() {\n        return this.#closed !== undefined || this.#closing;\n    }\n    /** @private */\n    _setClosed(error) {\n        if (this.#closed !== undefined) {\n            return;\n        }\n        this.#closed = error;\n        if (this.#cursor !== undefined) {\n            this.#cursor._setClosed(error);\n        }\n        this.#client._streamClosed(this);\n        for (;;) {\n            const entry = this.#queue.shift();\n            if (entry !== undefined) {\n                entry.errorCallback(error);\n            }\n            else {\n                break;\n            }\n        }\n        if ((this.#baton !== undefined || this.#flushing) && !this.#closeQueued) {\n            this.#queue.push({\n                type: \"pipeline\",\n                request: { type: \"close\" },\n                responseCallback: () => undefined,\n                errorCallback: () => undefined,\n            });\n            this.#closeQueued = true;\n            queueMicrotask(() => this.#flushQueue());\n        }\n    }\n    #pushToQueue(entry) {\n        if (this.#closed !== undefined) {\n            throw new ClosedError(\"Stream is closed\", this.#closed);\n        }\n        else if (this.#closing) {\n            throw new ClosedError(\"Stream is closing\", undefined);\n        }\n        else {\n            this.#queue.push(entry);\n            queueMicrotask(() => this.#flushQueue());\n        }\n    }\n    #flushQueue() {\n        if (this.#flushing || this.#cursor !== undefined) {\n            return;\n        }\n        if (this.#closing && this.#queue.length === 0) {\n            this._setClosed(new ClientError(\"Stream was gracefully closed\"));\n            return;\n        }\n        const endpoint = this.#client._endpoint;\n        if (endpoint === undefined) {\n            this.#client._endpointPromise.then(() => this.#flushQueue(), (error) => this._setClosed(error));\n            return;\n        }\n        const firstEntry = this.#queue.shift();\n        if (firstEntry === undefined) {\n            return;\n        }\n        else if (firstEntry.type === \"pipeline\") {\n            const pipeline = [firstEntry];\n            for (;;) {\n                const entry = this.#queue.first();\n                if (entry !== undefined && entry.type === \"pipeline\") {\n                    pipeline.push(entry);\n                    this.#queue.shift();\n                }\n                else if (entry === undefined && this.#closing && !this.#closeQueued) {\n                    pipeline.push({\n                        type: \"pipeline\",\n                        request: { type: \"close\" },\n                        responseCallback: () => undefined,\n                        errorCallback: () => undefined,\n                    });\n                    this.#closeQueued = true;\n                    break;\n                }\n                else {\n                    break;\n                }\n            }\n            this.#flushPipeline(endpoint, pipeline);\n        }\n        else if (firstEntry.type === \"cursor\") {\n            this.#flushCursor(endpoint, firstEntry);\n        }\n        else {\n            throw impossible(firstEntry, \"Impossible type of QueueEntry\");\n        }\n    }\n    #flushPipeline(endpoint, pipeline) {\n        this.#flush(() => this.#createPipelineRequest(pipeline, endpoint), (resp) => decodePipelineResponse(resp, endpoint.encoding), (respBody) => respBody.baton, (respBody) => respBody.baseUrl, (respBody) => handlePipelineResponse(pipeline, respBody), (error) => pipeline.forEach((entry) => entry.errorCallback(error)));\n    }\n    #flushCursor(endpoint, entry) {\n        const cursor = new HttpCursor(this, endpoint.encoding);\n        this.#cursor = cursor;\n        this.#flush(() => this.#createCursorRequest(entry, endpoint), (resp) => cursor.open(resp), (respBody) => respBody.baton, (respBody) => respBody.baseUrl, (_respBody) => entry.cursorCallback(cursor), (error) => entry.errorCallback(error));\n    }\n    #flush(createRequest, decodeResponse, getBaton, getBaseUrl, handleResponse, handleError) {\n        let promise;\n        try {\n            const request = createRequest();\n            const fetch = this.#fetch;\n            promise = fetch(request);\n        }\n        catch (error) {\n            promise = Promise.reject(error);\n        }\n        this.#flushing = true;\n        promise.then((resp) => {\n            if (!resp.ok) {\n                return errorFromResponse(resp).then((error) => {\n                    throw error;\n                });\n            }\n            return decodeResponse(resp);\n        }).then((r) => {\n            this.#baton = getBaton(r);\n            this.#baseUrl = getBaseUrl(r) ?? this.#baseUrl;\n            handleResponse(r);\n        }).catch((error) => {\n            this._setClosed(error);\n            handleError(error);\n        }).finally(() => {\n            this.#flushing = false;\n            this.#flushQueue();\n        });\n    }\n    #createPipelineRequest(pipeline, endpoint) {\n        return this.#createRequest(new URL(endpoint.pipelinePath, this.#baseUrl), {\n            baton: this.#baton,\n            requests: pipeline.map((entry) => entry.request),\n        }, endpoint.encoding, json_PipelineReqBody, protobuf_PipelineReqBody);\n    }\n    #createCursorRequest(entry, endpoint) {\n        if (endpoint.cursorPath === undefined) {\n            throw new ProtocolVersionError(\"Cursors are supported only on protocol version 3 and higher, \" +\n                `but the HTTP server only supports version ${endpoint.version}.`);\n        }\n        return this.#createRequest(new URL(endpoint.cursorPath, this.#baseUrl), {\n            baton: this.#baton,\n            batch: entry.batch,\n        }, endpoint.encoding, json_CursorReqBody, protobuf_CursorReqBody);\n    }\n    #createRequest(url, reqBody, encoding, jsonFun, protobufFun) {\n        let bodyData;\n        let contentType;\n        if (encoding === \"json\") {\n            bodyData = writeJsonObject(reqBody, jsonFun);\n            contentType = \"application/json\";\n        }\n        else if (encoding === \"protobuf\") {\n            bodyData = writeProtobufMessage(reqBody, protobufFun);\n            contentType = \"application/x-protobuf\";\n        }\n        else {\n            throw impossible(encoding, \"Impossible encoding\");\n        }\n        const headers = new Headers();\n        headers.set(\"content-type\", contentType);\n        if (this.#jwt !== undefined) {\n            headers.set(\"authorization\", `Bearer ${this.#jwt}`);\n        }\n        return new Request(url.toString(), { method: \"POST\", headers, body: bodyData });\n    }\n}\nfunction handlePipelineResponse(pipeline, respBody) {\n    if (respBody.results.length !== pipeline.length) {\n        throw new ProtoError(\"Server returned unexpected number of pipeline results\");\n    }\n    for (let i = 0; i < pipeline.length; ++i) {\n        const result = respBody.results[i];\n        const entry = pipeline[i];\n        if (result.type === \"ok\") {\n            if (result.response.type !== entry.request.type) {\n                throw new ProtoError(\"Received unexpected type of response\");\n            }\n            entry.responseCallback(result.response);\n        }\n        else if (result.type === \"error\") {\n            entry.errorCallback(errorFromProto(result.error));\n        }\n        else if (result.type === \"none\") {\n            throw new ProtoError(\"Received unrecognized type of StreamResult\");\n        }\n        else {\n            throw impossible(result, \"Received impossible type of StreamResult\");\n        }\n    }\n}\nasync function decodePipelineResponse(resp, encoding) {\n    if (encoding === \"json\") {\n        const respJson = await resp.json();\n        return readJsonObject(respJson, json_PipelineRespBody);\n    }\n    if (encoding === \"protobuf\") {\n        const respData = await resp.arrayBuffer();\n        return readProtobufMessage(new Uint8Array(respData), protobuf_PipelineRespBody);\n    }\n    await resp.body?.cancel();\n    throw impossible(encoding, \"Impossible encoding\");\n}\nasync function errorFromResponse(resp) {\n    const respType = resp.headers.get(\"content-type\") ?? \"text/plain\";\n    let message = `Server returned HTTP status ${resp.status}`;\n    if (respType === \"application/json\") {\n        const respBody = await resp.json();\n        if (\"message\" in respBody) {\n            return errorFromProto(respBody);\n        }\n        return new HttpServerError(message, resp.status);\n    }\n    if (respType === \"text/plain\") {\n        const respBody = (await resp.text()).trim();\n        if (respBody !== \"\") {\n            message += `: ${respBody}`;\n        }\n        return new HttpServerError(message, resp.status);\n    }\n    await resp.body?.cancel();\n    return new HttpServerError(message, resp.status);\n}\n","import { fetch, Request } from \"@libsql/isomorphic-fetch\";\nimport { Client } from \"../client.js\";\nimport { ClientError, ClosedError, ProtocolVersionError } from \"../errors.js\";\nimport { HttpStream } from \"./stream.js\";\nexport const checkEndpoints = [\n    {\n        versionPath: \"v3-protobuf\",\n        pipelinePath: \"v3-protobuf/pipeline\",\n        cursorPath: \"v3-protobuf/cursor\",\n        version: 3,\n        encoding: \"protobuf\",\n    },\n    /*\n    {\n        versionPath: \"v3\",\n        pipelinePath: \"v3/pipeline\",\n        cursorPath: \"v3/cursor\",\n        version: 3,\n        encoding: \"json\",\n    },\n    */\n];\nconst fallbackEndpoint = {\n    versionPath: \"v2\",\n    pipelinePath: \"v2/pipeline\",\n    cursorPath: undefined,\n    version: 2,\n    encoding: \"json\",\n};\n/** A client for the Hrana protocol over HTTP. */\nexport class HttpClient extends Client {\n    #url;\n    #jwt;\n    #fetch;\n    #closed;\n    #streams;\n    /** @private */\n    _endpointPromise;\n    /** @private */\n    _endpoint;\n    /** @private */\n    constructor(url, jwt, customFetch, protocolVersion = 2) {\n        super();\n        this.#url = url;\n        this.#jwt = jwt;\n        this.#fetch = customFetch ?? fetch;\n        this.#closed = undefined;\n        this.#streams = new Set();\n        if (protocolVersion == 3) {\n            this._endpointPromise = findEndpoint(this.#fetch, this.#url);\n            this._endpointPromise.then((endpoint) => this._endpoint = endpoint, (error) => this.#setClosed(error));\n        }\n        else {\n            this._endpointPromise = Promise.resolve(fallbackEndpoint);\n            this._endpointPromise.then((endpoint) => this._endpoint = endpoint, (error) => this.#setClosed(error));\n        }\n    }\n    /** Get the protocol version supported by the server. */\n    async getVersion() {\n        if (this._endpoint !== undefined) {\n            return this._endpoint.version;\n        }\n        return (await this._endpointPromise).version;\n    }\n    // Make sure that the negotiated version is at least `minVersion`.\n    /** @private */\n    _ensureVersion(minVersion, feature) {\n        if (minVersion <= fallbackEndpoint.version) {\n            return;\n        }\n        else if (this._endpoint === undefined) {\n            throw new ProtocolVersionError(`${feature} is supported only on protocol version ${minVersion} and higher, ` +\n                \"but the version supported by the HTTP server is not yet known. \" +\n                \"Use Client.getVersion() to wait until the version is available.\");\n        }\n        else if (this._endpoint.version < minVersion) {\n            throw new ProtocolVersionError(`${feature} is supported only on protocol version ${minVersion} and higher, ` +\n                `but the HTTP server only supports version ${this._endpoint.version}.`);\n        }\n    }\n    /** Open a {@link HttpStream}, a stream for executing SQL statements. */\n    openStream() {\n        if (this.#closed !== undefined) {\n            throw new ClosedError(\"Client is closed\", this.#closed);\n        }\n        const stream = new HttpStream(this, this.#url, this.#jwt, this.#fetch);\n        this.#streams.add(stream);\n        return stream;\n    }\n    /** @private */\n    _streamClosed(stream) {\n        this.#streams.delete(stream);\n    }\n    /** Close the client and all its streams. */\n    close() {\n        this.#setClosed(new ClientError(\"Client was manually closed\"));\n    }\n    /** True if the client is closed. */\n    get closed() {\n        return this.#closed !== undefined;\n    }\n    #setClosed(error) {\n        if (this.#closed !== undefined) {\n            return;\n        }\n        this.#closed = error;\n        for (const stream of Array.from(this.#streams)) {\n            stream._setClosed(new ClosedError(\"Client was closed\", error));\n        }\n    }\n}\nasync function findEndpoint(customFetch, clientUrl) {\n    const fetch = customFetch;\n    for (const endpoint of checkEndpoints) {\n        const url = new URL(endpoint.versionPath, clientUrl);\n        const request = new Request(url.toString(), { method: \"GET\" });\n        const response = await fetch(request);\n        await response.arrayBuffer();\n        if (response.ok) {\n            return endpoint;\n        }\n    }\n    return fallbackEndpoint;\n}\n","import { WebSocket } from \"@libsql/isomorphic-ws\";\nimport { subprotocolsV2, subprotocolsV3 } from \"./ws/client.js\";\nimport { WebSocketUnsupportedError } from \"./errors.js\";\nimport { HttpClient } from \"./http/client.js\";\nimport { WsClient } from \"./ws/client.js\";\nexport { WebSocket } from \"@libsql/isomorphic-ws\";\nexport { fetch, Request, Headers } from \"@libsql/isomorphic-fetch\";\nexport { Client } from \"./client.js\";\nexport * from \"./errors.js\";\nexport { Batch, BatchStep, BatchCond } from \"./batch.js\";\nexport { parseLibsqlUrl } from \"./libsql_url.js\";\nexport { Sql } from \"./sql.js\";\nexport { Stmt } from \"./stmt.js\";\nexport { Stream } from \"./stream.js\";\nexport { HttpClient } from \"./http/client.js\";\nexport { HttpStream } from \"./http/stream.js\";\nexport { WsClient } from \"./ws/client.js\";\nexport { WsStream } from \"./ws/stream.js\";\n/** Open a Hrana client over WebSocket connected to the given `url`. */\nexport function openWs(url, jwt, protocolVersion = 2) {\n    if (typeof WebSocket === \"undefined\") {\n        throw new WebSocketUnsupportedError(\"WebSockets are not supported in this environment\");\n    }\n    var subprotocols = undefined;\n    if (protocolVersion == 3) {\n        subprotocols = Array.from(subprotocolsV3.keys());\n    }\n    else {\n        subprotocols = Array.from(subprotocolsV2.keys());\n    }\n    const socket = new WebSocket(url, subprotocols);\n    return new WsClient(socket, jwt);\n}\n/** Open a Hrana client over HTTP connected to the given `url`.\n *\n * If the `customFetch` argument is passed and not `undefined`, it is used in place of the `fetch` function\n * from `@libsql/isomorphic-fetch`. This function is always called with a `Request` object from\n * `@libsql/isomorphic-fetch`.\n */\nexport function openHttp(url, jwt, customFetch, protocolVersion = 2) {\n    return new HttpClient(url instanceof URL ? url : new URL(url), jwt, customFetch, protocolVersion);\n}\n","import * as hrana from \"@libsql/hrana-client\";\nimport { LibsqlError } from \"@libsql/core/api\";\nimport { transactionModeToBegin, ResultSetImpl } from \"@libsql/core/util\";\nexport class HranaTransaction {\n    #mode;\n    #version;\n    // Promise that is resolved when the BEGIN statement completes, or `undefined` if we haven't executed the\n    // BEGIN statement yet.\n    #started;\n    /** @private */\n    constructor(mode, version) {\n        this.#mode = mode;\n        this.#version = version;\n        this.#started = undefined;\n    }\n    execute(stmt) {\n        return this.batch([stmt]).then((results) => results[0]);\n    }\n    async batch(stmts) {\n        const stream = this._getStream();\n        if (stream.closed) {\n            throw new LibsqlError(\"Cannot execute statements because the transaction is closed\", \"TRANSACTION_CLOSED\");\n        }\n        try {\n            const hranaStmts = stmts.map(stmtToHrana);\n            let rowsPromises;\n            if (this.#started === undefined) {\n                // The transaction hasn't started yet, so we need to send the BEGIN statement in a batch with\n                // `hranaStmts`.\n                this._getSqlCache().apply(hranaStmts);\n                const batch = stream.batch(this.#version >= 3);\n                const beginStep = batch.step();\n                const beginPromise = beginStep.run(transactionModeToBegin(this.#mode));\n                // Execute the `hranaStmts` only if the BEGIN succeeded, to make sure that we don't execute it\n                // outside of a transaction.\n                let lastStep = beginStep;\n                rowsPromises = hranaStmts.map((hranaStmt) => {\n                    const stmtStep = batch\n                        .step()\n                        .condition(hrana.BatchCond.ok(lastStep));\n                    if (this.#version >= 3) {\n                        // If the Hrana version supports it, make sure that we are still in a transaction\n                        stmtStep.condition(hrana.BatchCond.not(hrana.BatchCond.isAutocommit(batch)));\n                    }\n                    const rowsPromise = stmtStep.query(hranaStmt);\n                    rowsPromise.catch(() => undefined); // silence Node warning\n                    lastStep = stmtStep;\n                    return rowsPromise;\n                });\n                // `this.#started` is resolved successfully only if the batch and the BEGIN statement inside\n                // of the batch are both successful.\n                this.#started = batch\n                    .execute()\n                    .then(() => beginPromise)\n                    .then(() => undefined);\n                try {\n                    await this.#started;\n                }\n                catch (e) {\n                    // If the BEGIN failed, the transaction is unusable and we must close it. However, if the\n                    // BEGIN suceeds and `hranaStmts` fail, the transaction is _not_ closed.\n                    this.close();\n                    throw e;\n                }\n            }\n            else {\n                if (this.#version < 3) {\n                    // The transaction has started, so we must wait until the BEGIN statement completed to make\n                    // sure that we don't execute `hranaStmts` outside of a transaction.\n                    await this.#started;\n                }\n                else {\n                    // The transaction has started, but we will use `hrana.BatchCond.isAutocommit()` to make\n                    // sure that we don't execute `hranaStmts` outside of a transaction, so we don't have to\n                    // wait for `this.#started`\n                }\n                this._getSqlCache().apply(hranaStmts);\n                const batch = stream.batch(this.#version >= 3);\n                let lastStep = undefined;\n                rowsPromises = hranaStmts.map((hranaStmt) => {\n                    const stmtStep = batch.step();\n                    if (lastStep !== undefined) {\n                        stmtStep.condition(hrana.BatchCond.ok(lastStep));\n                    }\n                    if (this.#version >= 3) {\n                        stmtStep.condition(hrana.BatchCond.not(hrana.BatchCond.isAutocommit(batch)));\n                    }\n                    const rowsPromise = stmtStep.query(hranaStmt);\n                    rowsPromise.catch(() => undefined); // silence Node warning\n                    lastStep = stmtStep;\n                    return rowsPromise;\n                });\n                await batch.execute();\n            }\n            const resultSets = [];\n            for (const rowsPromise of rowsPromises) {\n                const rows = await rowsPromise;\n                if (rows === undefined) {\n                    throw new LibsqlError(\"Statement in a transaction was not executed, \" +\n                        \"probably because the transaction has been rolled back\", \"TRANSACTION_CLOSED\");\n                }\n                resultSets.push(resultSetFromHrana(rows));\n            }\n            return resultSets;\n        }\n        catch (e) {\n            throw mapHranaError(e);\n        }\n    }\n    async executeMultiple(sql) {\n        const stream = this._getStream();\n        if (stream.closed) {\n            throw new LibsqlError(\"Cannot execute statements because the transaction is closed\", \"TRANSACTION_CLOSED\");\n        }\n        try {\n            if (this.#started === undefined) {\n                // If the transaction hasn't started yet, start it now\n                this.#started = stream\n                    .run(transactionModeToBegin(this.#mode))\n                    .then(() => undefined);\n                try {\n                    await this.#started;\n                }\n                catch (e) {\n                    this.close();\n                    throw e;\n                }\n            }\n            else {\n                // Wait until the transaction has started\n                await this.#started;\n            }\n            await stream.sequence(sql);\n        }\n        catch (e) {\n            throw mapHranaError(e);\n        }\n    }\n    async rollback() {\n        try {\n            const stream = this._getStream();\n            if (stream.closed) {\n                return;\n            }\n            if (this.#started !== undefined) {\n                // We don't have to wait for the BEGIN statement to complete. If the BEGIN fails, we will\n                // execute a ROLLBACK outside of an active transaction, which should be harmless.\n            }\n            else {\n                // We did nothing in the transaction, so there is nothing to rollback.\n                return;\n            }\n            // Pipeline the ROLLBACK statement and the stream close.\n            const promise = stream.run(\"ROLLBACK\").catch((e) => {\n                throw mapHranaError(e);\n            });\n            stream.closeGracefully();\n            await promise;\n        }\n        catch (e) {\n            throw mapHranaError(e);\n        }\n        finally {\n            // `this.close()` may close the `hrana.Client`, which aborts all pending stream requests, so we\n            // must call it _after_ we receive the ROLLBACK response.\n            // Also note that the current stream should already be closed, but we need to call `this.close()`\n            // anyway, because it may need to do more cleanup.\n            this.close();\n        }\n    }\n    async commit() {\n        // (this method is analogous to `rollback()`)\n        try {\n            const stream = this._getStream();\n            if (stream.closed) {\n                throw new LibsqlError(\"Cannot commit the transaction because it is already closed\", \"TRANSACTION_CLOSED\");\n            }\n            if (this.#started !== undefined) {\n                // Make sure to execute the COMMIT only if the BEGIN was successful.\n                await this.#started;\n            }\n            else {\n                return;\n            }\n            const promise = stream.run(\"COMMIT\").catch((e) => {\n                throw mapHranaError(e);\n            });\n            stream.closeGracefully();\n            await promise;\n        }\n        catch (e) {\n            throw mapHranaError(e);\n        }\n        finally {\n            this.close();\n        }\n    }\n}\nexport async function executeHranaBatch(mode, version, batch, hranaStmts, disableForeignKeys = false) {\n    if (disableForeignKeys) {\n        batch.step().run(\"PRAGMA foreign_keys=off\");\n    }\n    const beginStep = batch.step();\n    const beginPromise = beginStep.run(transactionModeToBegin(mode));\n    let lastStep = beginStep;\n    const stmtPromises = hranaStmts.map((hranaStmt) => {\n        const stmtStep = batch.step().condition(hrana.BatchCond.ok(lastStep));\n        if (version >= 3) {\n            stmtStep.condition(hrana.BatchCond.not(hrana.BatchCond.isAutocommit(batch)));\n        }\n        const stmtPromise = stmtStep.query(hranaStmt);\n        lastStep = stmtStep;\n        return stmtPromise;\n    });\n    const commitStep = batch.step().condition(hrana.BatchCond.ok(lastStep));\n    if (version >= 3) {\n        commitStep.condition(hrana.BatchCond.not(hrana.BatchCond.isAutocommit(batch)));\n    }\n    const commitPromise = commitStep.run(\"COMMIT\");\n    const rollbackStep = batch\n        .step()\n        .condition(hrana.BatchCond.not(hrana.BatchCond.ok(commitStep)));\n    rollbackStep.run(\"ROLLBACK\").catch((_) => undefined);\n    if (disableForeignKeys) {\n        batch.step().run(\"PRAGMA foreign_keys=on\");\n    }\n    await batch.execute();\n    const resultSets = [];\n    await beginPromise;\n    for (const stmtPromise of stmtPromises) {\n        const hranaRows = await stmtPromise;\n        if (hranaRows === undefined) {\n            throw new LibsqlError(\"Statement in a batch was not executed, probably because the transaction has been rolled back\", \"TRANSACTION_CLOSED\");\n        }\n        resultSets.push(resultSetFromHrana(hranaRows));\n    }\n    await commitPromise;\n    return resultSets;\n}\nexport function stmtToHrana(stmt) {\n    if (typeof stmt === \"string\") {\n        return new hrana.Stmt(stmt);\n    }\n    const hranaStmt = new hrana.Stmt(stmt.sql);\n    if (Array.isArray(stmt.args)) {\n        hranaStmt.bindIndexes(stmt.args);\n    }\n    else {\n        for (const [key, value] of Object.entries(stmt.args)) {\n            hranaStmt.bindName(key, value);\n        }\n    }\n    return hranaStmt;\n}\nexport function resultSetFromHrana(hranaRows) {\n    const columns = hranaRows.columnNames.map((c) => c ?? \"\");\n    const columnTypes = hranaRows.columnDecltypes.map((c) => c ?? \"\");\n    const rows = hranaRows.rows;\n    const rowsAffected = hranaRows.affectedRowCount;\n    const lastInsertRowid = hranaRows.lastInsertRowid !== undefined\n        ? hranaRows.lastInsertRowid\n        : undefined;\n    return new ResultSetImpl(columns, columnTypes, rows, rowsAffected, lastInsertRowid);\n}\nexport function mapHranaError(e) {\n    if (e instanceof hrana.ClientError) {\n        const code = mapHranaErrorCode(e);\n        return new LibsqlError(e.message, code, undefined, e);\n    }\n    return e;\n}\nfunction mapHranaErrorCode(e) {\n    if (e instanceof hrana.ResponseError && e.code !== undefined) {\n        return e.code;\n    }\n    else if (e instanceof hrana.ProtoError) {\n        return \"HRANA_PROTO_ERROR\";\n    }\n    else if (e instanceof hrana.ClosedError) {\n        return e.cause instanceof hrana.ClientError\n            ? mapHranaErrorCode(e.cause)\n            : \"HRANA_CLOSED_ERROR\";\n    }\n    else if (e instanceof hrana.WebSocketError) {\n        return \"HRANA_WEBSOCKET_ERROR\";\n    }\n    else if (e instanceof hrana.HttpServerError) {\n        return \"SERVER_ERROR\";\n    }\n    else if (e instanceof hrana.ProtocolVersionError) {\n        return \"PROTOCOL_VERSION_ERROR\";\n    }\n    else if (e instanceof hrana.InternalError) {\n        return \"INTERNAL_ERROR\";\n    }\n    else {\n        return \"UNKNOWN\";\n    }\n}\n","export class SqlCache {\n    #owner;\n    #sqls;\n    capacity;\n    constructor(owner, capacity) {\n        this.#owner = owner;\n        this.#sqls = new Lru();\n        this.capacity = capacity;\n    }\n    // Replaces SQL strings with cached `hrana.Sql` objects in the statements in `hranaStmts`. After this\n    // function returns, we guarantee that all `hranaStmts` refer to valid (not closed) `hrana.Sql` objects,\n    // but _we may invalidate any other `hrana.Sql` objects_ (by closing them, thus removing them from the\n    // server).\n    //\n    // In practice, this means that after calling this function, you can use the statements only up to the\n    // first `await`, because concurrent code may also use the cache and invalidate those statements.\n    apply(hranaStmts) {\n        if (this.capacity <= 0) {\n            return;\n        }\n        const usedSqlObjs = new Set();\n        for (const hranaStmt of hranaStmts) {\n            if (typeof hranaStmt.sql !== \"string\") {\n                continue;\n            }\n            const sqlText = hranaStmt.sql;\n            // Stored SQL cannot exceed 5kb.\n            // https://github.com/tursodatabase/libsql/blob/e9d637e051685f92b0da43849507b5ef4232fbeb/libsql-server/src/hrana/http/request.rs#L10\n            if (sqlText.length >= 5000) {\n                continue;\n            }\n            let sqlObj = this.#sqls.get(sqlText);\n            if (sqlObj === undefined) {\n                while (this.#sqls.size + 1 > this.capacity) {\n                    const [evictSqlText, evictSqlObj] = this.#sqls.peekLru();\n                    if (usedSqlObjs.has(evictSqlObj)) {\n                        // The SQL object that we are trying to evict is already in use in this batch, so we\n                        // must not evict and close it.\n                        break;\n                    }\n                    evictSqlObj.close();\n                    this.#sqls.delete(evictSqlText);\n                }\n                if (this.#sqls.size + 1 <= this.capacity) {\n                    sqlObj = this.#owner.storeSql(sqlText);\n                    this.#sqls.set(sqlText, sqlObj);\n                }\n            }\n            if (sqlObj !== undefined) {\n                hranaStmt.sql = sqlObj;\n                usedSqlObjs.add(sqlObj);\n            }\n        }\n    }\n}\nclass Lru {\n    // This maps keys to the cache values. The entries are ordered by their last use (entires that were used\n    // most recently are at the end).\n    #cache;\n    constructor() {\n        this.#cache = new Map();\n    }\n    get(key) {\n        const value = this.#cache.get(key);\n        if (value !== undefined) {\n            // move the entry to the back of the Map\n            this.#cache.delete(key);\n            this.#cache.set(key, value);\n        }\n        return value;\n    }\n    set(key, value) {\n        this.#cache.set(key, value);\n    }\n    peekLru() {\n        for (const entry of this.#cache.entries()) {\n            return entry;\n        }\n        return undefined;\n    }\n    delete(key) {\n        this.#cache.delete(key);\n    }\n    get size() {\n        return this.#cache.size;\n    }\n}\n","import * as hrana from \"@libsql/hrana-client\";\nimport { LibsqlError } from \"@libsql/core/api\";\nimport { expandConfig } from \"@libsql/core/config\";\nimport { HranaTransaction, executeHranaBatch, stmtToHrana, resultSetFromHrana, mapHranaError, } from \"./hrana.js\";\nimport { SqlCache } from \"./sql_cache.js\";\nimport { encodeBaseUrl } from \"@libsql/core/uri\";\nimport { supportedUrlLink } from \"@libsql/core/util\";\nimport promiseLimit from \"promise-limit\";\nexport * from \"@libsql/core/api\";\nexport function createClient(config) {\n    return _createClient(expandConfig(config, false));\n}\n/** @private */\nexport function _createClient(config) {\n    if (config.scheme !== \"wss\" && config.scheme !== \"ws\") {\n        throw new LibsqlError('The WebSocket client supports only \"libsql:\", \"wss:\" and \"ws:\" URLs, ' +\n            `got ${JSON.stringify(config.scheme + \":\")}. For more information, please read ${supportedUrlLink}`, \"URL_SCHEME_NOT_SUPPORTED\");\n    }\n    if (config.encryptionKey !== undefined) {\n        throw new LibsqlError(\"Encryption key is not supported by the remote client.\", \"ENCRYPTION_KEY_NOT_SUPPORTED\");\n    }\n    if (config.scheme === \"ws\" && config.tls) {\n        throw new LibsqlError(`A \"ws:\" URL cannot opt into TLS by using ?tls=1`, \"URL_INVALID\");\n    }\n    else if (config.scheme === \"wss\" && !config.tls) {\n        throw new LibsqlError(`A \"wss:\" URL cannot opt out of TLS by using ?tls=0`, \"URL_INVALID\");\n    }\n    const url = encodeBaseUrl(config.scheme, config.authority, config.path);\n    let client;\n    try {\n        client = hrana.openWs(url, config.authToken);\n    }\n    catch (e) {\n        if (e instanceof hrana.WebSocketUnsupportedError) {\n            const suggestedScheme = config.scheme === \"wss\" ? \"https\" : \"http\";\n            const suggestedUrl = encodeBaseUrl(suggestedScheme, config.authority, config.path);\n            throw new LibsqlError(\"This environment does not support WebSockets, please switch to the HTTP client by using \" +\n                `a \"${suggestedScheme}:\" URL (${JSON.stringify(suggestedUrl)}). ` +\n                `For more information, please read ${supportedUrlLink}`, \"WEBSOCKETS_NOT_SUPPORTED\");\n        }\n        throw mapHranaError(e);\n    }\n    return new WsClient(client, url, config.authToken, config.intMode, config.concurrency);\n}\nconst maxConnAgeMillis = 60 * 1000;\nconst sqlCacheCapacity = 100;\nexport class WsClient {\n    #url;\n    #authToken;\n    #intMode;\n    // State of the current connection. The `hrana.WsClient` inside may be closed at any moment due to an\n    // asynchronous error.\n    #connState;\n    // If defined, this is a connection that will be used in the future, once it is ready.\n    #futureConnState;\n    closed;\n    protocol;\n    #isSchemaDatabase;\n    #promiseLimitFunction;\n    /** @private */\n    constructor(client, url, authToken, intMode, concurrency) {\n        this.#url = url;\n        this.#authToken = authToken;\n        this.#intMode = intMode;\n        this.#connState = this.#openConn(client);\n        this.#futureConnState = undefined;\n        this.closed = false;\n        this.protocol = \"ws\";\n        this.#promiseLimitFunction = promiseLimit(concurrency);\n    }\n    async limit(fn) {\n        return this.#promiseLimitFunction(fn);\n    }\n    async execute(stmtOrSql, args) {\n        let stmt;\n        if (typeof stmtOrSql === \"string\") {\n            stmt = {\n                sql: stmtOrSql,\n                args: args || [],\n            };\n        }\n        else {\n            stmt = stmtOrSql;\n        }\n        return this.limit(async () => {\n            const streamState = await this.#openStream();\n            try {\n                const hranaStmt = stmtToHrana(stmt);\n                // Schedule all operations synchronously, so they will be pipelined and executed in a single\n                // network roundtrip.\n                streamState.conn.sqlCache.apply([hranaStmt]);\n                const hranaRowsPromise = streamState.stream.query(hranaStmt);\n                streamState.stream.closeGracefully();\n                const hranaRowsResult = await hranaRowsPromise;\n                return resultSetFromHrana(hranaRowsResult);\n            }\n            catch (e) {\n                throw mapHranaError(e);\n            }\n            finally {\n                this._closeStream(streamState);\n            }\n        });\n    }\n    async batch(stmts, mode = \"deferred\") {\n        return this.limit(async () => {\n            const streamState = await this.#openStream();\n            try {\n                const hranaStmts = stmts.map(stmtToHrana);\n                const version = await streamState.conn.client.getVersion();\n                // Schedule all operations synchronously, so they will be pipelined and executed in a single\n                // network roundtrip.\n                streamState.conn.sqlCache.apply(hranaStmts);\n                const batch = streamState.stream.batch(version >= 3);\n                const resultsPromise = executeHranaBatch(mode, version, batch, hranaStmts);\n                const results = await resultsPromise;\n                return results;\n            }\n            catch (e) {\n                throw mapHranaError(e);\n            }\n            finally {\n                this._closeStream(streamState);\n            }\n        });\n    }\n    async migrate(stmts) {\n        return this.limit(async () => {\n            const streamState = await this.#openStream();\n            try {\n                const hranaStmts = stmts.map(stmtToHrana);\n                const version = await streamState.conn.client.getVersion();\n                // Schedule all operations synchronously, so they will be pipelined and executed in a single\n                // network roundtrip.\n                const batch = streamState.stream.batch(version >= 3);\n                const resultsPromise = executeHranaBatch(\"deferred\", version, batch, hranaStmts, true);\n                const results = await resultsPromise;\n                return results;\n            }\n            catch (e) {\n                throw mapHranaError(e);\n            }\n            finally {\n                this._closeStream(streamState);\n            }\n        });\n    }\n    async transaction(mode = \"write\") {\n        return this.limit(async () => {\n            const streamState = await this.#openStream();\n            try {\n                const version = await streamState.conn.client.getVersion();\n                // the BEGIN statement will be batched with the first statement on the transaction to save a\n                // network roundtrip\n                return new WsTransaction(this, streamState, mode, version);\n            }\n            catch (e) {\n                this._closeStream(streamState);\n                throw mapHranaError(e);\n            }\n        });\n    }\n    async executeMultiple(sql) {\n        return this.limit(async () => {\n            const streamState = await this.#openStream();\n            try {\n                // Schedule all operations synchronously, so they will be pipelined and executed in a single\n                // network roundtrip.\n                const promise = streamState.stream.sequence(sql);\n                streamState.stream.closeGracefully();\n                await promise;\n            }\n            catch (e) {\n                throw mapHranaError(e);\n            }\n            finally {\n                this._closeStream(streamState);\n            }\n        });\n    }\n    sync() {\n        throw new LibsqlError(\"sync not supported in ws mode\", \"SYNC_NOT_SUPPORTED\");\n    }\n    async #openStream() {\n        if (this.closed) {\n            throw new LibsqlError(\"The client is closed\", \"CLIENT_CLOSED\");\n        }\n        const now = new Date();\n        const ageMillis = now.valueOf() - this.#connState.openTime.valueOf();\n        if (ageMillis > maxConnAgeMillis &&\n            this.#futureConnState === undefined) {\n            // The existing connection is too old, let's open a new one.\n            const futureConnState = this.#openConn();\n            this.#futureConnState = futureConnState;\n            // However, if we used `futureConnState` immediately, we would introduce additional latency,\n            // because we would have to wait for the WebSocket handshake to complete, even though we may a\n            // have perfectly good existing connection in `this.#connState`!\n            //\n            // So we wait until the `hrana.Client.getVersion()` operation completes (which happens when the\n            // WebSocket hanshake completes), and only then we replace `this.#connState` with\n            // `futureConnState`, which is stored in `this.#futureConnState` in the meantime.\n            futureConnState.client.getVersion().then((_version) => {\n                if (this.#connState !== futureConnState) {\n                    // We need to close `this.#connState` before we replace it. However, it is possible\n                    // that `this.#connState` has already been replaced: see the code below.\n                    if (this.#connState.streamStates.size === 0) {\n                        this.#connState.client.close();\n                    }\n                    else {\n                        // If there are existing streams on the connection, we must not close it, because\n                        // these streams would be broken. The last stream to be closed will also close the\n                        // connection in `_closeStream()`.\n                    }\n                }\n                this.#connState = futureConnState;\n                this.#futureConnState = undefined;\n            }, (_e) => {\n                // If the new connection could not be established, let's just ignore the error and keep\n                // using the existing connection.\n                this.#futureConnState = undefined;\n            });\n        }\n        if (this.#connState.client.closed) {\n            // An error happened on this connection and it has been closed. Let's try to seamlessly reconnect.\n            try {\n                if (this.#futureConnState !== undefined) {\n                    // We are already in the process of opening a new connection, so let's just use it\n                    // immediately.\n                    this.#connState = this.#futureConnState;\n                }\n                else {\n                    this.#connState = this.#openConn();\n                }\n            }\n            catch (e) {\n                throw mapHranaError(e);\n            }\n        }\n        const connState = this.#connState;\n        try {\n            // Now we wait for the WebSocket handshake to complete (if it hasn't completed yet). Note that\n            // this does not increase latency, because any messages that we would send on the WebSocket before\n            // the handshake would be queued until the handshake is completed anyway.\n            if (connState.useSqlCache === undefined) {\n                connState.useSqlCache =\n                    (await connState.client.getVersion()) >= 2;\n                if (connState.useSqlCache) {\n                    connState.sqlCache.capacity = sqlCacheCapacity;\n                }\n            }\n            const stream = connState.client.openStream();\n            stream.intMode = this.#intMode;\n            const streamState = { conn: connState, stream };\n            connState.streamStates.add(streamState);\n            return streamState;\n        }\n        catch (e) {\n            throw mapHranaError(e);\n        }\n    }\n    #openConn(client) {\n        try {\n            client ??= hrana.openWs(this.#url, this.#authToken);\n            return {\n                client,\n                useSqlCache: undefined,\n                sqlCache: new SqlCache(client, 0),\n                openTime: new Date(),\n                streamStates: new Set(),\n            };\n        }\n        catch (e) {\n            throw mapHranaError(e);\n        }\n    }\n    _closeStream(streamState) {\n        streamState.stream.close();\n        const connState = streamState.conn;\n        connState.streamStates.delete(streamState);\n        if (connState.streamStates.size === 0 &&\n            connState !== this.#connState) {\n            // We are not using this connection anymore and this is the last stream that was using it, so we\n            // must close it now.\n            connState.client.close();\n        }\n    }\n    close() {\n        this.#connState.client.close();\n        this.closed = true;\n    }\n}\nexport class WsTransaction extends HranaTransaction {\n    #client;\n    #streamState;\n    /** @private */\n    constructor(client, state, mode, version) {\n        super(mode, version);\n        this.#client = client;\n        this.#streamState = state;\n    }\n    /** @private */\n    _getStream() {\n        return this.#streamState.stream;\n    }\n    /** @private */\n    _getSqlCache() {\n        return this.#streamState.conn.sqlCache;\n    }\n    close() {\n        this.#client._closeStream(this.#streamState);\n    }\n    get closed() {\n        return this.#streamState.stream.closed;\n    }\n}\n","import * as hrana from \"@libsql/hrana-client\";\nimport { LibsqlError } from \"@libsql/core/api\";\nimport { expandConfig } from \"@libsql/core/config\";\nimport { HranaTransaction, executeHranaBatch, stmtToHrana, resultSetFromHrana, mapHranaError, } from \"./hrana.js\";\nimport { SqlCache } from \"./sql_cache.js\";\nimport { encodeBaseUrl } from \"@libsql/core/uri\";\nimport { supportedUrlLink } from \"@libsql/core/util\";\nimport promiseLimit from \"promise-limit\";\nexport * from \"@libsql/core/api\";\nexport function createClient(config) {\n    return _createClient(expandConfig(config, true));\n}\n/** @private */\nexport function _createClient(config) {\n    if (config.scheme !== \"https\" && config.scheme !== \"http\") {\n        throw new LibsqlError('The HTTP client supports only \"libsql:\", \"https:\" and \"http:\" URLs, ' +\n            `got ${JSON.stringify(config.scheme + \":\")}. For more information, please read ${supportedUrlLink}`, \"URL_SCHEME_NOT_SUPPORTED\");\n    }\n    if (config.encryptionKey !== undefined) {\n        throw new LibsqlError(\"Encryption key is not supported by the remote client.\", \"ENCRYPTION_KEY_NOT_SUPPORTED\");\n    }\n    if (config.scheme === \"http\" && config.tls) {\n        throw new LibsqlError(`A \"http:\" URL cannot opt into TLS by using ?tls=1`, \"URL_INVALID\");\n    }\n    else if (config.scheme === \"https\" && !config.tls) {\n        throw new LibsqlError(`A \"https:\" URL cannot opt out of TLS by using ?tls=0`, \"URL_INVALID\");\n    }\n    const url = encodeBaseUrl(config.scheme, config.authority, config.path);\n    return new HttpClient(url, config.authToken, config.intMode, config.fetch, config.concurrency);\n}\nconst sqlCacheCapacity = 30;\nexport class HttpClient {\n    #client;\n    protocol;\n    #authToken;\n    #promiseLimitFunction;\n    /** @private */\n    constructor(url, authToken, intMode, customFetch, concurrency) {\n        this.#client = hrana.openHttp(url, authToken, customFetch);\n        this.#client.intMode = intMode;\n        this.protocol = \"http\";\n        this.#authToken = authToken;\n        this.#promiseLimitFunction = promiseLimit(concurrency);\n    }\n    async limit(fn) {\n        return this.#promiseLimitFunction(fn);\n    }\n    async execute(stmtOrSql, args) {\n        let stmt;\n        if (typeof stmtOrSql === \"string\") {\n            stmt = {\n                sql: stmtOrSql,\n                args: args || [],\n            };\n        }\n        else {\n            stmt = stmtOrSql;\n        }\n        return this.limit(async () => {\n            try {\n                const hranaStmt = stmtToHrana(stmt);\n                // Pipeline all operations, so `hrana.HttpClient` can open the stream, execute the statement and\n                // close the stream in a single HTTP request.\n                let rowsPromise;\n                const stream = this.#client.openStream();\n                try {\n                    rowsPromise = stream.query(hranaStmt);\n                }\n                finally {\n                    stream.closeGracefully();\n                }\n                const rowsResult = await rowsPromise;\n                return resultSetFromHrana(rowsResult);\n            }\n            catch (e) {\n                throw mapHranaError(e);\n            }\n        });\n    }\n    async batch(stmts, mode = \"deferred\") {\n        return this.limit(async () => {\n            try {\n                const hranaStmts = stmts.map(stmtToHrana);\n                const version = await this.#client.getVersion();\n                // Pipeline all operations, so `hrana.HttpClient` can open the stream, execute the batch and\n                // close the stream in a single HTTP request.\n                let resultsPromise;\n                const stream = this.#client.openStream();\n                try {\n                    // It makes sense to use a SQL cache even for a single batch, because it may contain the same\n                    // statement repeated multiple times.\n                    const sqlCache = new SqlCache(stream, sqlCacheCapacity);\n                    sqlCache.apply(hranaStmts);\n                    // TODO: we do not use a cursor here, because it would cause three roundtrips:\n                    // 1. pipeline request to store SQL texts\n                    // 2. cursor request\n                    // 3. pipeline request to close the stream\n                    const batch = stream.batch(false);\n                    resultsPromise = executeHranaBatch(mode, version, batch, hranaStmts);\n                }\n                finally {\n                    stream.closeGracefully();\n                }\n                const results = await resultsPromise;\n                return results;\n            }\n            catch (e) {\n                throw mapHranaError(e);\n            }\n        });\n    }\n    async migrate(stmts) {\n        return this.limit(async () => {\n            try {\n                const hranaStmts = stmts.map(stmtToHrana);\n                const version = await this.#client.getVersion();\n                // Pipeline all operations, so `hrana.HttpClient` can open the stream, execute the batch and\n                // close the stream in a single HTTP request.\n                let resultsPromise;\n                const stream = this.#client.openStream();\n                try {\n                    const batch = stream.batch(false);\n                    resultsPromise = executeHranaBatch(\"deferred\", version, batch, hranaStmts, true);\n                }\n                finally {\n                    stream.closeGracefully();\n                }\n                const results = await resultsPromise;\n                return results;\n            }\n            catch (e) {\n                throw mapHranaError(e);\n            }\n        });\n    }\n    async transaction(mode = \"write\") {\n        return this.limit(async () => {\n            try {\n                const version = await this.#client.getVersion();\n                return new HttpTransaction(this.#client.openStream(), mode, version);\n            }\n            catch (e) {\n                throw mapHranaError(e);\n            }\n        });\n    }\n    async executeMultiple(sql) {\n        return this.limit(async () => {\n            try {\n                // Pipeline all operations, so `hrana.HttpClient` can open the stream, execute the sequence and\n                // close the stream in a single HTTP request.\n                let promise;\n                const stream = this.#client.openStream();\n                try {\n                    promise = stream.sequence(sql);\n                }\n                finally {\n                    stream.closeGracefully();\n                }\n                await promise;\n            }\n            catch (e) {\n                throw mapHranaError(e);\n            }\n        });\n    }\n    sync() {\n        throw new LibsqlError(\"sync not supported in http mode\", \"SYNC_NOT_SUPPORTED\");\n    }\n    close() {\n        this.#client.close();\n    }\n    get closed() {\n        return this.#client.closed;\n    }\n}\nexport class HttpTransaction extends HranaTransaction {\n    #stream;\n    #sqlCache;\n    /** @private */\n    constructor(stream, mode, version) {\n        super(mode, version);\n        this.#stream = stream;\n        this.#sqlCache = new SqlCache(stream, sqlCacheCapacity);\n    }\n    /** @private */\n    _getStream() {\n        return this.#stream;\n    }\n    /** @private */\n    _getSqlCache() {\n        return this.#sqlCache;\n    }\n    close() {\n        this.#stream.close();\n    }\n    get closed() {\n        return this.#stream.closed;\n    }\n}\n","import { expandConfig } from \"@libsql/core/config\";\nimport { _createClient as _createSqlite3Client } from \"./sqlite3.js\";\nimport { _createClient as _createWsClient } from \"./ws.js\";\nimport { _createClient as _createHttpClient } from \"./http.js\";\nexport * from \"@libsql/core/api\";\n/** Creates a {@link Client} object.\n *\n * You must pass at least an `url` in the {@link Config} object.\n */\nexport function createClient(config) {\n    return _createClient(expandConfig(config, true));\n}\nfunction _createClient(config) {\n    if (config.scheme === \"wss\" || config.scheme === \"ws\") {\n        return _createWsClient(config);\n    }\n    else if (config.scheme === \"https\" || config.scheme === \"http\") {\n        return _createHttpClient(config);\n    }\n    else {\n        return _createSqlite3Client(config);\n    }\n}\n","/**\n * Copyright © Adobe, Inc. All rights reserved.\n */\n\nimport { createClient } from \"@libsql/client\";\nimport { Model, Options, ExecuteResult, Attribute } from './types';\n\nclass Database {\n    private connection: any;\n\n    constructor(url: string, token: string) {\n        this.connection = createClient({\n            url: url,\n            authToken: token\n        });\n    }\n\n    define(name: string, attributes: Record<string, Attribute>): void {\n        (this as any)[name] = {\n            name: name,\n            attributes: attributes,\n        };\n    }\n\n    async createTable(model: Model): Promise<void> {\n        const columns = Object.entries(model.attributes)\n            .map(([_, attr]) => `${attr.name} ${attr.type}`)\n            .join(', ');\n        const query = `CREATE TABLE ${model.name} (${columns})`;\n        await this.execute({ sql: query, args: [] });\n    }\n\n    async select(model: Model, options: Options = {}): Promise<any[]> {\n        const attributes = options.attributes || Object.keys(model.attributes).map(key => model.attributes[key].name);\n        const where = options.where ? `WHERE ${options.where}` : '';\n        const query = `SELECT ${attributes.join(', ')} FROM ${model.name} ${where}`;\n        const result: ExecuteResult = await this.execute({ sql: query, args: [] });\n        return result.rows;\n    }\n\n    async insert(model: Model, data: Record<string, any>): Promise<void> {\n        const attributes = Object.keys(data);\n        const values = attributes.map(attribute => '?').join(', ');\n        const query = `INSERT INTO ${model.name} (${attributes.join(', ')}) VALUES (${values})`;\n        await this.execute({ sql: query, args: Object.values(data) });\n    }\n\n    async update(model: Model, data: Record<string, any>, options: Options = {}): Promise<void> {\n        const attributes = Object.keys(data);\n        const values = attributes.map(attribute => `${attribute} = ?`).join(', ');\n        const where = options.where ? `WHERE ${options.where}` : '';\n        const query = `UPDATE ${model.name} SET ${values} ${where}`;\n        await this.execute({ sql: query, args: Object.values(data) });\n    }\n\n    async delete(model: Model, options: Options = {}): Promise<void> {\n        const where = options.where ? `WHERE ${options.where}` : '';\n        const query = `DELETE FROM ${model.name} ${where}`;\n        await this.execute({ sql: query, args: [] });\n    }\n\n    async execute(query: { sql: string; args: any[] }): Promise<ExecuteResult> {\n        return await this.connection.execute(query);\n    }\n}\n\nexport default Database;\n"],"mappings":"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","names":["exports","exports","module","exports","module","exports","module","family","version","exports","module","exports","module","Database","authToken","exports","module","createWebSocketStream","err","exports","module","exports","module","exports","module","exports","module","data","exports","module","exports","module","Receiver","exports","module","Sender","exports","module","exports","module","exports","module","URL","Receiver","Sender","WebSocket","key","exports","module","protocol","exports","module","WebSocket","WebSocketServer","version","exports","module","encodeURI","Database","_intMode","checkNotClosed_fn","array","_array","_view","_pos","freeId","minInteger","maxInteger","_closed","entry","_client","_closed","Stmt","Batch","BatchStep","BatchCond","Request","Stmt","Batch","Stmt","Value","NamedArg","Batch","BatchStep","BatchCond","ClientMsg","Stmt","Batch","Error","Value","Error","Error","StmtResult","Col","Value","BatchResult","CursorEntry","DescribeResult","DescribeParam","DescribeCol","ServerMsg","Error","StmtResult","BatchResult","CursorEntry","DescribeResult","_closed","setClosed_fn","ClientMsg","ServerMsg","_array","Error","PipelineRespBody","StreamResult","StreamResponse","Error","StmtResult","BatchResult","DescribeResult","CursorRespBody","_stream","_reader","_queue","_closed","_done","CursorRespBody","CursorEntry","Stmt","Batch","PipelineReqBody","StreamRequest","CloseStreamReq","Stmt","Batch","CursorReqBody","_client","_fetch","_queue","_cursor","_closing","_closed","_sqlIdAlloc","sendStreamRequest_fn","pushToQueue_fn","flushQueue_fn","fetch","PipelineReqBody","CursorReqBody","PipelineRespBody","_jwt","_fetch","_closed","setClosed_fn","fetch","WebSocket","version","_owner","_createClient","WsClient","_url","_intMode","_WsClient_instances","promiseLimit","version","_version","_client","import_promise_limit","_createClient","HttpClient","sqlCacheCapacity","_client","_authToken","_promiseLimitFunction","promiseLimit","version","_stream","_createClient","Database"]}